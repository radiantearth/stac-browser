"use strict";(self["webpackChunk_radiantearth_stac_browser"]=self["webpackChunk_radiantearth_stac_browser"]||[]).push([[3355],{14693:function(t,e,r){var s=r(71225),n=r(24778),i=r(4087);class o{constructor(){this.globalCounter_=0,this.refToFeature_=new Map,this.uidToRef_=new Map,this.freeGlobalRef_=[],this.polygonBatch={entries:{},geometriesCount:0,verticesCount:0,ringsCount:0},this.pointBatch={entries:{},geometriesCount:0},this.lineStringBatch={entries:{},geometriesCount:0,verticesCount:0}}addFeatures(t,e){for(let r=0;r<t.length;r++)this.addFeature(t[r],e)}addFeature(t,e){let r=t.getGeometry();r&&(e&&(r=r.clone(),r.applyTransform(e)),this.addGeometry_(r,t))}clearFeatureEntryInPointBatch_(t){const e=(0,i.v6)(t),r=this.pointBatch.entries[e];if(r)return this.pointBatch.geometriesCount-=r.flatCoordss.length,delete this.pointBatch.entries[e],r}clearFeatureEntryInLineStringBatch_(t){const e=(0,i.v6)(t),r=this.lineStringBatch.entries[e];if(r)return this.lineStringBatch.verticesCount-=r.verticesCount,this.lineStringBatch.geometriesCount-=r.flatCoordss.length,delete this.lineStringBatch.entries[e],r}clearFeatureEntryInPolygonBatch_(t){const e=(0,i.v6)(t),r=this.polygonBatch.entries[e];if(r)return this.polygonBatch.verticesCount-=r.verticesCount,this.polygonBatch.ringsCount-=r.ringsCount,this.polygonBatch.geometriesCount-=r.flatCoordss.length,delete this.polygonBatch.entries[e],r}addGeometry_(t,e){const r=t.getType();switch(r){case"GeometryCollection":{const r=t.getGeometriesArray();for(const t of r)this.addGeometry_(t,e);break}case"MultiPolygon":{const s=t;this.addCoordinates_(r,s.getFlatCoordinates(),s.getEndss(),e,(0,i.v6)(e),s.getStride());break}case"MultiLineString":{const s=t;this.addCoordinates_(r,s.getFlatCoordinates(),s.getEnds(),e,(0,i.v6)(e),s.getStride());break}case"MultiPoint":{const s=t;this.addCoordinates_(r,s.getFlatCoordinates(),null,e,(0,i.v6)(e),s.getStride());break}case"Polygon":{const s=t;this.addCoordinates_(r,s.getFlatCoordinates(),s.getEnds(),e,(0,i.v6)(e),s.getStride());break}case"Point":{const s=t;this.addCoordinates_(r,s.getFlatCoordinates(),null,e,(0,i.v6)(e),s.getStride());break}case"LineString":case"LinearRing":{const s=t,n=s.getStride();this.addCoordinates_(r,s.getFlatCoordinates(),null,e,(0,i.v6)(e),n,s.getLayout?.());break}default:}}addCoordinates_(t,e,r,i,o,h,u){let c;switch(t){case"MultiPolygon":{const t=r;for(let r=0,s=t.length;r<s;r++){let s=t[r];const n=r>0?t[r-1]:null,a=n?n[n.length-1]:0,l=s[s.length-1];s=a>0?s.map(t=>t-a):s,this.addCoordinates_("Polygon",e.slice(a,l),s,i,o,h,u)}break}case"MultiLineString":{const t=r;for(let r=0,s=t.length;r<s;r++){const s=r>0?t[r-1]:0;this.addCoordinates_("LineString",e.slice(s,t[r]),null,i,o,h,u)}break}case"MultiPoint":for(let t=0,r=e.length;t<r;t+=h)this.addCoordinates_("Point",e.slice(t,t+2),null,i,o,null,null);break;case"Polygon":{const t=r;if(i instanceof n.Ay){const r=(0,s.yJ)(e,t);if(r.length>1)return void this.addCoordinates_("MultiPolygon",e,r,i,o,h,u)}this.polygonBatch.entries[o]||(this.polygonBatch.entries[o]=this.addRefToEntry_(o,{feature:i,flatCoordss:[],verticesCount:0,ringsCount:0,ringsVerticesCounts:[]})),c=e.length/h;const l=r.length,f=r.map((t,e,r)=>e>0?(t-r[e-1])/h:t/h);this.polygonBatch.verticesCount+=c,this.polygonBatch.ringsCount+=l,this.polygonBatch.geometriesCount++,this.polygonBatch.entries[o].flatCoordss.push(a(e,h)),this.polygonBatch.entries[o].ringsVerticesCounts.push(f),this.polygonBatch.entries[o].verticesCount+=c,this.polygonBatch.entries[o].ringsCount+=l;for(let r=0,s=t.length;r<s;r++){const s=r>0?t[r-1]:0;this.addCoordinates_("LinearRing",e.slice(s,t[r]),null,i,o,h,u)}break}case"Point":this.pointBatch.entries[o]||(this.pointBatch.entries[o]=this.addRefToEntry_(o,{feature:i,flatCoordss:[]})),this.pointBatch.geometriesCount++,this.pointBatch.entries[o].flatCoordss.push(e);break;case"LineString":case"LinearRing":this.lineStringBatch.entries[o]||(this.lineStringBatch.entries[o]=this.addRefToEntry_(o,{feature:i,flatCoordss:[],verticesCount:0})),c=e.length/h,this.lineStringBatch.verticesCount+=c,this.lineStringBatch.geometriesCount++,this.lineStringBatch.entries[o].flatCoordss.push(l(e,h,u)),this.lineStringBatch.entries[o].verticesCount+=c;break;default:}}addRefToEntry_(t,e){const r=this.uidToRef_.get(t),s=r||this.freeGlobalRef_.pop()||++this.globalCounter_;return e.ref=s,r||(this.refToFeature_.set(s,e.feature),this.uidToRef_.set(t,s)),e}removeRef_(t,e){if(!t)throw new Error("This feature has no ref: "+e);this.refToFeature_.delete(t),this.uidToRef_.delete(e),this.freeGlobalRef_.push(t)}changeFeature(t,e){if(!this.uidToRef_.get((0,i.v6)(t)))return;this.removeFeature(t);let r=t.getGeometry();r&&(e&&(r=r.clone(),r.applyTransform(e)),this.addGeometry_(r,t))}removeFeature(t){let e=this.clearFeatureEntryInPointBatch_(t);e=this.clearFeatureEntryInPolygonBatch_(t)||e,e=this.clearFeatureEntryInLineStringBatch_(t)||e,e&&this.removeRef_(e.ref,(0,i.v6)(e.feature))}clear(){this.polygonBatch.entries={},this.polygonBatch.geometriesCount=0,this.polygonBatch.verticesCount=0,this.polygonBatch.ringsCount=0,this.lineStringBatch.entries={},this.lineStringBatch.geometriesCount=0,this.lineStringBatch.verticesCount=0,this.pointBatch.entries={},this.pointBatch.geometriesCount=0,this.globalCounter_=0,this.freeGlobalRef_=[],this.refToFeature_.clear(),this.uidToRef_.clear()}getFeatureFromRef(t){return this.refToFeature_.get(t)}isEmpty(){return 0===this.globalCounter_}filter(t){const e=new o;e.globalCounter_=this.globalCounter_,e.uidToRef_=this.uidToRef_,e.refToFeature_=this.refToFeature_;let r=!0;for(const s of this.refToFeature_.values())t(s)&&(e.addFeature(s),r=!1);return r?new o:e}}function a(t,e){return 2===e?t:t.filter((t,r)=>r%e<2)}function l(t,e,r){return 3===e&&"XYM"===r?t:4===e?t.filter((t,r)=>r%e!==2):3===e?t.map((t,r)=>r%e!==2?t:0):new Array(1.5*t.length).fill(0).map((e,r)=>r%3===2?0:t[Math.round(r/1.5)])}e.A=o},65567:function(t,e,r){r.d(e,{A:function(){return A}});var s=r(409),n=r(49825),i=r(9703),o=r(20259),a=r(63722),l=r(90130),h=r(35339),u=r(835),c=r(3422),f=r(27557),g=r(87622);function d(t,e,r,s){let n=0;for(const i in e){const o=e[i],a=o.callback.call(r,r.feature);let l=a?.[0]??a;l===f.t7&&console.warn('The "has" operator might return false positives.'),void 0===l?l=f.t7:null===l&&(l=0),t[s+n++]=l,o.size&&1!==o.size&&(t[s+n++]=a[1],o.size<3||(t[s+n++]=a[2],o.size<4||(t[s+n++]=a[3])))}return n}function _(t){return Object.keys(t).reduce((e,r)=>e+(t[r].size||1),0)}function p(t,e,r,s){const n=(2+_(r))*t.geometriesCount;e&&e.length===n||(e=new Float32Array(n));const o=[];let a=0;for(const l in t.entries){const n=t.entries[l];for(let t=0,l=n.flatCoordss.length;t<l;t++)o[0]=n.flatCoordss[t][0],o[1]=n.flatCoordss[t][1],(0,i.Bb)(s,o),e[a++]=o[0],e[a++]=o[1],a+=d(e,r,n,a)}return e}function m(t,e,r,s){const n=3*t.verticesCount+(1+_(r))*t.geometriesCount;e&&e.length===n||(e=new Float32Array(n));const i=[];let o=0;for(const a in t.entries){const n=t.entries[a];for(let t=0,a=n.flatCoordss.length;t<a;t++){i.length=n.flatCoordss[t].length,(0,g.Rc)(n.flatCoordss[t],0,i.length,3,s,i,3),o+=d(e,r,n,o),e[o++]=i.length/3;for(let t=0,r=i.length;t<r;t+=3)e[o++]=i[t],e[o++]=i[t+1],e[o++]=i[t+2]}}return e}function y(t,e,r,s){const n=2*t.verticesCount+(1+_(r))*t.geometriesCount+t.ringsCount;e&&e.length===n||(e=new Float32Array(n));const i=[];let o=0;for(const a in t.entries){const n=t.entries[a];for(let t=0,a=n.flatCoordss.length;t<a;t++){i.length=n.flatCoordss[t].length,(0,g.Rc)(n.flatCoordss[t],0,i.length,2,s,i),o+=d(e,r,n,o),e[o++]=n.ringsVerticesCounts[t].length;for(let r=0,s=n.ringsVerticesCounts[t].length;r<s;r++)e[o++]=n.ringsVerticesCounts[t][r];for(let t=0,r=i.length;t<r;t+=2)e[o++]=i[t],e[o++]=i[t+1]}}return e}var S=r(71259);const B=[];let C;function b(){return C||(C=(0,h.v)()),C}let F=0;const T={POSITION:"a_position",INDEX:"a_index",SEGMENT_START:"a_segmentStart",SEGMENT_END:"a_segmentEnd",MEASURE_START:"a_measureStart",MEASURE_END:"a_measureEnd",PARAMETERS:"a_parameters",JOIN_ANGLES:"a_joinAngles",DISTANCE:"a_distance"};class E{constructor(t,e,r,s,n){this.helper_,this.hitDetectionEnabled_=!!s;let i=t;const o="builder"in t;if(!o){const r=t,s=(0,S.my)(r.style,e,r.filter);i={builder:s.builder,attributes:s.attributes,uniforms:s.uniforms}}this.fillProgram_,this.strokeProgram_,this.symbolProgram_,this.hasFill_=!!i.builder.getFillVertexShader(),this.hasFill_&&(this.fillVertexShader_=i.builder.getFillVertexShader(),this.fillFragmentShader_=i.builder.getFillFragmentShader()),this.hasStroke_=!!i.builder.getStrokeVertexShader(),this.hasStroke_&&(this.strokeVertexShader_=i.builder.getStrokeVertexShader(),this.strokeFragmentShader_=i.builder.getStrokeFragmentShader()),this.hasSymbol_=!!i.builder.getSymbolVertexShader(),this.hasSymbol_&&(this.symbolVertexShader_=i.builder.getSymbolVertexShader(),this.symbolFragmentShader_=i.builder.getSymbolFragmentShader()),this.featureFilter_=null,n&&(this.featureFilter_=this.computeFeatureFilter(n));const l=this.hitDetectionEnabled_?{hitColor:{callback(){return(0,c.b)(this.ref,B)},size:4}}:{};this.customAttributes_=Object.assign({},l,i.attributes),this.uniforms_=i.uniforms;const h=Object.entries(this.customAttributes_).map(([t,e])=>({name:`a_${t}`,size:e.size||1,type:a.jQ.FLOAT}));this.polygonAttributesDesc_=[{name:T.POSITION,size:2,type:a.jQ.FLOAT},...h],this.lineStringAttributesDesc_=[{name:T.SEGMENT_START,size:2,type:a.jQ.FLOAT},{name:T.MEASURE_START,size:1,type:a.jQ.FLOAT},{name:T.SEGMENT_END,size:2,type:a.jQ.FLOAT},{name:T.MEASURE_END,size:1,type:a.jQ.FLOAT},{name:T.JOIN_ANGLES,size:2,type:a.jQ.FLOAT},{name:T.DISTANCE,size:1,type:a.jQ.FLOAT},{name:T.PARAMETERS,size:1,type:a.jQ.FLOAT},...h],this.pointAttributesDesc_=[{name:T.POSITION,size:2,type:a.jQ.FLOAT},{name:T.INDEX,size:1,type:a.jQ.FLOAT},...h],this.setHelper(r)}computeFeatureFilter(t){const e=(0,n.SR)();let r;try{r=(0,s.n)(t,n.T8,e)}catch{return null}if(e.mapState||e.variables.size>0)return null;const i=(0,s.A)();return t=>{if(i.properties=t.getPropertiesInternal(),e.featureId){const e=t.getId();i.featureId=void 0!==e?e:null}return i.geometryType=(0,n.Ye)(t.getGeometry()),r(i)}}async generateBuffers(t,e){let r=t;if(this.featureFilter_&&(r=r.filter(this.featureFilter_),r.isEmpty()))return null;const s=this.generateRenderInstructions_(r,e),[n,o,a]=await Promise.all([this.generateBuffersForType_(s.polygonInstructions,"Polygon",e),this.generateBuffersForType_(s.lineStringInstructions,"LineString",e),this.generateBuffersForType_(s.pointInstructions,"Point",e)]),l=(0,i.T9)((0,i.vt)(),e);return{polygonBuffers:n,lineStringBuffers:o,pointBuffers:a,invertVerticesTransform:l}}generateRenderInstructions_(t,e){const r=this.hasFill_?y(t.polygonBatch,new Float32Array(0),this.customAttributes_,e):null,s=this.hasStroke_?m(t.lineStringBatch,new Float32Array(0),this.customAttributes_,e):null,n=this.hasSymbol_?p(t.pointBatch,new Float32Array(0),this.customAttributes_,e):null;return{polygonInstructions:r,lineStringInstructions:s,pointInstructions:n}}generateBuffersForType_(t,e,r){if(null===t)return null;const s=F++;let n;switch(e){case"Polygon":n=u.x.GENERATE_POLYGON_BUFFERS;break;case"LineString":n=u.x.GENERATE_LINE_STRING_BUFFERS;break;case"Point":n=u.x.GENERATE_POINT_BUFFERS;break;default:}const i={id:s,type:n,renderInstructions:t.buffer,renderInstructionsTransform:r,customAttributesSize:_(this.customAttributes_)},a=b();return a.postMessage(i,[t.buffer]),t=null,new Promise(t=>{const e=r=>{const n=r.data;if(n.id!==s)return;if(a.removeEventListener("message",e),!this.helper_.getGL())return;const i=new o.Ay(l.H7,l.Be).fromArrayBuffer(n.vertexBuffer),h=new o.Ay(l.IP,l.Be).fromArrayBuffer(n.indexBuffer);this.helper_.flushBufferData(i),this.helper_.flushBufferData(h),t([h,i])};a.addEventListener("message",e)})}render(t,e,r){this.hasFill_&&this.renderInternal_(t.polygonBuffers[0],t.polygonBuffers[1],this.fillProgram_,this.polygonAttributesDesc_,e,r),this.hasStroke_&&this.renderInternal_(t.lineStringBuffers[0],t.lineStringBuffers[1],this.strokeProgram_,this.lineStringAttributesDesc_,e,r),this.hasSymbol_&&this.renderInternal_(t.pointBuffers[0],t.pointBuffers[1],this.symbolProgram_,this.pointAttributesDesc_,e,r)}renderInternal_(t,e,r,s,n,i){const o=t.getSize();0!==o&&(this.helper_.useProgram(r,n),this.helper_.bindBuffer(e),this.helper_.bindBuffer(t),this.helper_.enableAttributes(s),i(),this.helper_.drawElements(0,o))}setHelper(t,e=null){this.helper_=t,this.hasFill_&&(this.fillProgram_=this.helper_.getProgram(this.fillFragmentShader_,this.fillVertexShader_)),this.hasStroke_&&(this.strokeProgram_=this.helper_.getProgram(this.strokeFragmentShader_,this.strokeVertexShader_)),this.hasSymbol_&&(this.symbolProgram_=this.helper_.getProgram(this.symbolFragmentShader_,this.symbolVertexShader_)),this.helper_.addUniforms(this.uniforms_),e&&(e.polygonBuffers&&(this.helper_.flushBufferData(e.polygonBuffers[0]),this.helper_.flushBufferData(e.polygonBuffers[1])),e.lineStringBuffers&&(this.helper_.flushBufferData(e.lineStringBuffers[0]),this.helper_.flushBufferData(e.lineStringBuffers[1])),e.pointBuffers&&(this.helper_.flushBufferData(e.pointBuffers[0]),this.helper_.flushBufferData(e.pointBuffers[1])))}}var A=E}}]);
//# sourceMappingURL=3355.b186ad1c.js.map