{"version":3,"file":"js/8631.eca5ed5d.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/ol/source/TileJSON.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/BaseTile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/Tile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/Image.js","webpack://@radiantearth/stac-browser/./node_modules/pbf/index.js","webpack://@radiantearth/stac-browser/./node_modules/ol/format/MVT.js","webpack://@radiantearth/stac-browser/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/BaseImage.js","webpack://@radiantearth/stac-browser/./node_modules/ol/net.js"],"sourcesContent":["/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n"],"names":["TileJSON","constructor","options","super","attributions","cacheSize","crossOrigin","interpolate","projection","reprojectionErrorThreshold","state","tileLoadFunction","wrapX","undefined","transition","zDirection","this","tileJSON_","tileSize_","tileSize","url","jsonp","handleTileJSONResponse","bind","handleTileJSONError","client","XMLHttpRequest","addEventListener","onXHRLoad_","onXHRError_","open","send","tileJSON","Error","event","status","response","JSON","parse","responseText","getTileJSON","epsg4326Projection","sourceProjection","getProjection","extent","transform","gridExtent","minZoom","maxZoom","tileGrid","tileUrlFunction","getAttributions","attributionExtent","setAttributions","frameState","setState","BaseTileLayer","baseOptions","Object","assign","preload","useInterimTilesOnError","on","once","un","cacheSize_","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","get","PRELOAD","set","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","getData","pixel","TileLayer","createRenderer","ImageLayer","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","TextDecoder","PBF_VARINT","PBF_FIXED64","PBF_BYTES","PBF_FIXED32","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","buffer","pos","type","length","readFields","readField","result","end","val","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","b","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8","readBytes","readPackedVarint","arr","readPackedEnd","push","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","min","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","Math","floor","writeSFixed64","writeBigVarint","writeSVarint","writeBoolean","writeString","str","String","writeUtf8","len","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","i","writeRawMessage","fn","obj","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","l","s","p","h","toNum","low","high","pbf","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","log","LN2","b0","b1","b2","b3","c","bytesPerSequence","fromCharCode","lead","charCodeAt","MVT","dataProjection","Projection","code","units","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","layers","idProperty_","idProperty","supportedMediaTypes","readRawGeometry_","feature","flatCoordinates","ends","geometry","cmd","x","y","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","values","properties","id","layer","name","geometryType","getGeometryType","geom","endss","MultiPolygon","Polygon","Point","LineString","MultiPoint","MultiLineString","ctor","setGeometryName","setGeometry","setId","setProperties","getType","readFeatures","source","adaptOptions","setWorldExtent","pbfLayers","layersPBFReader","features","includes","pbfLayer","setExtent","ii","readRawFeature","readProjection","setLayers","keys","layerPBFReader","version","value","featurePBFReader","key","numEnds","CanvasImageLayerRenderer","imageLayer","image","getImage","prepareFrame","layerState","layerStatesArray","layerIndex","pixelRatio","viewState","viewResolution","resolution","imageSource","getLayer","getSource","hints","viewHints","renderedExtent","ANIMATING","INTERACTING","loadImage","getState","EMPTY","coordinate","pixelToCoordinateTransform","slice","layerExtent","getExtent","imageExtent","img","imageMapWidth","col","width","imageMapHeight","row","height","getImageData","renderFrame","target","imageResolution","getResolution","imageResolutionX","imageResolutionY","Array","isArray","imagePixelRatio","getPixelRatio","viewCenter","center","scaleX","scaleY","prepareContainer","context","canvas","getRenderContext","clipped","render","clipUnrotated","tempTransform","renderedResolution","dw","dh","getInterpolate","imageSmoothingEnabled","preRender","dx","dy","opacity","save","globalAlpha","drawImage","restore","postRender","container","BaseImageLayer","callback","errback","callbackParam","script","document","createElement","cleanup","window","parentNode","removeChild","async","src","timer","setTimeout","data","clearTimeout","head","appendChild","ResponseError","message","ClientError","getJSON","Promise","resolve","reject","onLoad","err","onError","setRequestHeader","resolveUrl","base","URL","href"],"sourceRoot":""}