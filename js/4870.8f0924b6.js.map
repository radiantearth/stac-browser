{"version":3,"file":"js/4870.8f0924b6.js","mappings":"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A,EACRC,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNC,SAAUA,EACVC,KAAMA,EACNC,IAAKA,EACLC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,GACVC,SAAUA,GACVC,SAAUA,GACVC,SAAUA,GACVC,SAAUA,GACVC,SAAUA,GACVC,SAAUA,GACVC,OAAQA,GACRC,MAAOA,GACPC,QAASA,GACTC,SAAUA,GACVC,OAAQA,GACRC,MAAOA,GACPC,QAASA,GACTC,MAAOA,GACPC,MAAOA,GACPC,KAAMA,GACNC,KAAMA,GACNC,OAAQA,GACRC,GAAIA,GACJC,IAAKA,GACLC,IAAKA,GACLC,KAAMA,GACNC,KAAMA,GACNC,cAAeA,GACfC,OAAQA,GACRC,SAAUA,GACVC,MAAOA,GACPC,MAAOA,GACPC,KAAMA,GACNC,KAAMA,GACNC,OAAQA,GACRC,IAAKA,GACLC,MAAOA,GACPC,QAASA,GACTC,OAAQA,GACRC,OAAQA,GACRC,KAAMA,GACNC,KAAMA,GACNC,SAAUA,GACVC,MAAOA,GACPC,SAAUA,GACVC,YAAaA,GACbC,UAAWA,GACXC,QAASA,GACTC,UAAWA,GACXC,UAAWA,GACXC,KAAMA,GACNC,OAAQA,GACRC,OAAQA,GACRC,OAAQA,GACRC,SAAUA,GACVC,KAAMA,GACNC,SAAUA,GACVC,MAAOA,GACPC,IAAKA,GACLC,IAAKA,GACLC,MAAOA,GACPC,OAAQA,GACRC,QAASA,GACTC,QAASA,GACTC,QAASA,GACTC,MAAOA,GACPC,OAAQA,GACRC,WAAYA,GACZC,KAAMA,GACNC,KAAMA,GACNC,KAAMA,GACNC,QAASA,GACTC,IAAKA,GACLC,IAAKA,GACLC,OAAQA,GACRC,QAASA,GACTC,OAAQA,GACRC,QAASA,GACTC,SAAUA,GACVC,UAAWA,GACXC,SAAUA,GACVC,QAASA,GACTC,gBAAiBA,GACjBC,cAAeA,GACfC,SAAUA,GACVC,OAAQA,GACRC,SAAUA,GACVC,OAAQA,GACRC,aAAcA,GACdC,YAAaA,GACbC,cAAeA,GACfC,kBAAmBA,GACnBC,kBAAmBA,GA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AAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAi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","sources":["webpack://@radiantearth/stac-browser/./node_modules/multihashes/src/index.js","webpack://@radiantearth/stac-browser/./node_modules/multibase/src/base.js","webpack://@radiantearth/stac-browser/./node_modules/multibase/src/util.js","webpack://@radiantearth/stac-browser/./node_modules/@multiformats/base-x/src/index.js","webpack://@radiantearth/stac-browser/./node_modules/uint8arrays/from-string.js","webpack://@radiantearth/stac-browser/./node_modules/varint/decode.js","webpack://@radiantearth/stac-browser/./node_modules/varint/length.js","webpack://@radiantearth/stac-browser/./node_modules/@radiantearth/stac-fields/node_modules/commonmark/dist/commonmark.js","webpack://@radiantearth/stac-browser/./node_modules/@radiantearth/stac-fields/interface.js","webpack://@radiantearth/stac-browser/./node_modules/uint8arrays/concat.js","webpack://@radiantearth/stac-browser/./node_modules/uint8arrays/to-string.js","webpack://@radiantearth/stac-browser/./node_modules/multihashes/src/constants.js","webpack://@radiantearth/stac-browser/./node_modules/varint/index.js","webpack://@radiantearth/stac-browser/./node_modules/web-encoding/src/lib.js","webpack://@radiantearth/stac-browser/./node_modules/multibase/src/constants.js","webpack://@radiantearth/stac-browser/./node_modules/@radiantearth/stac-fields/index.js","webpack://@radiantearth/stac-browser/./node_modules/uint8arrays/util/bases.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/vendor/base-x.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bytes.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/identity.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base2.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base8.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base10.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base16.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base32.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base36.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base58.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base64.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/bases/base256emoji.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/vendor/varint.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/varint.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/hashes/digest.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/hashes/hasher.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/hashes/sha2-browser.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/hashes/identity.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/codecs/raw.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/codecs/json.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/cid.js","webpack://@radiantearth/stac-browser/./node_modules/multiformats/esm/src/basics.js","webpack://@radiantearth/stac-browser/./node_modules/varint/encode.js","webpack://@radiantearth/stac-browser/./node_modules/multibase/src/index.js","webpack://@radiantearth/stac-browser/./node_modules/multibase/src/rfc4648.js"],"sourcesContent":["/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes: Object.freeze(codes),\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n","'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n","'use strict'\n\n// @ts-ignore\nconst { TextEncoder, TextDecoder } = require('web-encoding')\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {string} string\n * @param {SupportedEncodings} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\n * @returns {Uint8Array}\n */\nfunction fromString (string, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`)\n}\n\nmodule.exports = fromString\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","/* commonmark 0.29 https://github.com/commonmark/commonmark.js @license BSD3 */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = global || self, factory(global.commonmark = {}));\n}(this, (function (exports) { 'use strict';\n\n    function isContainer(node) {\n        switch (node._type) {\n            case \"document\":\n            case \"block_quote\":\n            case \"list\":\n            case \"item\":\n            case \"paragraph\":\n            case \"heading\":\n            case \"emph\":\n            case \"strong\":\n            case \"link\":\n            case \"image\":\n            case \"custom_inline\":\n            case \"custom_block\":\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    var resumeAt = function(node, entering) {\n        this.current = node;\n        this.entering = entering === true;\n    };\n\n    var next = function() {\n        var cur = this.current;\n        var entering = this.entering;\n\n        if (cur === null) {\n            return null;\n        }\n\n        var container = isContainer(cur);\n\n        if (entering && container) {\n            if (cur._firstChild) {\n                this.current = cur._firstChild;\n                this.entering = true;\n            } else {\n                // stay on node but exit\n                this.entering = false;\n            }\n        } else if (cur === this.root) {\n            this.current = null;\n        } else if (cur._next === null) {\n            this.current = cur._parent;\n            this.entering = false;\n        } else {\n            this.current = cur._next;\n            this.entering = true;\n        }\n\n        return { entering: entering, node: cur };\n    };\n\n    var NodeWalker = function(root) {\n        return {\n            current: root,\n            root: root,\n            entering: true,\n            next: next,\n            resumeAt: resumeAt\n        };\n    };\n\n    var Node = function(nodeType, sourcepos) {\n        this._type = nodeType;\n        this._parent = null;\n        this._firstChild = null;\n        this._lastChild = null;\n        this._prev = null;\n        this._next = null;\n        this._sourcepos = sourcepos;\n        this._lastLineBlank = false;\n        this._lastLineChecked = false;\n        this._open = true;\n        this._string_content = null;\n        this._literal = null;\n        this._listData = {};\n        this._info = null;\n        this._destination = null;\n        this._title = null;\n        this._isFenced = false;\n        this._fenceChar = null;\n        this._fenceLength = 0;\n        this._fenceOffset = null;\n        this._level = null;\n        this._onEnter = null;\n        this._onExit = null;\n    };\n\n    var proto = Node.prototype;\n\n    Object.defineProperty(proto, \"isContainer\", {\n        get: function() {\n            return isContainer(this);\n        }\n    });\n\n    Object.defineProperty(proto, \"type\", {\n        get: function() {\n            return this._type;\n        }\n    });\n\n    Object.defineProperty(proto, \"firstChild\", {\n        get: function() {\n            return this._firstChild;\n        }\n    });\n\n    Object.defineProperty(proto, \"lastChild\", {\n        get: function() {\n            return this._lastChild;\n        }\n    });\n\n    Object.defineProperty(proto, \"next\", {\n        get: function() {\n            return this._next;\n        }\n    });\n\n    Object.defineProperty(proto, \"prev\", {\n        get: function() {\n            return this._prev;\n        }\n    });\n\n    Object.defineProperty(proto, \"parent\", {\n        get: function() {\n            return this._parent;\n        }\n    });\n\n    Object.defineProperty(proto, \"sourcepos\", {\n        get: function() {\n            return this._sourcepos;\n        }\n    });\n\n    Object.defineProperty(proto, \"literal\", {\n        get: function() {\n            return this._literal;\n        },\n        set: function(s) {\n            this._literal = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"destination\", {\n        get: function() {\n            return this._destination;\n        },\n        set: function(s) {\n            this._destination = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"title\", {\n        get: function() {\n            return this._title;\n        },\n        set: function(s) {\n            this._title = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"info\", {\n        get: function() {\n            return this._info;\n        },\n        set: function(s) {\n            this._info = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"level\", {\n        get: function() {\n            return this._level;\n        },\n        set: function(s) {\n            this._level = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"listType\", {\n        get: function() {\n            return this._listData.type;\n        },\n        set: function(t) {\n            this._listData.type = t;\n        }\n    });\n\n    Object.defineProperty(proto, \"listTight\", {\n        get: function() {\n            return this._listData.tight;\n        },\n        set: function(t) {\n            this._listData.tight = t;\n        }\n    });\n\n    Object.defineProperty(proto, \"listStart\", {\n        get: function() {\n            return this._listData.start;\n        },\n        set: function(n) {\n            this._listData.start = n;\n        }\n    });\n\n    Object.defineProperty(proto, \"listDelimiter\", {\n        get: function() {\n            return this._listData.delimiter;\n        },\n        set: function(delim) {\n            this._listData.delimiter = delim;\n        }\n    });\n\n    Object.defineProperty(proto, \"onEnter\", {\n        get: function() {\n            return this._onEnter;\n        },\n        set: function(s) {\n            this._onEnter = s;\n        }\n    });\n\n    Object.defineProperty(proto, \"onExit\", {\n        get: function() {\n            return this._onExit;\n        },\n        set: function(s) {\n            this._onExit = s;\n        }\n    });\n\n    Node.prototype.appendChild = function(child) {\n        child.unlink();\n        child._parent = this;\n        if (this._lastChild) {\n            this._lastChild._next = child;\n            child._prev = this._lastChild;\n            this._lastChild = child;\n        } else {\n            this._firstChild = child;\n            this._lastChild = child;\n        }\n    };\n\n    Node.prototype.prependChild = function(child) {\n        child.unlink();\n        child._parent = this;\n        if (this._firstChild) {\n            this._firstChild._prev = child;\n            child._next = this._firstChild;\n            this._firstChild = child;\n        } else {\n            this._firstChild = child;\n            this._lastChild = child;\n        }\n    };\n\n    Node.prototype.unlink = function() {\n        if (this._prev) {\n            this._prev._next = this._next;\n        } else if (this._parent) {\n            this._parent._firstChild = this._next;\n        }\n        if (this._next) {\n            this._next._prev = this._prev;\n        } else if (this._parent) {\n            this._parent._lastChild = this._prev;\n        }\n        this._parent = null;\n        this._next = null;\n        this._prev = null;\n    };\n\n    Node.prototype.insertAfter = function(sibling) {\n        sibling.unlink();\n        sibling._next = this._next;\n        if (sibling._next) {\n            sibling._next._prev = sibling;\n        }\n        sibling._prev = this;\n        this._next = sibling;\n        sibling._parent = this._parent;\n        if (!sibling._next) {\n            sibling._parent._lastChild = sibling;\n        }\n    };\n\n    Node.prototype.insertBefore = function(sibling) {\n        sibling.unlink();\n        sibling._prev = this._prev;\n        if (sibling._prev) {\n            sibling._prev._next = sibling;\n        }\n        sibling._next = this;\n        this._prev = sibling;\n        sibling._parent = this._parent;\n        if (!sibling._prev) {\n            sibling._parent._firstChild = sibling;\n        }\n    };\n\n    Node.prototype.walker = function() {\n        var walker = new NodeWalker(this);\n        return walker;\n    };\n\n    /* Example of use of walker:\n\n     var walker = w.walker();\n     var event;\n\n     while (event = walker.next()) {\n     console.log(event.entering, event.node.type);\n     }\n\n     */\n\n    var encodeCache = {};\n\n\n    // Create a lookup array where anything but characters in `chars` string\n    // and alphanumeric chars is percent-encoded.\n    //\n    function getEncodeCache(exclude) {\n      var i, ch, cache = encodeCache[exclude];\n      if (cache) { return cache; }\n\n      cache = encodeCache[exclude] = [];\n\n      for (i = 0; i < 128; i++) {\n        ch = String.fromCharCode(i);\n\n        if (/^[0-9a-z]$/i.test(ch)) {\n          // always allow unencoded alphanumeric characters\n          cache.push(ch);\n        } else {\n          cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n        }\n      }\n\n      for (i = 0; i < exclude.length; i++) {\n        cache[exclude.charCodeAt(i)] = exclude[i];\n      }\n\n      return cache;\n    }\n\n\n    // Encode unsafe characters with percent-encoding, skipping already\n    // encoded sequences.\n    //\n    //  - string       - string to encode\n    //  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n    //  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n    //\n    function encode(string, exclude, keepEscaped) {\n      var i, l, code, nextCode, cache,\n          result = '';\n\n      if (typeof exclude !== 'string') {\n        // encode(string, keepEscaped)\n        keepEscaped  = exclude;\n        exclude = encode.defaultChars;\n      }\n\n      if (typeof keepEscaped === 'undefined') {\n        keepEscaped = true;\n      }\n\n      cache = getEncodeCache(exclude);\n\n      for (i = 0, l = string.length; i < l; i++) {\n        code = string.charCodeAt(i);\n\n        if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n          if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n            result += string.slice(i, i + 3);\n            i += 2;\n            continue;\n          }\n        }\n\n        if (code < 128) {\n          result += cache[code];\n          continue;\n        }\n\n        if (code >= 0xD800 && code <= 0xDFFF) {\n          if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n            nextCode = string.charCodeAt(i + 1);\n            if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n              result += encodeURIComponent(string[i] + string[i + 1]);\n              i++;\n              continue;\n            }\n          }\n          result += '%EF%BF%BD';\n          continue;\n        }\n\n        result += encodeURIComponent(string[i]);\n      }\n\n      return result;\n    }\n\n    encode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\n    encode.componentChars = \"-_.!~*'()\";\n\n\n    var encode_1 = encode;\n\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    function unwrapExports (x) {\n    \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n    }\n\n    function createCommonjsModule(fn, module) {\n    \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n    }\n\n    function getCjsExportFromNamespace (n) {\n    \treturn n && n['default'] || n;\n    }\n\n    var Aacute = \"Á\";\n    var aacute = \"á\";\n    var Abreve = \"Ă\";\n    var abreve = \"ă\";\n    var ac = \"∾\";\n    var acd = \"∿\";\n    var acE = \"∾̳\";\n    var Acirc = \"Â\";\n    var acirc = \"â\";\n    var acute = \"´\";\n    var Acy = \"А\";\n    var acy = \"а\";\n    var AElig = \"Æ\";\n    var aelig = \"æ\";\n    var af = \"⁡\";\n    var Afr = \"𝔄\";\n    var afr = \"𝔞\";\n    var Agrave = \"À\";\n    var agrave = \"à\";\n    var alefsym = \"ℵ\";\n    var aleph = \"ℵ\";\n    var Alpha = \"Α\";\n    var alpha = \"α\";\n    var Amacr = \"Ā\";\n    var amacr = \"ā\";\n    var amalg = \"⨿\";\n    var amp = \"&\";\n    var AMP = \"&\";\n    var andand = \"⩕\";\n    var And = \"⩓\";\n    var and = \"∧\";\n    var andd = \"⩜\";\n    var andslope = \"⩘\";\n    var andv = \"⩚\";\n    var ang = \"∠\";\n    var ange = \"⦤\";\n    var angle = \"∠\";\n    var angmsdaa = \"⦨\";\n    var angmsdab = \"⦩\";\n    var angmsdac = \"⦪\";\n    var angmsdad = \"⦫\";\n    var angmsdae = \"⦬\";\n    var angmsdaf = \"⦭\";\n    var angmsdag = \"⦮\";\n    var angmsdah = \"⦯\";\n    var angmsd = \"∡\";\n    var angrt = \"∟\";\n    var angrtvb = \"⊾\";\n    var angrtvbd = \"⦝\";\n    var angsph = \"∢\";\n    var angst = \"Å\";\n    var angzarr = \"⍼\";\n    var Aogon = \"Ą\";\n    var aogon = \"ą\";\n    var Aopf = \"𝔸\";\n    var aopf = \"𝕒\";\n    var apacir = \"⩯\";\n    var ap = \"≈\";\n    var apE = \"⩰\";\n    var ape = \"≊\";\n    var apid = \"≋\";\n    var apos = \"'\";\n    var ApplyFunction = \"⁡\";\n    var approx = \"≈\";\n    var approxeq = \"≊\";\n    var Aring = \"Å\";\n    var aring = \"å\";\n    var Ascr = \"𝒜\";\n    var ascr = \"𝒶\";\n    var Assign = \"≔\";\n    var ast = \"*\";\n    var asymp = \"≈\";\n    var asympeq = \"≍\";\n    var Atilde = \"Ã\";\n    var atilde = \"ã\";\n    var Auml = \"Ä\";\n    var auml = \"ä\";\n    var awconint = \"∳\";\n    var awint = \"⨑\";\n    var backcong = \"≌\";\n    var backepsilon = \"϶\";\n    var backprime = \"‵\";\n    var backsim = \"∽\";\n    var backsimeq = \"⋍\";\n    var Backslash = \"∖\";\n    var Barv = \"⫧\";\n    var barvee = \"⊽\";\n    var barwed = \"⌅\";\n    var Barwed = \"⌆\";\n    var barwedge = \"⌅\";\n    var bbrk = \"⎵\";\n    var bbrktbrk = \"⎶\";\n    var bcong = \"≌\";\n    var Bcy = \"Б\";\n    var bcy = \"б\";\n    var bdquo = \"„\";\n    var becaus = \"∵\";\n    var because = \"∵\";\n    var Because = \"∵\";\n    var bemptyv = \"⦰\";\n    var bepsi = \"϶\";\n    var bernou = \"ℬ\";\n    var Bernoullis = \"ℬ\";\n    var Beta = \"Β\";\n    var beta = \"β\";\n    var beth = \"ℶ\";\n    var between = \"≬\";\n    var Bfr = \"𝔅\";\n    var bfr = \"𝔟\";\n    var bigcap = \"⋂\";\n    var bigcirc = \"◯\";\n    var bigcup = \"⋃\";\n    var bigodot = \"⨀\";\n    var bigoplus = \"⨁\";\n    var bigotimes = \"⨂\";\n    var bigsqcup = \"⨆\";\n    var bigstar = \"★\";\n    var bigtriangledown = \"▽\";\n    var bigtriangleup = \"△\";\n    var biguplus = \"⨄\";\n    var bigvee = \"⋁\";\n    var bigwedge = \"⋀\";\n    var bkarow = \"⤍\";\n    var blacklozenge = \"⧫\";\n    var blacksquare = \"▪\";\n    var blacktriangle = \"▴\";\n    var blacktriangledown = \"▾\";\n    var blacktriangleleft = \"◂\";\n    var blacktriangleright = \"▸\";\n    var blank = \"␣\";\n    var blk12 = \"▒\";\n    var blk14 = \"░\";\n    var blk34 = \"▓\";\n    var block = \"█\";\n    var bne = \"=⃥\";\n    var bnequiv = \"≡⃥\";\n    var bNot = \"⫭\";\n    var bnot = \"⌐\";\n    var Bopf = \"𝔹\";\n    var bopf = \"𝕓\";\n    var bot = \"⊥\";\n    var bottom = \"⊥\";\n    var bowtie = \"⋈\";\n    var boxbox = \"⧉\";\n    var boxdl = \"┐\";\n    var boxdL = \"╕\";\n    var boxDl = \"╖\";\n    var boxDL = \"╗\";\n    var boxdr = \"┌\";\n    var boxdR = \"╒\";\n    var boxDr = \"╓\";\n    var boxDR = \"╔\";\n    var boxh = \"─\";\n    var boxH = \"═\";\n    var boxhd = \"┬\";\n    var boxHd = \"╤\";\n    var boxhD = \"╥\";\n    var boxHD = \"╦\";\n    var boxhu = \"┴\";\n    var boxHu = \"╧\";\n    var boxhU = \"╨\";\n    var boxHU = \"╩\";\n    var boxminus = \"⊟\";\n    var boxplus = \"⊞\";\n    var boxtimes = \"⊠\";\n    var boxul = \"┘\";\n    var boxuL = \"╛\";\n    var boxUl = \"╜\";\n    var boxUL = \"╝\";\n    var boxur = \"└\";\n    var boxuR = \"╘\";\n    var boxUr = \"╙\";\n    var boxUR = \"╚\";\n    var boxv = \"│\";\n    var boxV = \"║\";\n    var boxvh = \"┼\";\n    var boxvH = \"╪\";\n    var boxVh = \"╫\";\n    var boxVH = \"╬\";\n    var boxvl = \"┤\";\n    var boxvL = \"╡\";\n    var boxVl = \"╢\";\n    var boxVL = \"╣\";\n    var boxvr = \"├\";\n    var boxvR = \"╞\";\n    var boxVr = \"╟\";\n    var boxVR = \"╠\";\n    var bprime = \"‵\";\n    var breve = \"˘\";\n    var Breve = \"˘\";\n    var brvbar = \"¦\";\n    var bscr = \"𝒷\";\n    var Bscr = \"ℬ\";\n    var bsemi = \"⁏\";\n    var bsim = \"∽\";\n    var bsime = \"⋍\";\n    var bsolb = \"⧅\";\n    var bsol = \"\\\\\";\n    var bsolhsub = \"⟈\";\n    var bull = \"•\";\n    var bullet = \"•\";\n    var bump = \"≎\";\n    var bumpE = \"⪮\";\n    var bumpe = \"≏\";\n    var Bumpeq = \"≎\";\n    var bumpeq = \"≏\";\n    var Cacute = \"Ć\";\n    var cacute = \"ć\";\n    var capand = \"⩄\";\n    var capbrcup = \"⩉\";\n    var capcap = \"⩋\";\n    var cap = \"∩\";\n    var Cap = \"⋒\";\n    var capcup = \"⩇\";\n    var capdot = \"⩀\";\n    var CapitalDifferentialD = \"ⅅ\";\n    var caps = \"∩︀\";\n    var caret = \"⁁\";\n    var caron = \"ˇ\";\n    var Cayleys = \"ℭ\";\n    var ccaps = \"⩍\";\n    var Ccaron = \"Č\";\n    var ccaron = \"č\";\n    var Ccedil = \"Ç\";\n    var ccedil = \"ç\";\n    var Ccirc = \"Ĉ\";\n    var ccirc = \"ĉ\";\n    var Cconint = \"∰\";\n    var ccups = \"⩌\";\n    var ccupssm = \"⩐\";\n    var Cdot = \"Ċ\";\n    var cdot = \"ċ\";\n    var cedil = \"¸\";\n    var Cedilla = \"¸\";\n    var cemptyv = \"⦲\";\n    var cent = \"¢\";\n    var centerdot = \"·\";\n    var CenterDot = \"·\";\n    var cfr = \"𝔠\";\n    var Cfr = \"ℭ\";\n    var CHcy = \"Ч\";\n    var chcy = \"ч\";\n    var check = \"✓\";\n    var checkmark = \"✓\";\n    var Chi = \"Χ\";\n    var chi = \"χ\";\n    var circ = \"ˆ\";\n    var circeq = \"≗\";\n    var circlearrowleft = \"↺\";\n    var circlearrowright = \"↻\";\n    var circledast = \"⊛\";\n    var circledcirc = \"⊚\";\n    var circleddash = \"⊝\";\n    var CircleDot = \"⊙\";\n    var circledR = \"®\";\n    var circledS = \"Ⓢ\";\n    var CircleMinus = \"⊖\";\n    var CirclePlus = \"⊕\";\n    var CircleTimes = \"⊗\";\n    var cir = \"○\";\n    var cirE = \"⧃\";\n    var cire = \"≗\";\n    var cirfnint = \"⨐\";\n    var cirmid = \"⫯\";\n    var cirscir = \"⧂\";\n    var ClockwiseContourIntegral = \"∲\";\n    var CloseCurlyDoubleQuote = \"”\";\n    var CloseCurlyQuote = \"’\";\n    var clubs = \"♣\";\n    var clubsuit = \"♣\";\n    var colon = \":\";\n    var Colon = \"∷\";\n    var Colone = \"⩴\";\n    var colone = \"≔\";\n    var coloneq = \"≔\";\n    var comma = \",\";\n    var commat = \"@\";\n    var comp = \"∁\";\n    var compfn = \"∘\";\n    var complement = \"∁\";\n    var complexes = \"ℂ\";\n    var cong = \"≅\";\n    var congdot = \"⩭\";\n    var Congruent = \"≡\";\n    var conint = \"∮\";\n    var Conint = \"∯\";\n    var ContourIntegral = \"∮\";\n    var copf = \"𝕔\";\n    var Copf = \"ℂ\";\n    var coprod = \"∐\";\n    var Coproduct = \"∐\";\n    var copy = \"©\";\n    var COPY = \"©\";\n    var copysr = \"℗\";\n    var CounterClockwiseContourIntegral = \"∳\";\n    var crarr = \"↵\";\n    var cross = \"✗\";\n    var Cross = \"⨯\";\n    var Cscr = \"𝒞\";\n    var cscr = \"𝒸\";\n    var csub = \"⫏\";\n    var csube = \"⫑\";\n    var csup = \"⫐\";\n    var csupe = \"⫒\";\n    var ctdot = \"⋯\";\n    var cudarrl = \"⤸\";\n    var cudarrr = \"⤵\";\n    var cuepr = \"⋞\";\n    var cuesc = \"⋟\";\n    var cularr = \"↶\";\n    var cularrp = \"⤽\";\n    var cupbrcap = \"⩈\";\n    var cupcap = \"⩆\";\n    var CupCap = \"≍\";\n    var cup = \"∪\";\n    var Cup = \"⋓\";\n    var cupcup = \"⩊\";\n    var cupdot = \"⊍\";\n    var cupor = \"⩅\";\n    var cups = \"∪︀\";\n    var curarr = \"↷\";\n    var curarrm = \"⤼\";\n    var curlyeqprec = \"⋞\";\n    var curlyeqsucc = \"⋟\";\n    var curlyvee = \"⋎\";\n    var curlywedge = \"⋏\";\n    var curren = \"¤\";\n    var curvearrowleft = \"↶\";\n    var curvearrowright = \"↷\";\n    var cuvee = \"⋎\";\n    var cuwed = \"⋏\";\n    var cwconint = \"∲\";\n    var cwint = \"∱\";\n    var cylcty = \"⌭\";\n    var dagger = \"†\";\n    var Dagger = \"‡\";\n    var daleth = \"ℸ\";\n    var darr = \"↓\";\n    var Darr = \"↡\";\n    var dArr = \"⇓\";\n    var dash = \"‐\";\n    var Dashv = \"⫤\";\n    var dashv = \"⊣\";\n    var dbkarow = \"⤏\";\n    var dblac = \"˝\";\n    var Dcaron = \"Ď\";\n    var dcaron = \"ď\";\n    var Dcy = \"Д\";\n    var dcy = \"д\";\n    var ddagger = \"‡\";\n    var ddarr = \"⇊\";\n    var DD = \"ⅅ\";\n    var dd = \"ⅆ\";\n    var DDotrahd = \"⤑\";\n    var ddotseq = \"⩷\";\n    var deg = \"°\";\n    var Del = \"∇\";\n    var Delta = \"Δ\";\n    var delta = \"δ\";\n    var demptyv = \"⦱\";\n    var dfisht = \"⥿\";\n    var Dfr = \"𝔇\";\n    var dfr = \"𝔡\";\n    var dHar = \"⥥\";\n    var dharl = \"⇃\";\n    var dharr = \"⇂\";\n    var DiacriticalAcute = \"´\";\n    var DiacriticalDot = \"˙\";\n    var DiacriticalDoubleAcute = \"˝\";\n    var DiacriticalGrave = \"`\";\n    var DiacriticalTilde = \"˜\";\n    var diam = \"⋄\";\n    var diamond = \"⋄\";\n    var Diamond = \"⋄\";\n    var diamondsuit = \"♦\";\n    var diams = \"♦\";\n    var die = \"¨\";\n    var DifferentialD = \"ⅆ\";\n    var digamma = \"ϝ\";\n    var disin = \"⋲\";\n    var div = \"÷\";\n    var divide = \"÷\";\n    var divideontimes = \"⋇\";\n    var divonx = \"⋇\";\n    var DJcy = \"Ђ\";\n    var djcy = \"ђ\";\n    var dlcorn = \"⌞\";\n    var dlcrop = \"⌍\";\n    var dollar = \"$\";\n    var Dopf = \"𝔻\";\n    var dopf = \"𝕕\";\n    var Dot = \"¨\";\n    var dot = \"˙\";\n    var DotDot = \"⃜\";\n    var doteq = \"≐\";\n    var doteqdot = \"≑\";\n    var DotEqual = \"≐\";\n    var dotminus = \"∸\";\n    var dotplus = \"∔\";\n    var dotsquare = \"⊡\";\n    var doublebarwedge = \"⌆\";\n    var DoubleContourIntegral = \"∯\";\n    var DoubleDot = \"¨\";\n    var DoubleDownArrow = \"⇓\";\n    var DoubleLeftArrow = \"⇐\";\n    var DoubleLeftRightArrow = \"⇔\";\n    var DoubleLeftTee = \"⫤\";\n    var DoubleLongLeftArrow = \"⟸\";\n    var DoubleLongLeftRightArrow = \"⟺\";\n    var DoubleLongRightArrow = \"⟹\";\n    var DoubleRightArrow = \"⇒\";\n    var DoubleRightTee = \"⊨\";\n    var DoubleUpArrow = \"⇑\";\n    var DoubleUpDownArrow = \"⇕\";\n    var DoubleVerticalBar = \"∥\";\n    var DownArrowBar = \"⤓\";\n    var downarrow = \"↓\";\n    var DownArrow = \"↓\";\n    var Downarrow = \"⇓\";\n    var DownArrowUpArrow = \"⇵\";\n    var DownBreve = \"̑\";\n    var downdownarrows = \"⇊\";\n    var downharpoonleft = \"⇃\";\n    var downharpoonright = \"⇂\";\n    var DownLeftRightVector = \"⥐\";\n    var DownLeftTeeVector = \"⥞\";\n    var DownLeftVectorBar = \"⥖\";\n    var DownLeftVector = \"↽\";\n    var DownRightTeeVector = \"⥟\";\n    var DownRightVectorBar = \"⥗\";\n    var DownRightVector = \"⇁\";\n    var DownTeeArrow = \"↧\";\n    var DownTee = \"⊤\";\n    var drbkarow = \"⤐\";\n    var drcorn = \"⌟\";\n    var drcrop = \"⌌\";\n    var Dscr = \"𝒟\";\n    var dscr = \"𝒹\";\n    var DScy = \"Ѕ\";\n    var dscy = \"ѕ\";\n    var dsol = \"⧶\";\n    var Dstrok = \"Đ\";\n    var dstrok = \"đ\";\n    var dtdot = \"⋱\";\n    var dtri = \"▿\";\n    var dtrif = \"▾\";\n    var duarr = \"⇵\";\n    var duhar = \"⥯\";\n    var dwangle = \"⦦\";\n    var DZcy = \"Џ\";\n    var dzcy = \"џ\";\n    var dzigrarr = \"⟿\";\n    var Eacute = \"É\";\n    var eacute = \"é\";\n    var easter = \"⩮\";\n    var Ecaron = \"Ě\";\n    var ecaron = \"ě\";\n    var Ecirc = \"Ê\";\n    var ecirc = \"ê\";\n    var ecir = \"≖\";\n    var ecolon = \"≕\";\n    var Ecy = \"Э\";\n    var ecy = \"э\";\n    var eDDot = \"⩷\";\n    var Edot = \"Ė\";\n    var edot = \"ė\";\n    var eDot = \"≑\";\n    var ee = \"ⅇ\";\n    var efDot = \"≒\";\n    var Efr = \"𝔈\";\n    var efr = \"𝔢\";\n    var eg = \"⪚\";\n    var Egrave = \"È\";\n    var egrave = \"è\";\n    var egs = \"⪖\";\n    var egsdot = \"⪘\";\n    var el = \"⪙\";\n    var Element = \"∈\";\n    var elinters = \"⏧\";\n    var ell = \"ℓ\";\n    var els = \"⪕\";\n    var elsdot = \"⪗\";\n    var Emacr = \"Ē\";\n    var emacr = \"ē\";\n    var empty = \"∅\";\n    var emptyset = \"∅\";\n    var EmptySmallSquare = \"◻\";\n    var emptyv = \"∅\";\n    var EmptyVerySmallSquare = \"▫\";\n    var emsp13 = \" \";\n    var emsp14 = \" \";\n    var emsp = \" \";\n    var ENG = \"Ŋ\";\n    var eng = \"ŋ\";\n    var ensp = \" \";\n    var Eogon = \"Ę\";\n    var eogon = \"ę\";\n    var Eopf = \"𝔼\";\n    var eopf = \"𝕖\";\n    var epar = \"⋕\";\n    var eparsl = \"⧣\";\n    var eplus = \"⩱\";\n    var epsi = \"ε\";\n    var Epsilon = \"Ε\";\n    var epsilon = \"ε\";\n    var epsiv = \"ϵ\";\n    var eqcirc = \"≖\";\n    var eqcolon = \"≕\";\n    var eqsim = \"≂\";\n    var eqslantgtr = \"⪖\";\n    var eqslantless = \"⪕\";\n    var Equal = \"⩵\";\n    var equals = \"=\";\n    var EqualTilde = \"≂\";\n    var equest = \"≟\";\n    var Equilibrium = \"⇌\";\n    var equiv = \"≡\";\n    var equivDD = \"⩸\";\n    var eqvparsl = \"⧥\";\n    var erarr = \"⥱\";\n    var erDot = \"≓\";\n    var escr = \"ℯ\";\n    var Escr = \"ℰ\";\n    var esdot = \"≐\";\n    var Esim = \"⩳\";\n    var esim = \"≂\";\n    var Eta = \"Η\";\n    var eta = \"η\";\n    var ETH = \"Ð\";\n    var eth = \"ð\";\n    var Euml = \"Ë\";\n    var euml = \"ë\";\n    var euro = \"€\";\n    var excl = \"!\";\n    var exist = \"∃\";\n    var Exists = \"∃\";\n    var expectation = \"ℰ\";\n    var exponentiale = \"ⅇ\";\n    var ExponentialE = \"ⅇ\";\n    var fallingdotseq = \"≒\";\n    var Fcy = \"Ф\";\n    var fcy = \"ф\";\n    var female = \"♀\";\n    var ffilig = \"ﬃ\";\n    var fflig = \"ﬀ\";\n    var ffllig = \"ﬄ\";\n    var Ffr = \"𝔉\";\n    var ffr = \"𝔣\";\n    var filig = \"ﬁ\";\n    var FilledSmallSquare = \"◼\";\n    var FilledVerySmallSquare = \"▪\";\n    var fjlig = \"fj\";\n    var flat = \"♭\";\n    var fllig = \"ﬂ\";\n    var fltns = \"▱\";\n    var fnof = \"ƒ\";\n    var Fopf = \"𝔽\";\n    var fopf = \"𝕗\";\n    var forall = \"∀\";\n    var ForAll = \"∀\";\n    var fork = \"⋔\";\n    var forkv = \"⫙\";\n    var Fouriertrf = \"ℱ\";\n    var fpartint = \"⨍\";\n    var frac12 = \"½\";\n    var frac13 = \"⅓\";\n    var frac14 = \"¼\";\n    var frac15 = \"⅕\";\n    var frac16 = \"⅙\";\n    var frac18 = \"⅛\";\n    var frac23 = \"⅔\";\n    var frac25 = \"⅖\";\n    var frac34 = \"¾\";\n    var frac35 = \"⅗\";\n    var frac38 = \"⅜\";\n    var frac45 = \"⅘\";\n    var frac56 = \"⅚\";\n    var frac58 = \"⅝\";\n    var frac78 = \"⅞\";\n    var frasl = \"⁄\";\n    var frown = \"⌢\";\n    var fscr = \"𝒻\";\n    var Fscr = \"ℱ\";\n    var gacute = \"ǵ\";\n    var Gamma = \"Γ\";\n    var gamma = \"γ\";\n    var Gammad = \"Ϝ\";\n    var gammad = \"ϝ\";\n    var gap = \"⪆\";\n    var Gbreve = \"Ğ\";\n    var gbreve = \"ğ\";\n    var Gcedil = \"Ģ\";\n    var Gcirc = \"Ĝ\";\n    var gcirc = \"ĝ\";\n    var Gcy = \"Г\";\n    var gcy = \"г\";\n    var Gdot = \"Ġ\";\n    var gdot = \"ġ\";\n    var ge = \"≥\";\n    var gE = \"≧\";\n    var gEl = \"⪌\";\n    var gel = \"⋛\";\n    var geq = \"≥\";\n    var geqq = \"≧\";\n    var geqslant = \"⩾\";\n    var gescc = \"⪩\";\n    var ges = \"⩾\";\n    var gesdot = \"⪀\";\n    var gesdoto = \"⪂\";\n    var gesdotol = \"⪄\";\n    var gesl = \"⋛︀\";\n    var gesles = \"⪔\";\n    var Gfr = \"𝔊\";\n    var gfr = \"𝔤\";\n    var gg = \"≫\";\n    var Gg = \"⋙\";\n    var ggg = \"⋙\";\n    var gimel = \"ℷ\";\n    var GJcy = \"Ѓ\";\n    var gjcy = \"ѓ\";\n    var gla = \"⪥\";\n    var gl = \"≷\";\n    var glE = \"⪒\";\n    var glj = \"⪤\";\n    var gnap = \"⪊\";\n    var gnapprox = \"⪊\";\n    var gne = \"⪈\";\n    var gnE = \"≩\";\n    var gneq = \"⪈\";\n    var gneqq = \"≩\";\n    var gnsim = \"⋧\";\n    var Gopf = \"𝔾\";\n    var gopf = \"𝕘\";\n    var grave = \"`\";\n    var GreaterEqual = \"≥\";\n    var GreaterEqualLess = \"⋛\";\n    var GreaterFullEqual = \"≧\";\n    var GreaterGreater = \"⪢\";\n    var GreaterLess = \"≷\";\n    var GreaterSlantEqual = \"⩾\";\n    var GreaterTilde = \"≳\";\n    var Gscr = \"𝒢\";\n    var gscr = \"ℊ\";\n    var gsim = \"≳\";\n    var gsime = \"⪎\";\n    var gsiml = \"⪐\";\n    var gtcc = \"⪧\";\n    var gtcir = \"⩺\";\n    var gt = \">\";\n    var GT = \">\";\n    var Gt = \"≫\";\n    var gtdot = \"⋗\";\n    var gtlPar = \"⦕\";\n    var gtquest = \"⩼\";\n    var gtrapprox = \"⪆\";\n    var gtrarr = \"⥸\";\n    var gtrdot = \"⋗\";\n    var gtreqless = \"⋛\";\n    var gtreqqless = \"⪌\";\n    var gtrless = \"≷\";\n    var gtrsim = \"≳\";\n    var gvertneqq = \"≩︀\";\n    var gvnE = \"≩︀\";\n    var Hacek = \"ˇ\";\n    var hairsp = \" \";\n    var half = \"½\";\n    var hamilt = \"ℋ\";\n    var HARDcy = \"Ъ\";\n    var hardcy = \"ъ\";\n    var harrcir = \"⥈\";\n    var harr = \"↔\";\n    var hArr = \"⇔\";\n    var harrw = \"↭\";\n    var Hat = \"^\";\n    var hbar = \"ℏ\";\n    var Hcirc = \"Ĥ\";\n    var hcirc = \"ĥ\";\n    var hearts = \"♥\";\n    var heartsuit = \"♥\";\n    var hellip = \"…\";\n    var hercon = \"⊹\";\n    var hfr = \"𝔥\";\n    var Hfr = \"ℌ\";\n    var HilbertSpace = \"ℋ\";\n    var hksearow = \"⤥\";\n    var hkswarow = \"⤦\";\n    var hoarr = \"⇿\";\n    var homtht = \"∻\";\n    var hookleftarrow = \"↩\";\n    var hookrightarrow = \"↪\";\n    var hopf = \"𝕙\";\n    var Hopf = \"ℍ\";\n    var horbar = \"―\";\n    var HorizontalLine = \"─\";\n    var hscr = \"𝒽\";\n    var Hscr = \"ℋ\";\n    var hslash = \"ℏ\";\n    var Hstrok = \"Ħ\";\n    var hstrok = \"ħ\";\n    var HumpDownHump = \"≎\";\n    var HumpEqual = \"≏\";\n    var hybull = \"⁃\";\n    var hyphen = \"‐\";\n    var Iacute = \"Í\";\n    var iacute = \"í\";\n    var ic = \"⁣\";\n    var Icirc = \"Î\";\n    var icirc = \"î\";\n    var Icy = \"И\";\n    var icy = \"и\";\n    var Idot = \"İ\";\n    var IEcy = \"Е\";\n    var iecy = \"е\";\n    var iexcl = \"¡\";\n    var iff = \"⇔\";\n    var ifr = \"𝔦\";\n    var Ifr = \"ℑ\";\n    var Igrave = \"Ì\";\n    var igrave = \"ì\";\n    var ii = \"ⅈ\";\n    var iiiint = \"⨌\";\n    var iiint = \"∭\";\n    var iinfin = \"⧜\";\n    var iiota = \"℩\";\n    var IJlig = \"Ĳ\";\n    var ijlig = \"ĳ\";\n    var Imacr = \"Ī\";\n    var imacr = \"ī\";\n    var image = \"ℑ\";\n    var ImaginaryI = \"ⅈ\";\n    var imagline = \"ℐ\";\n    var imagpart = \"ℑ\";\n    var imath = \"ı\";\n    var Im = \"ℑ\";\n    var imof = \"⊷\";\n    var imped = \"Ƶ\";\n    var Implies = \"⇒\";\n    var incare = \"℅\";\n    var infin = \"∞\";\n    var infintie = \"⧝\";\n    var inodot = \"ı\";\n    var intcal = \"⊺\";\n    var int = \"∫\";\n    var Int = \"∬\";\n    var integers = \"ℤ\";\n    var Integral = \"∫\";\n    var intercal = \"⊺\";\n    var Intersection = \"⋂\";\n    var intlarhk = \"⨗\";\n    var intprod = \"⨼\";\n    var InvisibleComma = \"⁣\";\n    var InvisibleTimes = \"⁢\";\n    var IOcy = \"Ё\";\n    var iocy = \"ё\";\n    var Iogon = \"Į\";\n    var iogon = \"į\";\n    var Iopf = \"𝕀\";\n    var iopf = \"𝕚\";\n    var Iota = \"Ι\";\n    var iota = \"ι\";\n    var iprod = \"⨼\";\n    var iquest = \"¿\";\n    var iscr = \"𝒾\";\n    var Iscr = \"ℐ\";\n    var isin = \"∈\";\n    var isindot = \"⋵\";\n    var isinE = \"⋹\";\n    var isins = \"⋴\";\n    var isinsv = \"⋳\";\n    var isinv = \"∈\";\n    var it = \"⁢\";\n    var Itilde = \"Ĩ\";\n    var itilde = \"ĩ\";\n    var Iukcy = \"І\";\n    var iukcy = \"і\";\n    var Iuml = \"Ï\";\n    var iuml = \"ï\";\n    var Jcirc = \"Ĵ\";\n    var jcirc = \"ĵ\";\n    var Jcy = \"Й\";\n    var jcy = \"й\";\n    var Jfr = \"𝔍\";\n    var jfr = \"𝔧\";\n    var jmath = \"ȷ\";\n    var Jopf = \"𝕁\";\n    var jopf = \"𝕛\";\n    var Jscr = \"𝒥\";\n    var jscr = \"𝒿\";\n    var Jsercy = \"Ј\";\n    var jsercy = \"ј\";\n    var Jukcy = \"Є\";\n    var jukcy = \"є\";\n    var Kappa = \"Κ\";\n    var kappa = \"κ\";\n    var kappav = \"ϰ\";\n    var Kcedil = \"Ķ\";\n    var kcedil = \"ķ\";\n    var Kcy = \"К\";\n    var kcy = \"к\";\n    var Kfr = \"𝔎\";\n    var kfr = \"𝔨\";\n    var kgreen = \"ĸ\";\n    var KHcy = \"Х\";\n    var khcy = \"х\";\n    var KJcy = \"Ќ\";\n    var kjcy = \"ќ\";\n    var Kopf = \"𝕂\";\n    var kopf = \"𝕜\";\n    var Kscr = \"𝒦\";\n    var kscr = \"𝓀\";\n    var lAarr = \"⇚\";\n    var Lacute = \"Ĺ\";\n    var lacute = \"ĺ\";\n    var laemptyv = \"⦴\";\n    var lagran = \"ℒ\";\n    var Lambda = \"Λ\";\n    var lambda = \"λ\";\n    var lang = \"⟨\";\n    var Lang = \"⟪\";\n    var langd = \"⦑\";\n    var langle = \"⟨\";\n    var lap = \"⪅\";\n    var Laplacetrf = \"ℒ\";\n    var laquo = \"«\";\n    var larrb = \"⇤\";\n    var larrbfs = \"⤟\";\n    var larr = \"←\";\n    var Larr = \"↞\";\n    var lArr = \"⇐\";\n    var larrfs = \"⤝\";\n    var larrhk = \"↩\";\n    var larrlp = \"↫\";\n    var larrpl = \"⤹\";\n    var larrsim = \"⥳\";\n    var larrtl = \"↢\";\n    var latail = \"⤙\";\n    var lAtail = \"⤛\";\n    var lat = \"⪫\";\n    var late = \"⪭\";\n    var lates = \"⪭︀\";\n    var lbarr = \"⤌\";\n    var lBarr = \"⤎\";\n    var lbbrk = \"❲\";\n    var lbrace = \"{\";\n    var lbrack = \"[\";\n    var lbrke = \"⦋\";\n    var lbrksld = \"⦏\";\n    var lbrkslu = \"⦍\";\n    var Lcaron = \"Ľ\";\n    var lcaron = \"ľ\";\n    var Lcedil = \"Ļ\";\n    var lcedil = \"ļ\";\n    var lceil = \"⌈\";\n    var lcub = \"{\";\n    var Lcy = \"Л\";\n    var lcy = \"л\";\n    var ldca = \"⤶\";\n    var ldquo = \"“\";\n    var ldquor = \"„\";\n    var ldrdhar = \"⥧\";\n    var ldrushar = \"⥋\";\n    var ldsh = \"↲\";\n    var le = \"≤\";\n    var lE = \"≦\";\n    var LeftAngleBracket = \"⟨\";\n    var LeftArrowBar = \"⇤\";\n    var leftarrow = \"←\";\n    var LeftArrow = \"←\";\n    var Leftarrow = \"⇐\";\n    var LeftArrowRightArrow = \"⇆\";\n    var leftarrowtail = \"↢\";\n    var LeftCeiling = \"⌈\";\n    var LeftDoubleBracket = \"⟦\";\n    var LeftDownTeeVector = \"⥡\";\n    var LeftDownVectorBar = \"⥙\";\n    var LeftDownVector = \"⇃\";\n    var LeftFloor = \"⌊\";\n    var leftharpoondown = \"↽\";\n    var leftharpoonup = \"↼\";\n    var leftleftarrows = \"⇇\";\n    var leftrightarrow = \"↔\";\n    var LeftRightArrow = \"↔\";\n    var Leftrightarrow = \"⇔\";\n    var leftrightarrows = \"⇆\";\n    var leftrightharpoons = \"⇋\";\n    var leftrightsquigarrow = \"↭\";\n    var LeftRightVector = \"⥎\";\n    var LeftTeeArrow = \"↤\";\n    var LeftTee = \"⊣\";\n    var LeftTeeVector = \"⥚\";\n    var leftthreetimes = \"⋋\";\n    var LeftTriangleBar = \"⧏\";\n    var LeftTriangle = \"⊲\";\n    var LeftTriangleEqual = \"⊴\";\n    var LeftUpDownVector = \"⥑\";\n    var LeftUpTeeVector = \"⥠\";\n    var LeftUpVectorBar = \"⥘\";\n    var LeftUpVector = \"↿\";\n    var LeftVectorBar = \"⥒\";\n    var LeftVector = \"↼\";\n    var lEg = \"⪋\";\n    var leg = \"⋚\";\n    var leq = \"≤\";\n    var leqq = \"≦\";\n    var leqslant = \"⩽\";\n    var lescc = \"⪨\";\n    var les = \"⩽\";\n    var lesdot = \"⩿\";\n    var lesdoto = \"⪁\";\n    var lesdotor = \"⪃\";\n    var lesg = \"⋚︀\";\n    var lesges = \"⪓\";\n    var lessapprox = \"⪅\";\n    var lessdot = \"⋖\";\n    var lesseqgtr = \"⋚\";\n    var lesseqqgtr = \"⪋\";\n    var LessEqualGreater = \"⋚\";\n    var LessFullEqual = \"≦\";\n    var LessGreater = \"≶\";\n    var lessgtr = \"≶\";\n    var LessLess = \"⪡\";\n    var lesssim = \"≲\";\n    var LessSlantEqual = \"⩽\";\n    var LessTilde = \"≲\";\n    var lfisht = \"⥼\";\n    var lfloor = \"⌊\";\n    var Lfr = \"𝔏\";\n    var lfr = \"𝔩\";\n    var lg = \"≶\";\n    var lgE = \"⪑\";\n    var lHar = \"⥢\";\n    var lhard = \"↽\";\n    var lharu = \"↼\";\n    var lharul = \"⥪\";\n    var lhblk = \"▄\";\n    var LJcy = \"Љ\";\n    var ljcy = \"љ\";\n    var llarr = \"⇇\";\n    var ll = \"≪\";\n    var Ll = \"⋘\";\n    var llcorner = \"⌞\";\n    var Lleftarrow = \"⇚\";\n    var llhard = \"⥫\";\n    var lltri = \"◺\";\n    var Lmidot = \"Ŀ\";\n    var lmidot = \"ŀ\";\n    var lmoustache = \"⎰\";\n    var lmoust = \"⎰\";\n    var lnap = \"⪉\";\n    var lnapprox = \"⪉\";\n    var lne = \"⪇\";\n    var lnE = \"≨\";\n    var lneq = \"⪇\";\n    var lneqq = \"≨\";\n    var lnsim = \"⋦\";\n    var loang = \"⟬\";\n    var loarr = \"⇽\";\n    var lobrk = \"⟦\";\n    var longleftarrow = \"⟵\";\n    var LongLeftArrow = \"⟵\";\n    var Longleftarrow = \"⟸\";\n    var longleftrightarrow = \"⟷\";\n    var LongLeftRightArrow = \"⟷\";\n    var Longleftrightarrow = \"⟺\";\n    var longmapsto = \"⟼\";\n    var longrightarrow = \"⟶\";\n    var LongRightArrow = \"⟶\";\n    var Longrightarrow = \"⟹\";\n    var looparrowleft = \"↫\";\n    var looparrowright = \"↬\";\n    var lopar = \"⦅\";\n    var Lopf = \"𝕃\";\n    var lopf = \"𝕝\";\n    var loplus = \"⨭\";\n    var lotimes = \"⨴\";\n    var lowast = \"∗\";\n    var lowbar = \"_\";\n    var LowerLeftArrow = \"↙\";\n    var LowerRightArrow = \"↘\";\n    var loz = \"◊\";\n    var lozenge = \"◊\";\n    var lozf = \"⧫\";\n    var lpar = \"(\";\n    var lparlt = \"⦓\";\n    var lrarr = \"⇆\";\n    var lrcorner = \"⌟\";\n    var lrhar = \"⇋\";\n    var lrhard = \"⥭\";\n    var lrm = \"‎\";\n    var lrtri = \"⊿\";\n    var lsaquo = \"‹\";\n    var lscr = \"𝓁\";\n    var Lscr = \"ℒ\";\n    var lsh = \"↰\";\n    var Lsh = \"↰\";\n    var lsim = \"≲\";\n    var lsime = \"⪍\";\n    var lsimg = \"⪏\";\n    var lsqb = \"[\";\n    var lsquo = \"‘\";\n    var lsquor = \"‚\";\n    var Lstrok = \"Ł\";\n    var lstrok = \"ł\";\n    var ltcc = \"⪦\";\n    var ltcir = \"⩹\";\n    var lt = \"<\";\n    var LT = \"<\";\n    var Lt = \"≪\";\n    var ltdot = \"⋖\";\n    var lthree = \"⋋\";\n    var ltimes = \"⋉\";\n    var ltlarr = \"⥶\";\n    var ltquest = \"⩻\";\n    var ltri = \"◃\";\n    var ltrie = \"⊴\";\n    var ltrif = \"◂\";\n    var ltrPar = \"⦖\";\n    var lurdshar = \"⥊\";\n    var luruhar = \"⥦\";\n    var lvertneqq = \"≨︀\";\n    var lvnE = \"≨︀\";\n    var macr = \"¯\";\n    var male = \"♂\";\n    var malt = \"✠\";\n    var maltese = \"✠\";\n    var map = \"↦\";\n    var mapsto = \"↦\";\n    var mapstodown = \"↧\";\n    var mapstoleft = \"↤\";\n    var mapstoup = \"↥\";\n    var marker = \"▮\";\n    var mcomma = \"⨩\";\n    var Mcy = \"М\";\n    var mcy = \"м\";\n    var mdash = \"—\";\n    var mDDot = \"∺\";\n    var measuredangle = \"∡\";\n    var MediumSpace = \" \";\n    var Mellintrf = \"ℳ\";\n    var Mfr = \"𝔐\";\n    var mfr = \"𝔪\";\n    var mho = \"℧\";\n    var micro = \"µ\";\n    var midast = \"*\";\n    var midcir = \"⫰\";\n    var mid = \"∣\";\n    var middot = \"·\";\n    var minusb = \"⊟\";\n    var minus = \"−\";\n    var minusd = \"∸\";\n    var minusdu = \"⨪\";\n    var MinusPlus = \"∓\";\n    var mlcp = \"⫛\";\n    var mldr = \"…\";\n    var mnplus = \"∓\";\n    var models = \"⊧\";\n    var Mopf = \"𝕄\";\n    var mopf = \"𝕞\";\n    var mp = \"∓\";\n    var mscr = \"𝓂\";\n    var Mscr = \"ℳ\";\n    var mstpos = \"∾\";\n    var Mu = \"Μ\";\n    var mu = \"μ\";\n    var multimap = \"⊸\";\n    var mumap = \"⊸\";\n    var nabla = \"∇\";\n    var Nacute = \"Ń\";\n    var nacute = \"ń\";\n    var nang = \"∠⃒\";\n    var nap = \"≉\";\n    var napE = \"⩰̸\";\n    var napid = \"≋̸\";\n    var napos = \"ŉ\";\n    var napprox = \"≉\";\n    var natural = \"♮\";\n    var naturals = \"ℕ\";\n    var natur = \"♮\";\n    var nbsp = \" \";\n    var nbump = \"≎̸\";\n    var nbumpe = \"≏̸\";\n    var ncap = \"⩃\";\n    var Ncaron = \"Ň\";\n    var ncaron = \"ň\";\n    var Ncedil = \"Ņ\";\n    var ncedil = \"ņ\";\n    var ncong = \"≇\";\n    var ncongdot = \"⩭̸\";\n    var ncup = \"⩂\";\n    var Ncy = \"Н\";\n    var ncy = \"н\";\n    var ndash = \"–\";\n    var nearhk = \"⤤\";\n    var nearr = \"↗\";\n    var neArr = \"⇗\";\n    var nearrow = \"↗\";\n    var ne = \"≠\";\n    var nedot = \"≐̸\";\n    var NegativeMediumSpace = \"​\";\n    var NegativeThickSpace = \"​\";\n    var NegativeThinSpace = \"​\";\n    var NegativeVeryThinSpace = \"​\";\n    var nequiv = \"≢\";\n    var nesear = \"⤨\";\n    var nesim = \"≂̸\";\n    var NestedGreaterGreater = \"≫\";\n    var NestedLessLess = \"≪\";\n    var NewLine = \"\\n\";\n    var nexist = \"∄\";\n    var nexists = \"∄\";\n    var Nfr = \"𝔑\";\n    var nfr = \"𝔫\";\n    var ngE = \"≧̸\";\n    var nge = \"≱\";\n    var ngeq = \"≱\";\n    var ngeqq = \"≧̸\";\n    var ngeqslant = \"⩾̸\";\n    var nges = \"⩾̸\";\n    var nGg = \"⋙̸\";\n    var ngsim = \"≵\";\n    var nGt = \"≫⃒\";\n    var ngt = \"≯\";\n    var ngtr = \"≯\";\n    var nGtv = \"≫̸\";\n    var nharr = \"↮\";\n    var nhArr = \"⇎\";\n    var nhpar = \"⫲\";\n    var ni = \"∋\";\n    var nis = \"⋼\";\n    var nisd = \"⋺\";\n    var niv = \"∋\";\n    var NJcy = \"Њ\";\n    var njcy = \"њ\";\n    var nlarr = \"↚\";\n    var nlArr = \"⇍\";\n    var nldr = \"‥\";\n    var nlE = \"≦̸\";\n    var nle = \"≰\";\n    var nleftarrow = \"↚\";\n    var nLeftarrow = \"⇍\";\n    var nleftrightarrow = \"↮\";\n    var nLeftrightarrow = \"⇎\";\n    var nleq = \"≰\";\n    var nleqq = \"≦̸\";\n    var nleqslant = \"⩽̸\";\n    var nles = \"⩽̸\";\n    var nless = \"≮\";\n    var nLl = \"⋘̸\";\n    var nlsim = \"≴\";\n    var nLt = \"≪⃒\";\n    var nlt = \"≮\";\n    var nltri = \"⋪\";\n    var nltrie = \"⋬\";\n    var nLtv = \"≪̸\";\n    var nmid = \"∤\";\n    var NoBreak = \"⁠\";\n    var NonBreakingSpace = \" \";\n    var nopf = \"𝕟\";\n    var Nopf = \"ℕ\";\n    var Not = \"⫬\";\n    var not = \"¬\";\n    var NotCongruent = \"≢\";\n    var NotCupCap = \"≭\";\n    var NotDoubleVerticalBar = \"∦\";\n    var NotElement = \"∉\";\n    var NotEqual = \"≠\";\n    var NotEqualTilde = \"≂̸\";\n    var NotExists = \"∄\";\n    var NotGreater = \"≯\";\n    var NotGreaterEqual = \"≱\";\n    var NotGreaterFullEqual = \"≧̸\";\n    var NotGreaterGreater = \"≫̸\";\n    var NotGreaterLess = \"≹\";\n    var NotGreaterSlantEqual = \"⩾̸\";\n    var NotGreaterTilde = \"≵\";\n    var NotHumpDownHump = \"≎̸\";\n    var NotHumpEqual = \"≏̸\";\n    var notin = \"∉\";\n    var notindot = \"⋵̸\";\n    var notinE = \"⋹̸\";\n    var notinva = \"∉\";\n    var notinvb = \"⋷\";\n    var notinvc = \"⋶\";\n    var NotLeftTriangleBar = \"⧏̸\";\n    var NotLeftTriangle = \"⋪\";\n    var NotLeftTriangleEqual = \"⋬\";\n    var NotLess = \"≮\";\n    var NotLessEqual = \"≰\";\n    var NotLessGreater = \"≸\";\n    var NotLessLess = \"≪̸\";\n    var NotLessSlantEqual = \"⩽̸\";\n    var NotLessTilde = \"≴\";\n    var NotNestedGreaterGreater = \"⪢̸\";\n    var NotNestedLessLess = \"⪡̸\";\n    var notni = \"∌\";\n    var notniva = \"∌\";\n    var notnivb = \"⋾\";\n    var notnivc = \"⋽\";\n    var NotPrecedes = \"⊀\";\n    var NotPrecedesEqual = \"⪯̸\";\n    var NotPrecedesSlantEqual = \"⋠\";\n    var NotReverseElement = \"∌\";\n    var NotRightTriangleBar = \"⧐̸\";\n    var NotRightTriangle = \"⋫\";\n    var NotRightTriangleEqual = \"⋭\";\n    var NotSquareSubset = \"⊏̸\";\n    var NotSquareSubsetEqual = \"⋢\";\n    var NotSquareSuperset = \"⊐̸\";\n    var NotSquareSupersetEqual = \"⋣\";\n    var NotSubset = \"⊂⃒\";\n    var NotSubsetEqual = \"⊈\";\n    var NotSucceeds = \"⊁\";\n    var NotSucceedsEqual = \"⪰̸\";\n    var NotSucceedsSlantEqual = \"⋡\";\n    var NotSucceedsTilde = \"≿̸\";\n    var NotSuperset = \"⊃⃒\";\n    var NotSupersetEqual = \"⊉\";\n    var NotTilde = \"≁\";\n    var NotTildeEqual = \"≄\";\n    var NotTildeFullEqual = \"≇\";\n    var NotTildeTilde = \"≉\";\n    var NotVerticalBar = \"∤\";\n    var nparallel = \"∦\";\n    var npar = \"∦\";\n    var nparsl = \"⫽⃥\";\n    var npart = \"∂̸\";\n    var npolint = \"⨔\";\n    var npr = \"⊀\";\n    var nprcue = \"⋠\";\n    var nprec = \"⊀\";\n    var npreceq = \"⪯̸\";\n    var npre = \"⪯̸\";\n    var nrarrc = \"⤳̸\";\n    var nrarr = \"↛\";\n    var nrArr = \"⇏\";\n    var nrarrw = \"↝̸\";\n    var nrightarrow = \"↛\";\n    var nRightarrow = \"⇏\";\n    var nrtri = \"⋫\";\n    var nrtrie = \"⋭\";\n    var nsc = \"⊁\";\n    var nsccue = \"⋡\";\n    var nsce = \"⪰̸\";\n    var Nscr = \"𝒩\";\n    var nscr = \"𝓃\";\n    var nshortmid = \"∤\";\n    var nshortparallel = \"∦\";\n    var nsim = \"≁\";\n    var nsime = \"≄\";\n    var nsimeq = \"≄\";\n    var nsmid = \"∤\";\n    var nspar = \"∦\";\n    var nsqsube = \"⋢\";\n    var nsqsupe = \"⋣\";\n    var nsub = \"⊄\";\n    var nsubE = \"⫅̸\";\n    var nsube = \"⊈\";\n    var nsubset = \"⊂⃒\";\n    var nsubseteq = \"⊈\";\n    var nsubseteqq = \"⫅̸\";\n    var nsucc = \"⊁\";\n    var nsucceq = \"⪰̸\";\n    var nsup = \"⊅\";\n    var nsupE = \"⫆̸\";\n    var nsupe = \"⊉\";\n    var nsupset = \"⊃⃒\";\n    var nsupseteq = \"⊉\";\n    var nsupseteqq = \"⫆̸\";\n    var ntgl = \"≹\";\n    var Ntilde = \"Ñ\";\n    var ntilde = \"ñ\";\n    var ntlg = \"≸\";\n    var ntriangleleft = \"⋪\";\n    var ntrianglelefteq = \"⋬\";\n    var ntriangleright = \"⋫\";\n    var ntrianglerighteq = \"⋭\";\n    var Nu = \"Ν\";\n    var nu = \"ν\";\n    var num = \"#\";\n    var numero = \"№\";\n    var numsp = \" \";\n    var nvap = \"≍⃒\";\n    var nvdash = \"⊬\";\n    var nvDash = \"⊭\";\n    var nVdash = \"⊮\";\n    var nVDash = \"⊯\";\n    var nvge = \"≥⃒\";\n    var nvgt = \">⃒\";\n    var nvHarr = \"⤄\";\n    var nvinfin = \"⧞\";\n    var nvlArr = \"⤂\";\n    var nvle = \"≤⃒\";\n    var nvlt = \"<⃒\";\n    var nvltrie = \"⊴⃒\";\n    var nvrArr = \"⤃\";\n    var nvrtrie = \"⊵⃒\";\n    var nvsim = \"∼⃒\";\n    var nwarhk = \"⤣\";\n    var nwarr = \"↖\";\n    var nwArr = \"⇖\";\n    var nwarrow = \"↖\";\n    var nwnear = \"⤧\";\n    var Oacute = \"Ó\";\n    var oacute = \"ó\";\n    var oast = \"⊛\";\n    var Ocirc = \"Ô\";\n    var ocirc = \"ô\";\n    var ocir = \"⊚\";\n    var Ocy = \"О\";\n    var ocy = \"о\";\n    var odash = \"⊝\";\n    var Odblac = \"Ő\";\n    var odblac = \"ő\";\n    var odiv = \"⨸\";\n    var odot = \"⊙\";\n    var odsold = \"⦼\";\n    var OElig = \"Œ\";\n    var oelig = \"œ\";\n    var ofcir = \"⦿\";\n    var Ofr = \"𝔒\";\n    var ofr = \"𝔬\";\n    var ogon = \"˛\";\n    var Ograve = \"Ò\";\n    var ograve = \"ò\";\n    var ogt = \"⧁\";\n    var ohbar = \"⦵\";\n    var ohm = \"Ω\";\n    var oint = \"∮\";\n    var olarr = \"↺\";\n    var olcir = \"⦾\";\n    var olcross = \"⦻\";\n    var oline = \"‾\";\n    var olt = \"⧀\";\n    var Omacr = \"Ō\";\n    var omacr = \"ō\";\n    var Omega = \"Ω\";\n    var omega = \"ω\";\n    var Omicron = \"Ο\";\n    var omicron = \"ο\";\n    var omid = \"⦶\";\n    var ominus = \"⊖\";\n    var Oopf = \"𝕆\";\n    var oopf = \"𝕠\";\n    var opar = \"⦷\";\n    var OpenCurlyDoubleQuote = \"“\";\n    var OpenCurlyQuote = \"‘\";\n    var operp = \"⦹\";\n    var oplus = \"⊕\";\n    var orarr = \"↻\";\n    var Or = \"⩔\";\n    var or = \"∨\";\n    var ord = \"⩝\";\n    var order = \"ℴ\";\n    var orderof = \"ℴ\";\n    var ordf = \"ª\";\n    var ordm = \"º\";\n    var origof = \"⊶\";\n    var oror = \"⩖\";\n    var orslope = \"⩗\";\n    var orv = \"⩛\";\n    var oS = \"Ⓢ\";\n    var Oscr = \"𝒪\";\n    var oscr = \"ℴ\";\n    var Oslash = \"Ø\";\n    var oslash = \"ø\";\n    var osol = \"⊘\";\n    var Otilde = \"Õ\";\n    var otilde = \"õ\";\n    var otimesas = \"⨶\";\n    var Otimes = \"⨷\";\n    var otimes = \"⊗\";\n    var Ouml = \"Ö\";\n    var ouml = \"ö\";\n    var ovbar = \"⌽\";\n    var OverBar = \"‾\";\n    var OverBrace = \"⏞\";\n    var OverBracket = \"⎴\";\n    var OverParenthesis = \"⏜\";\n    var para = \"¶\";\n    var parallel = \"∥\";\n    var par = \"∥\";\n    var parsim = \"⫳\";\n    var parsl = \"⫽\";\n    var part = \"∂\";\n    var PartialD = \"∂\";\n    var Pcy = \"П\";\n    var pcy = \"п\";\n    var percnt = \"%\";\n    var period = \".\";\n    var permil = \"‰\";\n    var perp = \"⊥\";\n    var pertenk = \"‱\";\n    var Pfr = \"𝔓\";\n    var pfr = \"𝔭\";\n    var Phi = \"Φ\";\n    var phi = \"φ\";\n    var phiv = \"ϕ\";\n    var phmmat = \"ℳ\";\n    var phone = \"☎\";\n    var Pi = \"Π\";\n    var pi = \"π\";\n    var pitchfork = \"⋔\";\n    var piv = \"ϖ\";\n    var planck = \"ℏ\";\n    var planckh = \"ℎ\";\n    var plankv = \"ℏ\";\n    var plusacir = \"⨣\";\n    var plusb = \"⊞\";\n    var pluscir = \"⨢\";\n    var plus = \"+\";\n    var plusdo = \"∔\";\n    var plusdu = \"⨥\";\n    var pluse = \"⩲\";\n    var PlusMinus = \"±\";\n    var plusmn = \"±\";\n    var plussim = \"⨦\";\n    var plustwo = \"⨧\";\n    var pm = \"±\";\n    var Poincareplane = \"ℌ\";\n    var pointint = \"⨕\";\n    var popf = \"𝕡\";\n    var Popf = \"ℙ\";\n    var pound = \"£\";\n    var prap = \"⪷\";\n    var Pr = \"⪻\";\n    var pr = \"≺\";\n    var prcue = \"≼\";\n    var precapprox = \"⪷\";\n    var prec = \"≺\";\n    var preccurlyeq = \"≼\";\n    var Precedes = \"≺\";\n    var PrecedesEqual = \"⪯\";\n    var PrecedesSlantEqual = \"≼\";\n    var PrecedesTilde = \"≾\";\n    var preceq = \"⪯\";\n    var precnapprox = \"⪹\";\n    var precneqq = \"⪵\";\n    var precnsim = \"⋨\";\n    var pre = \"⪯\";\n    var prE = \"⪳\";\n    var precsim = \"≾\";\n    var prime = \"′\";\n    var Prime = \"″\";\n    var primes = \"ℙ\";\n    var prnap = \"⪹\";\n    var prnE = \"⪵\";\n    var prnsim = \"⋨\";\n    var prod = \"∏\";\n    var Product = \"∏\";\n    var profalar = \"⌮\";\n    var profline = \"⌒\";\n    var profsurf = \"⌓\";\n    var prop = \"∝\";\n    var Proportional = \"∝\";\n    var Proportion = \"∷\";\n    var propto = \"∝\";\n    var prsim = \"≾\";\n    var prurel = \"⊰\";\n    var Pscr = \"𝒫\";\n    var pscr = \"𝓅\";\n    var Psi = \"Ψ\";\n    var psi = \"ψ\";\n    var puncsp = \" \";\n    var Qfr = \"𝔔\";\n    var qfr = \"𝔮\";\n    var qint = \"⨌\";\n    var qopf = \"𝕢\";\n    var Qopf = \"ℚ\";\n    var qprime = \"⁗\";\n    var Qscr = \"𝒬\";\n    var qscr = \"𝓆\";\n    var quaternions = \"ℍ\";\n    var quatint = \"⨖\";\n    var quest = \"?\";\n    var questeq = \"≟\";\n    var quot = \"\\\"\";\n    var QUOT = \"\\\"\";\n    var rAarr = \"⇛\";\n    var race = \"∽̱\";\n    var Racute = \"Ŕ\";\n    var racute = \"ŕ\";\n    var radic = \"√\";\n    var raemptyv = \"⦳\";\n    var rang = \"⟩\";\n    var Rang = \"⟫\";\n    var rangd = \"⦒\";\n    var range = \"⦥\";\n    var rangle = \"⟩\";\n    var raquo = \"»\";\n    var rarrap = \"⥵\";\n    var rarrb = \"⇥\";\n    var rarrbfs = \"⤠\";\n    var rarrc = \"⤳\";\n    var rarr = \"→\";\n    var Rarr = \"↠\";\n    var rArr = \"⇒\";\n    var rarrfs = \"⤞\";\n    var rarrhk = \"↪\";\n    var rarrlp = \"↬\";\n    var rarrpl = \"⥅\";\n    var rarrsim = \"⥴\";\n    var Rarrtl = \"⤖\";\n    var rarrtl = \"↣\";\n    var rarrw = \"↝\";\n    var ratail = \"⤚\";\n    var rAtail = \"⤜\";\n    var ratio = \"∶\";\n    var rationals = \"ℚ\";\n    var rbarr = \"⤍\";\n    var rBarr = \"⤏\";\n    var RBarr = \"⤐\";\n    var rbbrk = \"❳\";\n    var rbrace = \"}\";\n    var rbrack = \"]\";\n    var rbrke = \"⦌\";\n    var rbrksld = \"⦎\";\n    var rbrkslu = \"⦐\";\n    var Rcaron = \"Ř\";\n    var rcaron = \"ř\";\n    var Rcedil = \"Ŗ\";\n    var rcedil = \"ŗ\";\n    var rceil = \"⌉\";\n    var rcub = \"}\";\n    var Rcy = \"Р\";\n    var rcy = \"р\";\n    var rdca = \"⤷\";\n    var rdldhar = \"⥩\";\n    var rdquo = \"”\";\n    var rdquor = \"”\";\n    var rdsh = \"↳\";\n    var real = \"ℜ\";\n    var realine = \"ℛ\";\n    var realpart = \"ℜ\";\n    var reals = \"ℝ\";\n    var Re = \"ℜ\";\n    var rect = \"▭\";\n    var reg = \"®\";\n    var REG = \"®\";\n    var ReverseElement = \"∋\";\n    var ReverseEquilibrium = \"⇋\";\n    var ReverseUpEquilibrium = \"⥯\";\n    var rfisht = \"⥽\";\n    var rfloor = \"⌋\";\n    var rfr = \"𝔯\";\n    var Rfr = \"ℜ\";\n    var rHar = \"⥤\";\n    var rhard = \"⇁\";\n    var rharu = \"⇀\";\n    var rharul = \"⥬\";\n    var Rho = \"Ρ\";\n    var rho = \"ρ\";\n    var rhov = \"ϱ\";\n    var RightAngleBracket = \"⟩\";\n    var RightArrowBar = \"⇥\";\n    var rightarrow = \"→\";\n    var RightArrow = \"→\";\n    var Rightarrow = \"⇒\";\n    var RightArrowLeftArrow = \"⇄\";\n    var rightarrowtail = \"↣\";\n    var RightCeiling = \"⌉\";\n    var RightDoubleBracket = \"⟧\";\n    var RightDownTeeVector = \"⥝\";\n    var RightDownVectorBar = \"⥕\";\n    var RightDownVector = \"⇂\";\n    var RightFloor = \"⌋\";\n    var rightharpoondown = \"⇁\";\n    var rightharpoonup = \"⇀\";\n    var rightleftarrows = \"⇄\";\n    var rightleftharpoons = \"⇌\";\n    var rightrightarrows = \"⇉\";\n    var rightsquigarrow = \"↝\";\n    var RightTeeArrow = \"↦\";\n    var RightTee = \"⊢\";\n    var RightTeeVector = \"⥛\";\n    var rightthreetimes = \"⋌\";\n    var RightTriangleBar = \"⧐\";\n    var RightTriangle = \"⊳\";\n    var RightTriangleEqual = \"⊵\";\n    var RightUpDownVector = \"⥏\";\n    var RightUpTeeVector = \"⥜\";\n    var RightUpVectorBar = \"⥔\";\n    var RightUpVector = \"↾\";\n    var RightVectorBar = \"⥓\";\n    var RightVector = \"⇀\";\n    var ring = \"˚\";\n    var risingdotseq = \"≓\";\n    var rlarr = \"⇄\";\n    var rlhar = \"⇌\";\n    var rlm = \"‏\";\n    var rmoustache = \"⎱\";\n    var rmoust = \"⎱\";\n    var rnmid = \"⫮\";\n    var roang = \"⟭\";\n    var roarr = \"⇾\";\n    var robrk = \"⟧\";\n    var ropar = \"⦆\";\n    var ropf = \"𝕣\";\n    var Ropf = \"ℝ\";\n    var roplus = \"⨮\";\n    var rotimes = \"⨵\";\n    var RoundImplies = \"⥰\";\n    var rpar = \")\";\n    var rpargt = \"⦔\";\n    var rppolint = \"⨒\";\n    var rrarr = \"⇉\";\n    var Rrightarrow = \"⇛\";\n    var rsaquo = \"›\";\n    var rscr = \"𝓇\";\n    var Rscr = \"ℛ\";\n    var rsh = \"↱\";\n    var Rsh = \"↱\";\n    var rsqb = \"]\";\n    var rsquo = \"’\";\n    var rsquor = \"’\";\n    var rthree = \"⋌\";\n    var rtimes = \"⋊\";\n    var rtri = \"▹\";\n    var rtrie = \"⊵\";\n    var rtrif = \"▸\";\n    var rtriltri = \"⧎\";\n    var RuleDelayed = \"⧴\";\n    var ruluhar = \"⥨\";\n    var rx = \"℞\";\n    var Sacute = \"Ś\";\n    var sacute = \"ś\";\n    var sbquo = \"‚\";\n    var scap = \"⪸\";\n    var Scaron = \"Š\";\n    var scaron = \"š\";\n    var Sc = \"⪼\";\n    var sc = \"≻\";\n    var sccue = \"≽\";\n    var sce = \"⪰\";\n    var scE = \"⪴\";\n    var Scedil = \"Ş\";\n    var scedil = \"ş\";\n    var Scirc = \"Ŝ\";\n    var scirc = \"ŝ\";\n    var scnap = \"⪺\";\n    var scnE = \"⪶\";\n    var scnsim = \"⋩\";\n    var scpolint = \"⨓\";\n    var scsim = \"≿\";\n    var Scy = \"С\";\n    var scy = \"с\";\n    var sdotb = \"⊡\";\n    var sdot = \"⋅\";\n    var sdote = \"⩦\";\n    var searhk = \"⤥\";\n    var searr = \"↘\";\n    var seArr = \"⇘\";\n    var searrow = \"↘\";\n    var sect = \"§\";\n    var semi = \";\";\n    var seswar = \"⤩\";\n    var setminus = \"∖\";\n    var setmn = \"∖\";\n    var sext = \"✶\";\n    var Sfr = \"𝔖\";\n    var sfr = \"𝔰\";\n    var sfrown = \"⌢\";\n    var sharp = \"♯\";\n    var SHCHcy = \"Щ\";\n    var shchcy = \"щ\";\n    var SHcy = \"Ш\";\n    var shcy = \"ш\";\n    var ShortDownArrow = \"↓\";\n    var ShortLeftArrow = \"←\";\n    var shortmid = \"∣\";\n    var shortparallel = \"∥\";\n    var ShortRightArrow = \"→\";\n    var ShortUpArrow = \"↑\";\n    var shy = \"­\";\n    var Sigma = \"Σ\";\n    var sigma = \"σ\";\n    var sigmaf = \"ς\";\n    var sigmav = \"ς\";\n    var sim = \"∼\";\n    var simdot = \"⩪\";\n    var sime = \"≃\";\n    var simeq = \"≃\";\n    var simg = \"⪞\";\n    var simgE = \"⪠\";\n    var siml = \"⪝\";\n    var simlE = \"⪟\";\n    var simne = \"≆\";\n    var simplus = \"⨤\";\n    var simrarr = \"⥲\";\n    var slarr = \"←\";\n    var SmallCircle = \"∘\";\n    var smallsetminus = \"∖\";\n    var smashp = \"⨳\";\n    var smeparsl = \"⧤\";\n    var smid = \"∣\";\n    var smile = \"⌣\";\n    var smt = \"⪪\";\n    var smte = \"⪬\";\n    var smtes = \"⪬︀\";\n    var SOFTcy = \"Ь\";\n    var softcy = \"ь\";\n    var solbar = \"⌿\";\n    var solb = \"⧄\";\n    var sol = \"/\";\n    var Sopf = \"𝕊\";\n    var sopf = \"𝕤\";\n    var spades = \"♠\";\n    var spadesuit = \"♠\";\n    var spar = \"∥\";\n    var sqcap = \"⊓\";\n    var sqcaps = \"⊓︀\";\n    var sqcup = \"⊔\";\n    var sqcups = \"⊔︀\";\n    var Sqrt = \"√\";\n    var sqsub = \"⊏\";\n    var sqsube = \"⊑\";\n    var sqsubset = \"⊏\";\n    var sqsubseteq = \"⊑\";\n    var sqsup = \"⊐\";\n    var sqsupe = \"⊒\";\n    var sqsupset = \"⊐\";\n    var sqsupseteq = \"⊒\";\n    var square = \"□\";\n    var Square = \"□\";\n    var SquareIntersection = \"⊓\";\n    var SquareSubset = \"⊏\";\n    var SquareSubsetEqual = \"⊑\";\n    var SquareSuperset = \"⊐\";\n    var SquareSupersetEqual = \"⊒\";\n    var SquareUnion = \"⊔\";\n    var squarf = \"▪\";\n    var squ = \"□\";\n    var squf = \"▪\";\n    var srarr = \"→\";\n    var Sscr = \"𝒮\";\n    var sscr = \"𝓈\";\n    var ssetmn = \"∖\";\n    var ssmile = \"⌣\";\n    var sstarf = \"⋆\";\n    var Star = \"⋆\";\n    var star = \"☆\";\n    var starf = \"★\";\n    var straightepsilon = \"ϵ\";\n    var straightphi = \"ϕ\";\n    var strns = \"¯\";\n    var sub = \"⊂\";\n    var Sub = \"⋐\";\n    var subdot = \"⪽\";\n    var subE = \"⫅\";\n    var sube = \"⊆\";\n    var subedot = \"⫃\";\n    var submult = \"⫁\";\n    var subnE = \"⫋\";\n    var subne = \"⊊\";\n    var subplus = \"⪿\";\n    var subrarr = \"⥹\";\n    var subset = \"⊂\";\n    var Subset = \"⋐\";\n    var subseteq = \"⊆\";\n    var subseteqq = \"⫅\";\n    var SubsetEqual = \"⊆\";\n    var subsetneq = \"⊊\";\n    var subsetneqq = \"⫋\";\n    var subsim = \"⫇\";\n    var subsub = \"⫕\";\n    var subsup = \"⫓\";\n    var succapprox = \"⪸\";\n    var succ = \"≻\";\n    var succcurlyeq = \"≽\";\n    var Succeeds = \"≻\";\n    var SucceedsEqual = \"⪰\";\n    var SucceedsSlantEqual = \"≽\";\n    var SucceedsTilde = \"≿\";\n    var succeq = \"⪰\";\n    var succnapprox = \"⪺\";\n    var succneqq = \"⪶\";\n    var succnsim = \"⋩\";\n    var succsim = \"≿\";\n    var SuchThat = \"∋\";\n    var sum = \"∑\";\n    var Sum = \"∑\";\n    var sung = \"♪\";\n    var sup1 = \"¹\";\n    var sup2 = \"²\";\n    var sup3 = \"³\";\n    var sup = \"⊃\";\n    var Sup = \"⋑\";\n    var supdot = \"⪾\";\n    var supdsub = \"⫘\";\n    var supE = \"⫆\";\n    var supe = \"⊇\";\n    var supedot = \"⫄\";\n    var Superset = \"⊃\";\n    var SupersetEqual = \"⊇\";\n    var suphsol = \"⟉\";\n    var suphsub = \"⫗\";\n    var suplarr = \"⥻\";\n    var supmult = \"⫂\";\n    var supnE = \"⫌\";\n    var supne = \"⊋\";\n    var supplus = \"⫀\";\n    var supset = \"⊃\";\n    var Supset = \"⋑\";\n    var supseteq = \"⊇\";\n    var supseteqq = \"⫆\";\n    var supsetneq = \"⊋\";\n    var supsetneqq = \"⫌\";\n    var supsim = \"⫈\";\n    var supsub = \"⫔\";\n    var supsup = \"⫖\";\n    var swarhk = \"⤦\";\n    var swarr = \"↙\";\n    var swArr = \"⇙\";\n    var swarrow = \"↙\";\n    var swnwar = \"⤪\";\n    var szlig = \"ß\";\n    var Tab = \"\\t\";\n    var target = \"⌖\";\n    var Tau = \"Τ\";\n    var tau = \"τ\";\n    var tbrk = \"⎴\";\n    var Tcaron = \"Ť\";\n    var tcaron = \"ť\";\n    var Tcedil = \"Ţ\";\n    var tcedil = \"ţ\";\n    var Tcy = \"Т\";\n    var tcy = \"т\";\n    var tdot = \"⃛\";\n    var telrec = \"⌕\";\n    var Tfr = \"𝔗\";\n    var tfr = \"𝔱\";\n    var there4 = \"∴\";\n    var therefore = \"∴\";\n    var Therefore = \"∴\";\n    var Theta = \"Θ\";\n    var theta = \"θ\";\n    var thetasym = \"ϑ\";\n    var thetav = \"ϑ\";\n    var thickapprox = \"≈\";\n    var thicksim = \"∼\";\n    var ThickSpace = \"  \";\n    var ThinSpace = \" \";\n    var thinsp = \" \";\n    var thkap = \"≈\";\n    var thksim = \"∼\";\n    var THORN = \"Þ\";\n    var thorn = \"þ\";\n    var tilde = \"˜\";\n    var Tilde = \"∼\";\n    var TildeEqual = \"≃\";\n    var TildeFullEqual = \"≅\";\n    var TildeTilde = \"≈\";\n    var timesbar = \"⨱\";\n    var timesb = \"⊠\";\n    var times = \"×\";\n    var timesd = \"⨰\";\n    var tint = \"∭\";\n    var toea = \"⤨\";\n    var topbot = \"⌶\";\n    var topcir = \"⫱\";\n    var top = \"⊤\";\n    var Topf = \"𝕋\";\n    var topf = \"𝕥\";\n    var topfork = \"⫚\";\n    var tosa = \"⤩\";\n    var tprime = \"‴\";\n    var trade = \"™\";\n    var TRADE = \"™\";\n    var triangle = \"▵\";\n    var triangledown = \"▿\";\n    var triangleleft = \"◃\";\n    var trianglelefteq = \"⊴\";\n    var triangleq = \"≜\";\n    var triangleright = \"▹\";\n    var trianglerighteq = \"⊵\";\n    var tridot = \"◬\";\n    var trie = \"≜\";\n    var triminus = \"⨺\";\n    var TripleDot = \"⃛\";\n    var triplus = \"⨹\";\n    var trisb = \"⧍\";\n    var tritime = \"⨻\";\n    var trpezium = \"⏢\";\n    var Tscr = \"𝒯\";\n    var tscr = \"𝓉\";\n    var TScy = \"Ц\";\n    var tscy = \"ц\";\n    var TSHcy = \"Ћ\";\n    var tshcy = \"ћ\";\n    var Tstrok = \"Ŧ\";\n    var tstrok = \"ŧ\";\n    var twixt = \"≬\";\n    var twoheadleftarrow = \"↞\";\n    var twoheadrightarrow = \"↠\";\n    var Uacute = \"Ú\";\n    var uacute = \"ú\";\n    var uarr = \"↑\";\n    var Uarr = \"↟\";\n    var uArr = \"⇑\";\n    var Uarrocir = \"⥉\";\n    var Ubrcy = \"Ў\";\n    var ubrcy = \"ў\";\n    var Ubreve = \"Ŭ\";\n    var ubreve = \"ŭ\";\n    var Ucirc = \"Û\";\n    var ucirc = \"û\";\n    var Ucy = \"У\";\n    var ucy = \"у\";\n    var udarr = \"⇅\";\n    var Udblac = \"Ű\";\n    var udblac = \"ű\";\n    var udhar = \"⥮\";\n    var ufisht = \"⥾\";\n    var Ufr = \"𝔘\";\n    var ufr = \"𝔲\";\n    var Ugrave = \"Ù\";\n    var ugrave = \"ù\";\n    var uHar = \"⥣\";\n    var uharl = \"↿\";\n    var uharr = \"↾\";\n    var uhblk = \"▀\";\n    var ulcorn = \"⌜\";\n    var ulcorner = \"⌜\";\n    var ulcrop = \"⌏\";\n    var ultri = \"◸\";\n    var Umacr = \"Ū\";\n    var umacr = \"ū\";\n    var uml = \"¨\";\n    var UnderBar = \"_\";\n    var UnderBrace = \"⏟\";\n    var UnderBracket = \"⎵\";\n    var UnderParenthesis = \"⏝\";\n    var Union = \"⋃\";\n    var UnionPlus = \"⊎\";\n    var Uogon = \"Ų\";\n    var uogon = \"ų\";\n    var Uopf = \"𝕌\";\n    var uopf = \"𝕦\";\n    var UpArrowBar = \"⤒\";\n    var uparrow = \"↑\";\n    var UpArrow = \"↑\";\n    var Uparrow = \"⇑\";\n    var UpArrowDownArrow = \"⇅\";\n    var updownarrow = \"↕\";\n    var UpDownArrow = \"↕\";\n    var Updownarrow = \"⇕\";\n    var UpEquilibrium = \"⥮\";\n    var upharpoonleft = \"↿\";\n    var upharpoonright = \"↾\";\n    var uplus = \"⊎\";\n    var UpperLeftArrow = \"↖\";\n    var UpperRightArrow = \"↗\";\n    var upsi = \"υ\";\n    var Upsi = \"ϒ\";\n    var upsih = \"ϒ\";\n    var Upsilon = \"Υ\";\n    var upsilon = \"υ\";\n    var UpTeeArrow = \"↥\";\n    var UpTee = \"⊥\";\n    var upuparrows = \"⇈\";\n    var urcorn = \"⌝\";\n    var urcorner = \"⌝\";\n    var urcrop = \"⌎\";\n    var Uring = \"Ů\";\n    var uring = \"ů\";\n    var urtri = \"◹\";\n    var Uscr = \"𝒰\";\n    var uscr = \"𝓊\";\n    var utdot = \"⋰\";\n    var Utilde = \"Ũ\";\n    var utilde = \"ũ\";\n    var utri = \"▵\";\n    var utrif = \"▴\";\n    var uuarr = \"⇈\";\n    var Uuml = \"Ü\";\n    var uuml = \"ü\";\n    var uwangle = \"⦧\";\n    var vangrt = \"⦜\";\n    var varepsilon = \"ϵ\";\n    var varkappa = \"ϰ\";\n    var varnothing = \"∅\";\n    var varphi = \"ϕ\";\n    var varpi = \"ϖ\";\n    var varpropto = \"∝\";\n    var varr = \"↕\";\n    var vArr = \"⇕\";\n    var varrho = \"ϱ\";\n    var varsigma = \"ς\";\n    var varsubsetneq = \"⊊︀\";\n    var varsubsetneqq = \"⫋︀\";\n    var varsupsetneq = \"⊋︀\";\n    var varsupsetneqq = \"⫌︀\";\n    var vartheta = \"ϑ\";\n    var vartriangleleft = \"⊲\";\n    var vartriangleright = \"⊳\";\n    var vBar = \"⫨\";\n    var Vbar = \"⫫\";\n    var vBarv = \"⫩\";\n    var Vcy = \"В\";\n    var vcy = \"в\";\n    var vdash = \"⊢\";\n    var vDash = \"⊨\";\n    var Vdash = \"⊩\";\n    var VDash = \"⊫\";\n    var Vdashl = \"⫦\";\n    var veebar = \"⊻\";\n    var vee = \"∨\";\n    var Vee = \"⋁\";\n    var veeeq = \"≚\";\n    var vellip = \"⋮\";\n    var verbar = \"|\";\n    var Verbar = \"‖\";\n    var vert = \"|\";\n    var Vert = \"‖\";\n    var VerticalBar = \"∣\";\n    var VerticalLine = \"|\";\n    var VerticalSeparator = \"❘\";\n    var VerticalTilde = \"≀\";\n    var VeryThinSpace = \" \";\n    var Vfr = \"𝔙\";\n    var vfr = \"𝔳\";\n    var vltri = \"⊲\";\n    var vnsub = \"⊂⃒\";\n    var vnsup = \"⊃⃒\";\n    var Vopf = \"𝕍\";\n    var vopf = \"𝕧\";\n    var vprop = \"∝\";\n    var vrtri = \"⊳\";\n    var Vscr = \"𝒱\";\n    var vscr = \"𝓋\";\n    var vsubnE = \"⫋︀\";\n    var vsubne = \"⊊︀\";\n    var vsupnE = \"⫌︀\";\n    var vsupne = \"⊋︀\";\n    var Vvdash = \"⊪\";\n    var vzigzag = \"⦚\";\n    var Wcirc = \"Ŵ\";\n    var wcirc = \"ŵ\";\n    var wedbar = \"⩟\";\n    var wedge = \"∧\";\n    var Wedge = \"⋀\";\n    var wedgeq = \"≙\";\n    var weierp = \"℘\";\n    var Wfr = \"𝔚\";\n    var wfr = \"𝔴\";\n    var Wopf = \"𝕎\";\n    var wopf = \"𝕨\";\n    var wp = \"℘\";\n    var wr = \"≀\";\n    var wreath = \"≀\";\n    var Wscr = \"𝒲\";\n    var wscr = \"𝓌\";\n    var xcap = \"⋂\";\n    var xcirc = \"◯\";\n    var xcup = \"⋃\";\n    var xdtri = \"▽\";\n    var Xfr = \"𝔛\";\n    var xfr = \"𝔵\";\n    var xharr = \"⟷\";\n    var xhArr = \"⟺\";\n    var Xi = \"Ξ\";\n    var xi = \"ξ\";\n    var xlarr = \"⟵\";\n    var xlArr = \"⟸\";\n    var xmap = \"⟼\";\n    var xnis = \"⋻\";\n    var xodot = \"⨀\";\n    var Xopf = \"𝕏\";\n    var xopf = \"𝕩\";\n    var xoplus = \"⨁\";\n    var xotime = \"⨂\";\n    var xrarr = \"⟶\";\n    var xrArr = \"⟹\";\n    var Xscr = \"𝒳\";\n    var xscr = \"𝓍\";\n    var xsqcup = \"⨆\";\n    var xuplus = \"⨄\";\n    var xutri = \"△\";\n    var xvee = \"⋁\";\n    var xwedge = \"⋀\";\n    var Yacute = \"Ý\";\n    var yacute = \"ý\";\n    var YAcy = \"Я\";\n    var yacy = \"я\";\n    var Ycirc = \"Ŷ\";\n    var ycirc = \"ŷ\";\n    var Ycy = \"Ы\";\n    var ycy = \"ы\";\n    var yen = \"¥\";\n    var Yfr = \"𝔜\";\n    var yfr = \"𝔶\";\n    var YIcy = \"Ї\";\n    var yicy = \"ї\";\n    var Yopf = \"𝕐\";\n    var yopf = \"𝕪\";\n    var Yscr = \"𝒴\";\n    var yscr = \"𝓎\";\n    var YUcy = \"Ю\";\n    var yucy = \"ю\";\n    var yuml = \"ÿ\";\n    var Yuml = \"Ÿ\";\n    var Zacute = \"Ź\";\n    var zacute = \"ź\";\n    var Zcaron = \"Ž\";\n    var zcaron = \"ž\";\n    var Zcy = \"З\";\n    var zcy = \"з\";\n    var Zdot = \"Ż\";\n    var zdot = \"ż\";\n    var zeetrf = \"ℨ\";\n    var ZeroWidthSpace = \"​\";\n    var Zeta = \"Ζ\";\n    var zeta = \"ζ\";\n    var zfr = \"𝔷\";\n    var Zfr = \"ℨ\";\n    var ZHcy = \"Ж\";\n    var zhcy = \"ж\";\n    var zigrarr = \"⇝\";\n    var zopf = \"𝕫\";\n    var Zopf = \"ℤ\";\n    var Zscr = \"𝒵\";\n    var zscr = \"𝓏\";\n    var zwj = \"‍\";\n    var zwnj = \"‌\";\n    var entities = {\n    \tAacute: Aacute,\n    \taacute: aacute,\n    \tAbreve: Abreve,\n    \tabreve: abreve,\n    \tac: ac,\n    \tacd: acd,\n    \tacE: acE,\n    \tAcirc: Acirc,\n    \tacirc: acirc,\n    \tacute: acute,\n    \tAcy: Acy,\n    \tacy: acy,\n    \tAElig: AElig,\n    \taelig: aelig,\n    \taf: af,\n    \tAfr: Afr,\n    \tafr: afr,\n    \tAgrave: Agrave,\n    \tagrave: agrave,\n    \talefsym: alefsym,\n    \taleph: aleph,\n    \tAlpha: Alpha,\n    \talpha: alpha,\n    \tAmacr: Amacr,\n    \tamacr: amacr,\n    \tamalg: amalg,\n    \tamp: amp,\n    \tAMP: AMP,\n    \tandand: andand,\n    \tAnd: And,\n    \tand: and,\n    \tandd: andd,\n    \tandslope: andslope,\n    \tandv: andv,\n    \tang: ang,\n    \tange: ange,\n    \tangle: angle,\n    \tangmsdaa: angmsdaa,\n    \tangmsdab: angmsdab,\n    \tangmsdac: angmsdac,\n    \tangmsdad: angmsdad,\n    \tangmsdae: angmsdae,\n    \tangmsdaf: angmsdaf,\n    \tangmsdag: angmsdag,\n    \tangmsdah: angmsdah,\n    \tangmsd: angmsd,\n    \tangrt: angrt,\n    \tangrtvb: angrtvb,\n    \tangrtvbd: angrtvbd,\n    \tangsph: angsph,\n    \tangst: angst,\n    \tangzarr: angzarr,\n    \tAogon: Aogon,\n    \taogon: aogon,\n    \tAopf: Aopf,\n    \taopf: aopf,\n    \tapacir: apacir,\n    \tap: ap,\n    \tapE: apE,\n    \tape: ape,\n    \tapid: apid,\n    \tapos: apos,\n    \tApplyFunction: ApplyFunction,\n    \tapprox: approx,\n    \tapproxeq: approxeq,\n    \tAring: Aring,\n    \taring: aring,\n    \tAscr: Ascr,\n    \tascr: ascr,\n    \tAssign: Assign,\n    \tast: ast,\n    \tasymp: asymp,\n    \tasympeq: asympeq,\n    \tAtilde: Atilde,\n    \tatilde: atilde,\n    \tAuml: Auml,\n    \tauml: auml,\n    \tawconint: awconint,\n    \tawint: awint,\n    \tbackcong: backcong,\n    \tbackepsilon: backepsilon,\n    \tbackprime: backprime,\n    \tbacksim: backsim,\n    \tbacksimeq: backsimeq,\n    \tBackslash: Backslash,\n    \tBarv: Barv,\n    \tbarvee: barvee,\n    \tbarwed: barwed,\n    \tBarwed: Barwed,\n    \tbarwedge: barwedge,\n    \tbbrk: bbrk,\n    \tbbrktbrk: bbrktbrk,\n    \tbcong: bcong,\n    \tBcy: Bcy,\n    \tbcy: bcy,\n    \tbdquo: bdquo,\n    \tbecaus: becaus,\n    \tbecause: because,\n    \tBecause: Because,\n    \tbemptyv: bemptyv,\n    \tbepsi: bepsi,\n    \tbernou: bernou,\n    \tBernoullis: Bernoullis,\n    \tBeta: Beta,\n    \tbeta: beta,\n    \tbeth: beth,\n    \tbetween: between,\n    \tBfr: Bfr,\n    \tbfr: bfr,\n    \tbigcap: bigcap,\n    \tbigcirc: bigcirc,\n    \tbigcup: bigcup,\n    \tbigodot: bigodot,\n    \tbigoplus: bigoplus,\n    \tbigotimes: bigotimes,\n    \tbigsqcup: bigsqcup,\n    \tbigstar: bigstar,\n    \tbigtriangledown: bigtriangledown,\n    \tbigtriangleup: bigtriangleup,\n    \tbiguplus: biguplus,\n    \tbigvee: bigvee,\n    \tbigwedge: bigwedge,\n    \tbkarow: bkarow,\n    \tblacklozenge: blacklozenge,\n    \tblacksquare: blacksquare,\n    \tblacktriangle: blacktriangle,\n    \tblacktriangledown: blacktriangledown,\n    \tblacktriangleleft: blacktriangleleft,\n    \tblacktriangleright: blacktriangleright,\n    \tblank: blank,\n    \tblk12: blk12,\n    \tblk14: blk14,\n    \tblk34: blk34,\n    \tblock: block,\n    \tbne: bne,\n    \tbnequiv: bnequiv,\n    \tbNot: bNot,\n    \tbnot: bnot,\n    \tBopf: Bopf,\n    \tbopf: bopf,\n    \tbot: bot,\n    \tbottom: bottom,\n    \tbowtie: bowtie,\n    \tboxbox: boxbox,\n    \tboxdl: boxdl,\n    \tboxdL: boxdL,\n    \tboxDl: boxDl,\n    \tboxDL: boxDL,\n    \tboxdr: boxdr,\n    \tboxdR: boxdR,\n    \tboxDr: boxDr,\n    \tboxDR: boxDR,\n    \tboxh: boxh,\n    \tboxH: boxH,\n    \tboxhd: boxhd,\n    \tboxHd: boxHd,\n    \tboxhD: boxhD,\n    \tboxHD: boxHD,\n    \tboxhu: boxhu,\n    \tboxHu: boxHu,\n    \tboxhU: boxhU,\n    \tboxHU: boxHU,\n    \tboxminus: boxminus,\n    \tboxplus: boxplus,\n    \tboxtimes: boxtimes,\n    \tboxul: boxul,\n    \tboxuL: boxuL,\n    \tboxUl: boxUl,\n    \tboxUL: boxUL,\n    \tboxur: boxur,\n    \tboxuR: boxuR,\n    \tboxUr: boxUr,\n    \tboxUR: boxUR,\n    \tboxv: boxv,\n    \tboxV: boxV,\n    \tboxvh: boxvh,\n    \tboxvH: boxvH,\n    \tboxVh: boxVh,\n    \tboxVH: boxVH,\n    \tboxvl: boxvl,\n    \tboxvL: boxvL,\n    \tboxVl: boxVl,\n    \tboxVL: boxVL,\n    \tboxvr: boxvr,\n    \tboxvR: boxvR,\n    \tboxVr: boxVr,\n    \tboxVR: boxVR,\n    \tbprime: bprime,\n    \tbreve: breve,\n    \tBreve: Breve,\n    \tbrvbar: brvbar,\n    \tbscr: bscr,\n    \tBscr: Bscr,\n    \tbsemi: bsemi,\n    \tbsim: bsim,\n    \tbsime: bsime,\n    \tbsolb: bsolb,\n    \tbsol: bsol,\n    \tbsolhsub: bsolhsub,\n    \tbull: bull,\n    \tbullet: bullet,\n    \tbump: bump,\n    \tbumpE: bumpE,\n    \tbumpe: bumpe,\n    \tBumpeq: Bumpeq,\n    \tbumpeq: bumpeq,\n    \tCacute: Cacute,\n    \tcacute: cacute,\n    \tcapand: capand,\n    \tcapbrcup: capbrcup,\n    \tcapcap: capcap,\n    \tcap: cap,\n    \tCap: Cap,\n    \tcapcup: capcup,\n    \tcapdot: capdot,\n    \tCapitalDifferentialD: CapitalDifferentialD,\n    \tcaps: caps,\n    \tcaret: caret,\n    \tcaron: caron,\n    \tCayleys: Cayleys,\n    \tccaps: ccaps,\n    \tCcaron: Ccaron,\n    \tccaron: ccaron,\n    \tCcedil: Ccedil,\n    \tccedil: ccedil,\n    \tCcirc: Ccirc,\n    \tccirc: ccirc,\n    \tCconint: Cconint,\n    \tccups: ccups,\n    \tccupssm: ccupssm,\n    \tCdot: Cdot,\n    \tcdot: cdot,\n    \tcedil: cedil,\n    \tCedilla: Cedilla,\n    \tcemptyv: cemptyv,\n    \tcent: cent,\n    \tcenterdot: centerdot,\n    \tCenterDot: CenterDot,\n    \tcfr: cfr,\n    \tCfr: Cfr,\n    \tCHcy: CHcy,\n    \tchcy: chcy,\n    \tcheck: check,\n    \tcheckmark: checkmark,\n    \tChi: Chi,\n    \tchi: chi,\n    \tcirc: circ,\n    \tcirceq: circeq,\n    \tcirclearrowleft: circlearrowleft,\n    \tcirclearrowright: circlearrowright,\n    \tcircledast: circledast,\n    \tcircledcirc: circledcirc,\n    \tcircleddash: circleddash,\n    \tCircleDot: CircleDot,\n    \tcircledR: circledR,\n    \tcircledS: circledS,\n    \tCircleMinus: CircleMinus,\n    \tCirclePlus: CirclePlus,\n    \tCircleTimes: CircleTimes,\n    \tcir: cir,\n    \tcirE: cirE,\n    \tcire: cire,\n    \tcirfnint: cirfnint,\n    \tcirmid: cirmid,\n    \tcirscir: cirscir,\n    \tClockwiseContourIntegral: ClockwiseContourIntegral,\n    \tCloseCurlyDoubleQuote: CloseCurlyDoubleQuote,\n    \tCloseCurlyQuote: CloseCurlyQuote,\n    \tclubs: clubs,\n    \tclubsuit: clubsuit,\n    \tcolon: colon,\n    \tColon: Colon,\n    \tColone: Colone,\n    \tcolone: colone,\n    \tcoloneq: coloneq,\n    \tcomma: comma,\n    \tcommat: commat,\n    \tcomp: comp,\n    \tcompfn: compfn,\n    \tcomplement: complement,\n    \tcomplexes: complexes,\n    \tcong: cong,\n    \tcongdot: congdot,\n    \tCongruent: Congruent,\n    \tconint: conint,\n    \tConint: Conint,\n    \tContourIntegral: ContourIntegral,\n    \tcopf: copf,\n    \tCopf: Copf,\n    \tcoprod: coprod,\n    \tCoproduct: Coproduct,\n    \tcopy: copy,\n    \tCOPY: COPY,\n    \tcopysr: copysr,\n    \tCounterClockwiseContourIntegral: CounterClockwiseContourIntegral,\n    \tcrarr: crarr,\n    \tcross: cross,\n    \tCross: Cross,\n    \tCscr: Cscr,\n    \tcscr: cscr,\n    \tcsub: csub,\n    \tcsube: csube,\n    \tcsup: csup,\n    \tcsupe: csupe,\n    \tctdot: ctdot,\n    \tcudarrl: cudarrl,\n    \tcudarrr: cudarrr,\n    \tcuepr: cuepr,\n    \tcuesc: cuesc,\n    \tcularr: cularr,\n    \tcularrp: cularrp,\n    \tcupbrcap: cupbrcap,\n    \tcupcap: cupcap,\n    \tCupCap: CupCap,\n    \tcup: cup,\n    \tCup: Cup,\n    \tcupcup: cupcup,\n    \tcupdot: cupdot,\n    \tcupor: cupor,\n    \tcups: cups,\n    \tcurarr: curarr,\n    \tcurarrm: curarrm,\n    \tcurlyeqprec: curlyeqprec,\n    \tcurlyeqsucc: curlyeqsucc,\n    \tcurlyvee: curlyvee,\n    \tcurlywedge: curlywedge,\n    \tcurren: curren,\n    \tcurvearrowleft: curvearrowleft,\n    \tcurvearrowright: curvearrowright,\n    \tcuvee: cuvee,\n    \tcuwed: cuwed,\n    \tcwconint: cwconint,\n    \tcwint: cwint,\n    \tcylcty: cylcty,\n    \tdagger: dagger,\n    \tDagger: Dagger,\n    \tdaleth: daleth,\n    \tdarr: darr,\n    \tDarr: Darr,\n    \tdArr: dArr,\n    \tdash: dash,\n    \tDashv: Dashv,\n    \tdashv: dashv,\n    \tdbkarow: dbkarow,\n    \tdblac: dblac,\n    \tDcaron: Dcaron,\n    \tdcaron: dcaron,\n    \tDcy: Dcy,\n    \tdcy: dcy,\n    \tddagger: ddagger,\n    \tddarr: ddarr,\n    \tDD: DD,\n    \tdd: dd,\n    \tDDotrahd: DDotrahd,\n    \tddotseq: ddotseq,\n    \tdeg: deg,\n    \tDel: Del,\n    \tDelta: Delta,\n    \tdelta: delta,\n    \tdemptyv: demptyv,\n    \tdfisht: dfisht,\n    \tDfr: Dfr,\n    \tdfr: dfr,\n    \tdHar: dHar,\n    \tdharl: dharl,\n    \tdharr: dharr,\n    \tDiacriticalAcute: DiacriticalAcute,\n    \tDiacriticalDot: DiacriticalDot,\n    \tDiacriticalDoubleAcute: DiacriticalDoubleAcute,\n    \tDiacriticalGrave: DiacriticalGrave,\n    \tDiacriticalTilde: DiacriticalTilde,\n    \tdiam: diam,\n    \tdiamond: diamond,\n    \tDiamond: Diamond,\n    \tdiamondsuit: diamondsuit,\n    \tdiams: diams,\n    \tdie: die,\n    \tDifferentialD: DifferentialD,\n    \tdigamma: digamma,\n    \tdisin: disin,\n    \tdiv: div,\n    \tdivide: divide,\n    \tdivideontimes: divideontimes,\n    \tdivonx: divonx,\n    \tDJcy: DJcy,\n    \tdjcy: djcy,\n    \tdlcorn: dlcorn,\n    \tdlcrop: dlcrop,\n    \tdollar: dollar,\n    \tDopf: Dopf,\n    \tdopf: dopf,\n    \tDot: Dot,\n    \tdot: dot,\n    \tDotDot: DotDot,\n    \tdoteq: doteq,\n    \tdoteqdot: doteqdot,\n    \tDotEqual: DotEqual,\n    \tdotminus: dotminus,\n    \tdotplus: dotplus,\n    \tdotsquare: dotsquare,\n    \tdoublebarwedge: doublebarwedge,\n    \tDoubleContourIntegral: DoubleContourIntegral,\n    \tDoubleDot: DoubleDot,\n    \tDoubleDownArrow: DoubleDownArrow,\n    \tDoubleLeftArrow: DoubleLeftArrow,\n    \tDoubleLeftRightArrow: DoubleLeftRightArrow,\n    \tDoubleLeftTee: DoubleLeftTee,\n    \tDoubleLongLeftArrow: DoubleLongLeftArrow,\n    \tDoubleLongLeftRightArrow: DoubleLongLeftRightArrow,\n    \tDoubleLongRightArrow: DoubleLongRightArrow,\n    \tDoubleRightArrow: DoubleRightArrow,\n    \tDoubleRightTee: DoubleRightTee,\n    \tDoubleUpArrow: DoubleUpArrow,\n    \tDoubleUpDownArrow: DoubleUpDownArrow,\n    \tDoubleVerticalBar: DoubleVerticalBar,\n    \tDownArrowBar: DownArrowBar,\n    \tdownarrow: downarrow,\n    \tDownArrow: DownArrow,\n    \tDownarrow: Downarrow,\n    \tDownArrowUpArrow: DownArrowUpArrow,\n    \tDownBreve: DownBreve,\n    \tdowndownarrows: downdownarrows,\n    \tdownharpoonleft: downharpoonleft,\n    \tdownharpoonright: downharpoonright,\n    \tDownLeftRightVector: DownLeftRightVector,\n    \tDownLeftTeeVector: DownLeftTeeVector,\n    \tDownLeftVectorBar: DownLeftVectorBar,\n    \tDownLeftVector: DownLeftVector,\n    \tDownRightTeeVector: DownRightTeeVector,\n    \tDownRightVectorBar: DownRightVectorBar,\n    \tDownRightVector: DownRightVector,\n    \tDownTeeArrow: DownTeeArrow,\n    \tDownTee: DownTee,\n    \tdrbkarow: drbkarow,\n    \tdrcorn: drcorn,\n    \tdrcrop: drcrop,\n    \tDscr: Dscr,\n    \tdscr: dscr,\n    \tDScy: DScy,\n    \tdscy: dscy,\n    \tdsol: dsol,\n    \tDstrok: Dstrok,\n    \tdstrok: dstrok,\n    \tdtdot: dtdot,\n    \tdtri: dtri,\n    \tdtrif: dtrif,\n    \tduarr: duarr,\n    \tduhar: duhar,\n    \tdwangle: dwangle,\n    \tDZcy: DZcy,\n    \tdzcy: dzcy,\n    \tdzigrarr: dzigrarr,\n    \tEacute: Eacute,\n    \teacute: eacute,\n    \teaster: easter,\n    \tEcaron: Ecaron,\n    \tecaron: ecaron,\n    \tEcirc: Ecirc,\n    \tecirc: ecirc,\n    \tecir: ecir,\n    \tecolon: ecolon,\n    \tEcy: Ecy,\n    \tecy: ecy,\n    \teDDot: eDDot,\n    \tEdot: Edot,\n    \tedot: edot,\n    \teDot: eDot,\n    \tee: ee,\n    \tefDot: efDot,\n    \tEfr: Efr,\n    \tefr: efr,\n    \teg: eg,\n    \tEgrave: Egrave,\n    \tegrave: egrave,\n    \tegs: egs,\n    \tegsdot: egsdot,\n    \tel: el,\n    \tElement: Element,\n    \telinters: elinters,\n    \tell: ell,\n    \tels: els,\n    \telsdot: elsdot,\n    \tEmacr: Emacr,\n    \temacr: emacr,\n    \tempty: empty,\n    \temptyset: emptyset,\n    \tEmptySmallSquare: EmptySmallSquare,\n    \temptyv: emptyv,\n    \tEmptyVerySmallSquare: EmptyVerySmallSquare,\n    \temsp13: emsp13,\n    \temsp14: emsp14,\n    \temsp: emsp,\n    \tENG: ENG,\n    \teng: eng,\n    \tensp: ensp,\n    \tEogon: Eogon,\n    \teogon: eogon,\n    \tEopf: Eopf,\n    \teopf: eopf,\n    \tepar: epar,\n    \teparsl: eparsl,\n    \teplus: eplus,\n    \tepsi: epsi,\n    \tEpsilon: Epsilon,\n    \tepsilon: epsilon,\n    \tepsiv: epsiv,\n    \teqcirc: eqcirc,\n    \teqcolon: eqcolon,\n    \teqsim: eqsim,\n    \teqslantgtr: eqslantgtr,\n    \teqslantless: eqslantless,\n    \tEqual: Equal,\n    \tequals: equals,\n    \tEqualTilde: EqualTilde,\n    \tequest: equest,\n    \tEquilibrium: Equilibrium,\n    \tequiv: equiv,\n    \tequivDD: equivDD,\n    \teqvparsl: eqvparsl,\n    \terarr: erarr,\n    \terDot: erDot,\n    \tescr: escr,\n    \tEscr: Escr,\n    \tesdot: esdot,\n    \tEsim: Esim,\n    \tesim: esim,\n    \tEta: Eta,\n    \teta: eta,\n    \tETH: ETH,\n    \teth: eth,\n    \tEuml: Euml,\n    \teuml: euml,\n    \teuro: euro,\n    \texcl: excl,\n    \texist: exist,\n    \tExists: Exists,\n    \texpectation: expectation,\n    \texponentiale: exponentiale,\n    \tExponentialE: ExponentialE,\n    \tfallingdotseq: fallingdotseq,\n    \tFcy: Fcy,\n    \tfcy: fcy,\n    \tfemale: female,\n    \tffilig: ffilig,\n    \tfflig: fflig,\n    \tffllig: ffllig,\n    \tFfr: Ffr,\n    \tffr: ffr,\n    \tfilig: filig,\n    \tFilledSmallSquare: FilledSmallSquare,\n    \tFilledVerySmallSquare: FilledVerySmallSquare,\n    \tfjlig: fjlig,\n    \tflat: flat,\n    \tfllig: fllig,\n    \tfltns: fltns,\n    \tfnof: fnof,\n    \tFopf: Fopf,\n    \tfopf: fopf,\n    \tforall: forall,\n    \tForAll: ForAll,\n    \tfork: fork,\n    \tforkv: forkv,\n    \tFouriertrf: Fouriertrf,\n    \tfpartint: fpartint,\n    \tfrac12: frac12,\n    \tfrac13: frac13,\n    \tfrac14: frac14,\n    \tfrac15: frac15,\n    \tfrac16: frac16,\n    \tfrac18: frac18,\n    \tfrac23: frac23,\n    \tfrac25: frac25,\n    \tfrac34: frac34,\n    \tfrac35: frac35,\n    \tfrac38: frac38,\n    \tfrac45: frac45,\n    \tfrac56: frac56,\n    \tfrac58: frac58,\n    \tfrac78: frac78,\n    \tfrasl: frasl,\n    \tfrown: frown,\n    \tfscr: fscr,\n    \tFscr: Fscr,\n    \tgacute: gacute,\n    \tGamma: Gamma,\n    \tgamma: gamma,\n    \tGammad: Gammad,\n    \tgammad: gammad,\n    \tgap: gap,\n    \tGbreve: Gbreve,\n    \tgbreve: gbreve,\n    \tGcedil: Gcedil,\n    \tGcirc: Gcirc,\n    \tgcirc: gcirc,\n    \tGcy: Gcy,\n    \tgcy: gcy,\n    \tGdot: Gdot,\n    \tgdot: gdot,\n    \tge: ge,\n    \tgE: gE,\n    \tgEl: gEl,\n    \tgel: gel,\n    \tgeq: geq,\n    \tgeqq: geqq,\n    \tgeqslant: geqslant,\n    \tgescc: gescc,\n    \tges: ges,\n    \tgesdot: gesdot,\n    \tgesdoto: gesdoto,\n    \tgesdotol: gesdotol,\n    \tgesl: gesl,\n    \tgesles: gesles,\n    \tGfr: Gfr,\n    \tgfr: gfr,\n    \tgg: gg,\n    \tGg: Gg,\n    \tggg: ggg,\n    \tgimel: gimel,\n    \tGJcy: GJcy,\n    \tgjcy: gjcy,\n    \tgla: gla,\n    \tgl: gl,\n    \tglE: glE,\n    \tglj: glj,\n    \tgnap: gnap,\n    \tgnapprox: gnapprox,\n    \tgne: gne,\n    \tgnE: gnE,\n    \tgneq: gneq,\n    \tgneqq: gneqq,\n    \tgnsim: gnsim,\n    \tGopf: Gopf,\n    \tgopf: gopf,\n    \tgrave: grave,\n    \tGreaterEqual: GreaterEqual,\n    \tGreaterEqualLess: GreaterEqualLess,\n    \tGreaterFullEqual: GreaterFullEqual,\n    \tGreaterGreater: GreaterGreater,\n    \tGreaterLess: GreaterLess,\n    \tGreaterSlantEqual: GreaterSlantEqual,\n    \tGreaterTilde: GreaterTilde,\n    \tGscr: Gscr,\n    \tgscr: gscr,\n    \tgsim: gsim,\n    \tgsime: gsime,\n    \tgsiml: gsiml,\n    \tgtcc: gtcc,\n    \tgtcir: gtcir,\n    \tgt: gt,\n    \tGT: GT,\n    \tGt: Gt,\n    \tgtdot: gtdot,\n    \tgtlPar: gtlPar,\n    \tgtquest: gtquest,\n    \tgtrapprox: gtrapprox,\n    \tgtrarr: gtrarr,\n    \tgtrdot: gtrdot,\n    \tgtreqless: gtreqless,\n    \tgtreqqless: gtreqqless,\n    \tgtrless: gtrless,\n    \tgtrsim: gtrsim,\n    \tgvertneqq: gvertneqq,\n    \tgvnE: gvnE,\n    \tHacek: Hacek,\n    \thairsp: hairsp,\n    \thalf: half,\n    \thamilt: hamilt,\n    \tHARDcy: HARDcy,\n    \thardcy: hardcy,\n    \tharrcir: harrcir,\n    \tharr: harr,\n    \thArr: hArr,\n    \tharrw: harrw,\n    \tHat: Hat,\n    \thbar: hbar,\n    \tHcirc: Hcirc,\n    \thcirc: hcirc,\n    \thearts: hearts,\n    \theartsuit: heartsuit,\n    \thellip: hellip,\n    \thercon: hercon,\n    \thfr: hfr,\n    \tHfr: Hfr,\n    \tHilbertSpace: HilbertSpace,\n    \thksearow: hksearow,\n    \thkswarow: hkswarow,\n    \thoarr: hoarr,\n    \thomtht: homtht,\n    \thookleftarrow: hookleftarrow,\n    \thookrightarrow: hookrightarrow,\n    \thopf: hopf,\n    \tHopf: Hopf,\n    \thorbar: horbar,\n    \tHorizontalLine: HorizontalLine,\n    \thscr: hscr,\n    \tHscr: Hscr,\n    \thslash: hslash,\n    \tHstrok: Hstrok,\n    \thstrok: hstrok,\n    \tHumpDownHump: HumpDownHump,\n    \tHumpEqual: HumpEqual,\n    \thybull: hybull,\n    \thyphen: hyphen,\n    \tIacute: Iacute,\n    \tiacute: iacute,\n    \tic: ic,\n    \tIcirc: Icirc,\n    \ticirc: icirc,\n    \tIcy: Icy,\n    \ticy: icy,\n    \tIdot: Idot,\n    \tIEcy: IEcy,\n    \tiecy: iecy,\n    \tiexcl: iexcl,\n    \tiff: iff,\n    \tifr: ifr,\n    \tIfr: Ifr,\n    \tIgrave: Igrave,\n    \tigrave: igrave,\n    \tii: ii,\n    \tiiiint: iiiint,\n    \tiiint: iiint,\n    \tiinfin: iinfin,\n    \tiiota: iiota,\n    \tIJlig: IJlig,\n    \tijlig: ijlig,\n    \tImacr: Imacr,\n    \timacr: imacr,\n    \timage: image,\n    \tImaginaryI: ImaginaryI,\n    \timagline: imagline,\n    \timagpart: imagpart,\n    \timath: imath,\n    \tIm: Im,\n    \timof: imof,\n    \timped: imped,\n    \tImplies: Implies,\n    \tincare: incare,\n    \t\"in\": \"∈\",\n    \tinfin: infin,\n    \tinfintie: infintie,\n    \tinodot: inodot,\n    \tintcal: intcal,\n    \tint: int,\n    \tInt: Int,\n    \tintegers: integers,\n    \tIntegral: Integral,\n    \tintercal: intercal,\n    \tIntersection: Intersection,\n    \tintlarhk: intlarhk,\n    \tintprod: intprod,\n    \tInvisibleComma: InvisibleComma,\n    \tInvisibleTimes: InvisibleTimes,\n    \tIOcy: IOcy,\n    \tiocy: iocy,\n    \tIogon: Iogon,\n    \tiogon: iogon,\n    \tIopf: Iopf,\n    \tiopf: iopf,\n    \tIota: Iota,\n    \tiota: iota,\n    \tiprod: iprod,\n    \tiquest: iquest,\n    \tiscr: iscr,\n    \tIscr: Iscr,\n    \tisin: isin,\n    \tisindot: isindot,\n    \tisinE: isinE,\n    \tisins: isins,\n    \tisinsv: isinsv,\n    \tisinv: isinv,\n    \tit: it,\n    \tItilde: Itilde,\n    \titilde: itilde,\n    \tIukcy: Iukcy,\n    \tiukcy: iukcy,\n    \tIuml: Iuml,\n    \tiuml: iuml,\n    \tJcirc: Jcirc,\n    \tjcirc: jcirc,\n    \tJcy: Jcy,\n    \tjcy: jcy,\n    \tJfr: Jfr,\n    \tjfr: jfr,\n    \tjmath: jmath,\n    \tJopf: Jopf,\n    \tjopf: jopf,\n    \tJscr: Jscr,\n    \tjscr: jscr,\n    \tJsercy: Jsercy,\n    \tjsercy: jsercy,\n    \tJukcy: Jukcy,\n    \tjukcy: jukcy,\n    \tKappa: Kappa,\n    \tkappa: kappa,\n    \tkappav: kappav,\n    \tKcedil: Kcedil,\n    \tkcedil: kcedil,\n    \tKcy: Kcy,\n    \tkcy: kcy,\n    \tKfr: Kfr,\n    \tkfr: kfr,\n    \tkgreen: kgreen,\n    \tKHcy: KHcy,\n    \tkhcy: khcy,\n    \tKJcy: KJcy,\n    \tkjcy: kjcy,\n    \tKopf: Kopf,\n    \tkopf: kopf,\n    \tKscr: Kscr,\n    \tkscr: kscr,\n    \tlAarr: lAarr,\n    \tLacute: Lacute,\n    \tlacute: lacute,\n    \tlaemptyv: laemptyv,\n    \tlagran: lagran,\n    \tLambda: Lambda,\n    \tlambda: lambda,\n    \tlang: lang,\n    \tLang: Lang,\n    \tlangd: langd,\n    \tlangle: langle,\n    \tlap: lap,\n    \tLaplacetrf: Laplacetrf,\n    \tlaquo: laquo,\n    \tlarrb: larrb,\n    \tlarrbfs: larrbfs,\n    \tlarr: larr,\n    \tLarr: Larr,\n    \tlArr: lArr,\n    \tlarrfs: larrfs,\n    \tlarrhk: larrhk,\n    \tlarrlp: larrlp,\n    \tlarrpl: larrpl,\n    \tlarrsim: larrsim,\n    \tlarrtl: larrtl,\n    \tlatail: latail,\n    \tlAtail: lAtail,\n    \tlat: lat,\n    \tlate: late,\n    \tlates: lates,\n    \tlbarr: lbarr,\n    \tlBarr: lBarr,\n    \tlbbrk: lbbrk,\n    \tlbrace: lbrace,\n    \tlbrack: lbrack,\n    \tlbrke: lbrke,\n    \tlbrksld: lbrksld,\n    \tlbrkslu: lbrkslu,\n    \tLcaron: Lcaron,\n    \tlcaron: lcaron,\n    \tLcedil: Lcedil,\n    \tlcedil: lcedil,\n    \tlceil: lceil,\n    \tlcub: lcub,\n    \tLcy: Lcy,\n    \tlcy: lcy,\n    \tldca: ldca,\n    \tldquo: ldquo,\n    \tldquor: ldquor,\n    \tldrdhar: ldrdhar,\n    \tldrushar: ldrushar,\n    \tldsh: ldsh,\n    \tle: le,\n    \tlE: lE,\n    \tLeftAngleBracket: LeftAngleBracket,\n    \tLeftArrowBar: LeftArrowBar,\n    \tleftarrow: leftarrow,\n    \tLeftArrow: LeftArrow,\n    \tLeftarrow: Leftarrow,\n    \tLeftArrowRightArrow: LeftArrowRightArrow,\n    \tleftarrowtail: leftarrowtail,\n    \tLeftCeiling: LeftCeiling,\n    \tLeftDoubleBracket: LeftDoubleBracket,\n    \tLeftDownTeeVector: LeftDownTeeVector,\n    \tLeftDownVectorBar: LeftDownVectorBar,\n    \tLeftDownVector: LeftDownVector,\n    \tLeftFloor: LeftFloor,\n    \tleftharpoondown: leftharpoondown,\n    \tleftharpoonup: leftharpoonup,\n    \tleftleftarrows: leftleftarrows,\n    \tleftrightarrow: leftrightarrow,\n    \tLeftRightArrow: LeftRightArrow,\n    \tLeftrightarrow: Leftrightarrow,\n    \tleftrightarrows: leftrightarrows,\n    \tleftrightharpoons: leftrightharpoons,\n    \tleftrightsquigarrow: leftrightsquigarrow,\n    \tLeftRightVector: LeftRightVector,\n    \tLeftTeeArrow: LeftTeeArrow,\n    \tLeftTee: LeftTee,\n    \tLeftTeeVector: LeftTeeVector,\n    \tleftthreetimes: leftthreetimes,\n    \tLeftTriangleBar: LeftTriangleBar,\n    \tLeftTriangle: LeftTriangle,\n    \tLeftTriangleEqual: LeftTriangleEqual,\n    \tLeftUpDownVector: LeftUpDownVector,\n    \tLeftUpTeeVector: LeftUpTeeVector,\n    \tLeftUpVectorBar: LeftUpVectorBar,\n    \tLeftUpVector: LeftUpVector,\n    \tLeftVectorBar: LeftVectorBar,\n    \tLeftVector: LeftVector,\n    \tlEg: lEg,\n    \tleg: leg,\n    \tleq: leq,\n    \tleqq: leqq,\n    \tleqslant: leqslant,\n    \tlescc: lescc,\n    \tles: les,\n    \tlesdot: lesdot,\n    \tlesdoto: lesdoto,\n    \tlesdotor: lesdotor,\n    \tlesg: lesg,\n    \tlesges: lesges,\n    \tlessapprox: lessapprox,\n    \tlessdot: lessdot,\n    \tlesseqgtr: lesseqgtr,\n    \tlesseqqgtr: lesseqqgtr,\n    \tLessEqualGreater: LessEqualGreater,\n    \tLessFullEqual: LessFullEqual,\n    \tLessGreater: LessGreater,\n    \tlessgtr: lessgtr,\n    \tLessLess: LessLess,\n    \tlesssim: lesssim,\n    \tLessSlantEqual: LessSlantEqual,\n    \tLessTilde: LessTilde,\n    \tlfisht: lfisht,\n    \tlfloor: lfloor,\n    \tLfr: Lfr,\n    \tlfr: lfr,\n    \tlg: lg,\n    \tlgE: lgE,\n    \tlHar: lHar,\n    \tlhard: lhard,\n    \tlharu: lharu,\n    \tlharul: lharul,\n    \tlhblk: lhblk,\n    \tLJcy: LJcy,\n    \tljcy: ljcy,\n    \tllarr: llarr,\n    \tll: ll,\n    \tLl: Ll,\n    \tllcorner: llcorner,\n    \tLleftarrow: Lleftarrow,\n    \tllhard: llhard,\n    \tlltri: lltri,\n    \tLmidot: Lmidot,\n    \tlmidot: lmidot,\n    \tlmoustache: lmoustache,\n    \tlmoust: lmoust,\n    \tlnap: lnap,\n    \tlnapprox: lnapprox,\n    \tlne: lne,\n    \tlnE: lnE,\n    \tlneq: lneq,\n    \tlneqq: lneqq,\n    \tlnsim: lnsim,\n    \tloang: loang,\n    \tloarr: loarr,\n    \tlobrk: lobrk,\n    \tlongleftarrow: longleftarrow,\n    \tLongLeftArrow: LongLeftArrow,\n    \tLongleftarrow: Longleftarrow,\n    \tlongleftrightarrow: longleftrightarrow,\n    \tLongLeftRightArrow: LongLeftRightArrow,\n    \tLongleftrightarrow: Longleftrightarrow,\n    \tlongmapsto: longmapsto,\n    \tlongrightarrow: longrightarrow,\n    \tLongRightArrow: LongRightArrow,\n    \tLongrightarrow: Longrightarrow,\n    \tlooparrowleft: looparrowleft,\n    \tlooparrowright: looparrowright,\n    \tlopar: lopar,\n    \tLopf: Lopf,\n    \tlopf: lopf,\n    \tloplus: loplus,\n    \tlotimes: lotimes,\n    \tlowast: lowast,\n    \tlowbar: lowbar,\n    \tLowerLeftArrow: LowerLeftArrow,\n    \tLowerRightArrow: LowerRightArrow,\n    \tloz: loz,\n    \tlozenge: lozenge,\n    \tlozf: lozf,\n    \tlpar: lpar,\n    \tlparlt: lparlt,\n    \tlrarr: lrarr,\n    \tlrcorner: lrcorner,\n    \tlrhar: lrhar,\n    \tlrhard: lrhard,\n    \tlrm: lrm,\n    \tlrtri: lrtri,\n    \tlsaquo: lsaquo,\n    \tlscr: lscr,\n    \tLscr: Lscr,\n    \tlsh: lsh,\n    \tLsh: Lsh,\n    \tlsim: lsim,\n    \tlsime: lsime,\n    \tlsimg: lsimg,\n    \tlsqb: lsqb,\n    \tlsquo: lsquo,\n    \tlsquor: lsquor,\n    \tLstrok: Lstrok,\n    \tlstrok: lstrok,\n    \tltcc: ltcc,\n    \tltcir: ltcir,\n    \tlt: lt,\n    \tLT: LT,\n    \tLt: Lt,\n    \tltdot: ltdot,\n    \tlthree: lthree,\n    \tltimes: ltimes,\n    \tltlarr: ltlarr,\n    \tltquest: ltquest,\n    \tltri: ltri,\n    \tltrie: ltrie,\n    \tltrif: ltrif,\n    \tltrPar: ltrPar,\n    \tlurdshar: lurdshar,\n    \tluruhar: luruhar,\n    \tlvertneqq: lvertneqq,\n    \tlvnE: lvnE,\n    \tmacr: macr,\n    \tmale: male,\n    \tmalt: malt,\n    \tmaltese: maltese,\n    \t\"Map\": \"⤅\",\n    \tmap: map,\n    \tmapsto: mapsto,\n    \tmapstodown: mapstodown,\n    \tmapstoleft: mapstoleft,\n    \tmapstoup: mapstoup,\n    \tmarker: marker,\n    \tmcomma: mcomma,\n    \tMcy: Mcy,\n    \tmcy: mcy,\n    \tmdash: mdash,\n    \tmDDot: mDDot,\n    \tmeasuredangle: measuredangle,\n    \tMediumSpace: MediumSpace,\n    \tMellintrf: Mellintrf,\n    \tMfr: Mfr,\n    \tmfr: mfr,\n    \tmho: mho,\n    \tmicro: micro,\n    \tmidast: midast,\n    \tmidcir: midcir,\n    \tmid: mid,\n    \tmiddot: middot,\n    \tminusb: minusb,\n    \tminus: minus,\n    \tminusd: minusd,\n    \tminusdu: minusdu,\n    \tMinusPlus: MinusPlus,\n    \tmlcp: mlcp,\n    \tmldr: mldr,\n    \tmnplus: mnplus,\n    \tmodels: models,\n    \tMopf: Mopf,\n    \tmopf: mopf,\n    \tmp: mp,\n    \tmscr: mscr,\n    \tMscr: Mscr,\n    \tmstpos: mstpos,\n    \tMu: Mu,\n    \tmu: mu,\n    \tmultimap: multimap,\n    \tmumap: mumap,\n    \tnabla: nabla,\n    \tNacute: Nacute,\n    \tnacute: nacute,\n    \tnang: nang,\n    \tnap: nap,\n    \tnapE: napE,\n    \tnapid: napid,\n    \tnapos: napos,\n    \tnapprox: napprox,\n    \tnatural: natural,\n    \tnaturals: naturals,\n    \tnatur: natur,\n    \tnbsp: nbsp,\n    \tnbump: nbump,\n    \tnbumpe: nbumpe,\n    \tncap: ncap,\n    \tNcaron: Ncaron,\n    \tncaron: ncaron,\n    \tNcedil: Ncedil,\n    \tncedil: ncedil,\n    \tncong: ncong,\n    \tncongdot: ncongdot,\n    \tncup: ncup,\n    \tNcy: Ncy,\n    \tncy: ncy,\n    \tndash: ndash,\n    \tnearhk: nearhk,\n    \tnearr: nearr,\n    \tneArr: neArr,\n    \tnearrow: nearrow,\n    \tne: ne,\n    \tnedot: nedot,\n    \tNegativeMediumSpace: NegativeMediumSpace,\n    \tNegativeThickSpace: NegativeThickSpace,\n    \tNegativeThinSpace: NegativeThinSpace,\n    \tNegativeVeryThinSpace: NegativeVeryThinSpace,\n    \tnequiv: nequiv,\n    \tnesear: nesear,\n    \tnesim: nesim,\n    \tNestedGreaterGreater: NestedGreaterGreater,\n    \tNestedLessLess: NestedLessLess,\n    \tNewLine: NewLine,\n    \tnexist: nexist,\n    \tnexists: nexists,\n    \tNfr: Nfr,\n    \tnfr: nfr,\n    \tngE: ngE,\n    \tnge: nge,\n    \tngeq: ngeq,\n    \tngeqq: ngeqq,\n    \tngeqslant: ngeqslant,\n    \tnges: nges,\n    \tnGg: nGg,\n    \tngsim: ngsim,\n    \tnGt: nGt,\n    \tngt: ngt,\n    \tngtr: ngtr,\n    \tnGtv: nGtv,\n    \tnharr: nharr,\n    \tnhArr: nhArr,\n    \tnhpar: nhpar,\n    \tni: ni,\n    \tnis: nis,\n    \tnisd: nisd,\n    \tniv: niv,\n    \tNJcy: NJcy,\n    \tnjcy: njcy,\n    \tnlarr: nlarr,\n    \tnlArr: nlArr,\n    \tnldr: nldr,\n    \tnlE: nlE,\n    \tnle: nle,\n    \tnleftarrow: nleftarrow,\n    \tnLeftarrow: nLeftarrow,\n    \tnleftrightarrow: nleftrightarrow,\n    \tnLeftrightarrow: nLeftrightarrow,\n    \tnleq: nleq,\n    \tnleqq: nleqq,\n    \tnleqslant: nleqslant,\n    \tnles: nles,\n    \tnless: nless,\n    \tnLl: nLl,\n    \tnlsim: nlsim,\n    \tnLt: nLt,\n    \tnlt: nlt,\n    \tnltri: nltri,\n    \tnltrie: nltrie,\n    \tnLtv: nLtv,\n    \tnmid: nmid,\n    \tNoBreak: NoBreak,\n    \tNonBreakingSpace: NonBreakingSpace,\n    \tnopf: nopf,\n    \tNopf: Nopf,\n    \tNot: Not,\n    \tnot: not,\n    \tNotCongruent: NotCongruent,\n    \tNotCupCap: NotCupCap,\n    \tNotDoubleVerticalBar: NotDoubleVerticalBar,\n    \tNotElement: NotElement,\n    \tNotEqual: NotEqual,\n    \tNotEqualTilde: NotEqualTilde,\n    \tNotExists: NotExists,\n    \tNotGreater: NotGreater,\n    \tNotGreaterEqual: NotGreaterEqual,\n    \tNotGreaterFullEqual: NotGreaterFullEqual,\n    \tNotGreaterGreater: NotGreaterGreater,\n    \tNotGreaterLess: NotGreaterLess,\n    \tNotGreaterSlantEqual: NotGreaterSlantEqual,\n    \tNotGreaterTilde: NotGreaterTilde,\n    \tNotHumpDownHump: NotHumpDownHump,\n    \tNotHumpEqual: NotHumpEqual,\n    \tnotin: notin,\n    \tnotindot: notindot,\n    \tnotinE: notinE,\n    \tnotinva: notinva,\n    \tnotinvb: notinvb,\n    \tnotinvc: notinvc,\n    \tNotLeftTriangleBar: NotLeftTriangleBar,\n    \tNotLeftTriangle: NotLeftTriangle,\n    \tNotLeftTriangleEqual: NotLeftTriangleEqual,\n    \tNotLess: NotLess,\n    \tNotLessEqual: NotLessEqual,\n    \tNotLessGreater: NotLessGreater,\n    \tNotLessLess: NotLessLess,\n    \tNotLessSlantEqual: NotLessSlantEqual,\n    \tNotLessTilde: NotLessTilde,\n    \tNotNestedGreaterGreater: NotNestedGreaterGreater,\n    \tNotNestedLessLess: NotNestedLessLess,\n    \tnotni: notni,\n    \tnotniva: notniva,\n    \tnotnivb: notnivb,\n    \tnotnivc: notnivc,\n    \tNotPrecedes: NotPrecedes,\n    \tNotPrecedesEqual: NotPrecedesEqual,\n    \tNotPrecedesSlantEqual: NotPrecedesSlantEqual,\n    \tNotReverseElement: NotReverseElement,\n    \tNotRightTriangleBar: NotRightTriangleBar,\n    \tNotRightTriangle: NotRightTriangle,\n    \tNotRightTriangleEqual: NotRightTriangleEqual,\n    \tNotSquareSubset: NotSquareSubset,\n    \tNotSquareSubsetEqual: NotSquareSubsetEqual,\n    \tNotSquareSuperset: NotSquareSuperset,\n    \tNotSquareSupersetEqual: NotSquareSupersetEqual,\n    \tNotSubset: NotSubset,\n    \tNotSubsetEqual: NotSubsetEqual,\n    \tNotSucceeds: NotSucceeds,\n    \tNotSucceedsEqual: NotSucceedsEqual,\n    \tNotSucceedsSlantEqual: NotSucceedsSlantEqual,\n    \tNotSucceedsTilde: NotSucceedsTilde,\n    \tNotSuperset: NotSuperset,\n    \tNotSupersetEqual: NotSupersetEqual,\n    \tNotTilde: NotTilde,\n    \tNotTildeEqual: NotTildeEqual,\n    \tNotTildeFullEqual: NotTildeFullEqual,\n    \tNotTildeTilde: NotTildeTilde,\n    \tNotVerticalBar: NotVerticalBar,\n    \tnparallel: nparallel,\n    \tnpar: npar,\n    \tnparsl: nparsl,\n    \tnpart: npart,\n    \tnpolint: npolint,\n    \tnpr: npr,\n    \tnprcue: nprcue,\n    \tnprec: nprec,\n    \tnpreceq: npreceq,\n    \tnpre: npre,\n    \tnrarrc: nrarrc,\n    \tnrarr: nrarr,\n    \tnrArr: nrArr,\n    \tnrarrw: nrarrw,\n    \tnrightarrow: nrightarrow,\n    \tnRightarrow: nRightarrow,\n    \tnrtri: nrtri,\n    \tnrtrie: nrtrie,\n    \tnsc: nsc,\n    \tnsccue: nsccue,\n    \tnsce: nsce,\n    \tNscr: Nscr,\n    \tnscr: nscr,\n    \tnshortmid: nshortmid,\n    \tnshortparallel: nshortparallel,\n    \tnsim: nsim,\n    \tnsime: nsime,\n    \tnsimeq: nsimeq,\n    \tnsmid: nsmid,\n    \tnspar: nspar,\n    \tnsqsube: nsqsube,\n    \tnsqsupe: nsqsupe,\n    \tnsub: nsub,\n    \tnsubE: nsubE,\n    \tnsube: nsube,\n    \tnsubset: nsubset,\n    \tnsubseteq: nsubseteq,\n    \tnsubseteqq: nsubseteqq,\n    \tnsucc: nsucc,\n    \tnsucceq: nsucceq,\n    \tnsup: nsup,\n    \tnsupE: nsupE,\n    \tnsupe: nsupe,\n    \tnsupset: nsupset,\n    \tnsupseteq: nsupseteq,\n    \tnsupseteqq: nsupseteqq,\n    \tntgl: ntgl,\n    \tNtilde: Ntilde,\n    \tntilde: ntilde,\n    \tntlg: ntlg,\n    \tntriangleleft: ntriangleleft,\n    \tntrianglelefteq: ntrianglelefteq,\n    \tntriangleright: ntriangleright,\n    \tntrianglerighteq: ntrianglerighteq,\n    \tNu: Nu,\n    \tnu: nu,\n    \tnum: num,\n    \tnumero: numero,\n    \tnumsp: numsp,\n    \tnvap: nvap,\n    \tnvdash: nvdash,\n    \tnvDash: nvDash,\n    \tnVdash: nVdash,\n    \tnVDash: nVDash,\n    \tnvge: nvge,\n    \tnvgt: nvgt,\n    \tnvHarr: nvHarr,\n    \tnvinfin: nvinfin,\n    \tnvlArr: nvlArr,\n    \tnvle: nvle,\n    \tnvlt: nvlt,\n    \tnvltrie: nvltrie,\n    \tnvrArr: nvrArr,\n    \tnvrtrie: nvrtrie,\n    \tnvsim: nvsim,\n    \tnwarhk: nwarhk,\n    \tnwarr: nwarr,\n    \tnwArr: nwArr,\n    \tnwarrow: nwarrow,\n    \tnwnear: nwnear,\n    \tOacute: Oacute,\n    \toacute: oacute,\n    \toast: oast,\n    \tOcirc: Ocirc,\n    \tocirc: ocirc,\n    \tocir: ocir,\n    \tOcy: Ocy,\n    \tocy: ocy,\n    \todash: odash,\n    \tOdblac: Odblac,\n    \todblac: odblac,\n    \todiv: odiv,\n    \todot: odot,\n    \todsold: odsold,\n    \tOElig: OElig,\n    \toelig: oelig,\n    \tofcir: ofcir,\n    \tOfr: Ofr,\n    \tofr: ofr,\n    \togon: ogon,\n    \tOgrave: Ograve,\n    \tograve: ograve,\n    \togt: ogt,\n    \tohbar: ohbar,\n    \tohm: ohm,\n    \toint: oint,\n    \tolarr: olarr,\n    \tolcir: olcir,\n    \tolcross: olcross,\n    \toline: oline,\n    \tolt: olt,\n    \tOmacr: Omacr,\n    \tomacr: omacr,\n    \tOmega: Omega,\n    \tomega: omega,\n    \tOmicron: Omicron,\n    \tomicron: omicron,\n    \tomid: omid,\n    \tominus: ominus,\n    \tOopf: Oopf,\n    \toopf: oopf,\n    \topar: opar,\n    \tOpenCurlyDoubleQuote: OpenCurlyDoubleQuote,\n    \tOpenCurlyQuote: OpenCurlyQuote,\n    \toperp: operp,\n    \toplus: oplus,\n    \torarr: orarr,\n    \tOr: Or,\n    \tor: or,\n    \tord: ord,\n    \torder: order,\n    \torderof: orderof,\n    \tordf: ordf,\n    \tordm: ordm,\n    \torigof: origof,\n    \toror: oror,\n    \torslope: orslope,\n    \torv: orv,\n    \toS: oS,\n    \tOscr: Oscr,\n    \toscr: oscr,\n    \tOslash: Oslash,\n    \toslash: oslash,\n    \tosol: osol,\n    \tOtilde: Otilde,\n    \totilde: otilde,\n    \totimesas: otimesas,\n    \tOtimes: Otimes,\n    \totimes: otimes,\n    \tOuml: Ouml,\n    \touml: ouml,\n    \tovbar: ovbar,\n    \tOverBar: OverBar,\n    \tOverBrace: OverBrace,\n    \tOverBracket: OverBracket,\n    \tOverParenthesis: OverParenthesis,\n    \tpara: para,\n    \tparallel: parallel,\n    \tpar: par,\n    \tparsim: parsim,\n    \tparsl: parsl,\n    \tpart: part,\n    \tPartialD: PartialD,\n    \tPcy: Pcy,\n    \tpcy: pcy,\n    \tpercnt: percnt,\n    \tperiod: period,\n    \tpermil: permil,\n    \tperp: perp,\n    \tpertenk: pertenk,\n    \tPfr: Pfr,\n    \tpfr: pfr,\n    \tPhi: Phi,\n    \tphi: phi,\n    \tphiv: phiv,\n    \tphmmat: phmmat,\n    \tphone: phone,\n    \tPi: Pi,\n    \tpi: pi,\n    \tpitchfork: pitchfork,\n    \tpiv: piv,\n    \tplanck: planck,\n    \tplanckh: planckh,\n    \tplankv: plankv,\n    \tplusacir: plusacir,\n    \tplusb: plusb,\n    \tpluscir: pluscir,\n    \tplus: plus,\n    \tplusdo: plusdo,\n    \tplusdu: plusdu,\n    \tpluse: pluse,\n    \tPlusMinus: PlusMinus,\n    \tplusmn: plusmn,\n    \tplussim: plussim,\n    \tplustwo: plustwo,\n    \tpm: pm,\n    \tPoincareplane: Poincareplane,\n    \tpointint: pointint,\n    \tpopf: popf,\n    \tPopf: Popf,\n    \tpound: pound,\n    \tprap: prap,\n    \tPr: Pr,\n    \tpr: pr,\n    \tprcue: prcue,\n    \tprecapprox: precapprox,\n    \tprec: prec,\n    \tpreccurlyeq: preccurlyeq,\n    \tPrecedes: Precedes,\n    \tPrecedesEqual: PrecedesEqual,\n    \tPrecedesSlantEqual: PrecedesSlantEqual,\n    \tPrecedesTilde: PrecedesTilde,\n    \tpreceq: preceq,\n    \tprecnapprox: precnapprox,\n    \tprecneqq: precneqq,\n    \tprecnsim: precnsim,\n    \tpre: pre,\n    \tprE: prE,\n    \tprecsim: precsim,\n    \tprime: prime,\n    \tPrime: Prime,\n    \tprimes: primes,\n    \tprnap: prnap,\n    \tprnE: prnE,\n    \tprnsim: prnsim,\n    \tprod: prod,\n    \tProduct: Product,\n    \tprofalar: profalar,\n    \tprofline: profline,\n    \tprofsurf: profsurf,\n    \tprop: prop,\n    \tProportional: Proportional,\n    \tProportion: Proportion,\n    \tpropto: propto,\n    \tprsim: prsim,\n    \tprurel: prurel,\n    \tPscr: Pscr,\n    \tpscr: pscr,\n    \tPsi: Psi,\n    \tpsi: psi,\n    \tpuncsp: puncsp,\n    \tQfr: Qfr,\n    \tqfr: qfr,\n    \tqint: qint,\n    \tqopf: qopf,\n    \tQopf: Qopf,\n    \tqprime: qprime,\n    \tQscr: Qscr,\n    \tqscr: qscr,\n    \tquaternions: quaternions,\n    \tquatint: quatint,\n    \tquest: quest,\n    \tquesteq: questeq,\n    \tquot: quot,\n    \tQUOT: QUOT,\n    \trAarr: rAarr,\n    \trace: race,\n    \tRacute: Racute,\n    \tracute: racute,\n    \tradic: radic,\n    \traemptyv: raemptyv,\n    \trang: rang,\n    \tRang: Rang,\n    \trangd: rangd,\n    \trange: range,\n    \trangle: rangle,\n    \traquo: raquo,\n    \trarrap: rarrap,\n    \trarrb: rarrb,\n    \trarrbfs: rarrbfs,\n    \trarrc: rarrc,\n    \trarr: rarr,\n    \tRarr: Rarr,\n    \trArr: rArr,\n    \trarrfs: rarrfs,\n    \trarrhk: rarrhk,\n    \trarrlp: rarrlp,\n    \trarrpl: rarrpl,\n    \trarrsim: rarrsim,\n    \tRarrtl: Rarrtl,\n    \trarrtl: rarrtl,\n    \trarrw: rarrw,\n    \tratail: ratail,\n    \trAtail: rAtail,\n    \tratio: ratio,\n    \trationals: rationals,\n    \trbarr: rbarr,\n    \trBarr: rBarr,\n    \tRBarr: RBarr,\n    \trbbrk: rbbrk,\n    \trbrace: rbrace,\n    \trbrack: rbrack,\n    \trbrke: rbrke,\n    \trbrksld: rbrksld,\n    \trbrkslu: rbrkslu,\n    \tRcaron: Rcaron,\n    \trcaron: rcaron,\n    \tRcedil: Rcedil,\n    \trcedil: rcedil,\n    \trceil: rceil,\n    \trcub: rcub,\n    \tRcy: Rcy,\n    \trcy: rcy,\n    \trdca: rdca,\n    \trdldhar: rdldhar,\n    \trdquo: rdquo,\n    \trdquor: rdquor,\n    \trdsh: rdsh,\n    \treal: real,\n    \trealine: realine,\n    \trealpart: realpart,\n    \treals: reals,\n    \tRe: Re,\n    \trect: rect,\n    \treg: reg,\n    \tREG: REG,\n    \tReverseElement: ReverseElement,\n    \tReverseEquilibrium: ReverseEquilibrium,\n    \tReverseUpEquilibrium: ReverseUpEquilibrium,\n    \trfisht: rfisht,\n    \trfloor: rfloor,\n    \trfr: rfr,\n    \tRfr: Rfr,\n    \trHar: rHar,\n    \trhard: rhard,\n    \trharu: rharu,\n    \trharul: rharul,\n    \tRho: Rho,\n    \trho: rho,\n    \trhov: rhov,\n    \tRightAngleBracket: RightAngleBracket,\n    \tRightArrowBar: RightArrowBar,\n    \trightarrow: rightarrow,\n    \tRightArrow: RightArrow,\n    \tRightarrow: Rightarrow,\n    \tRightArrowLeftArrow: RightArrowLeftArrow,\n    \trightarrowtail: rightarrowtail,\n    \tRightCeiling: RightCeiling,\n    \tRightDoubleBracket: RightDoubleBracket,\n    \tRightDownTeeVector: RightDownTeeVector,\n    \tRightDownVectorBar: RightDownVectorBar,\n    \tRightDownVector: RightDownVector,\n    \tRightFloor: RightFloor,\n    \trightharpoondown: rightharpoondown,\n    \trightharpoonup: rightharpoonup,\n    \trightleftarrows: rightleftarrows,\n    \trightleftharpoons: rightleftharpoons,\n    \trightrightarrows: rightrightarrows,\n    \trightsquigarrow: rightsquigarrow,\n    \tRightTeeArrow: RightTeeArrow,\n    \tRightTee: RightTee,\n    \tRightTeeVector: RightTeeVector,\n    \trightthreetimes: rightthreetimes,\n    \tRightTriangleBar: RightTriangleBar,\n    \tRightTriangle: RightTriangle,\n    \tRightTriangleEqual: RightTriangleEqual,\n    \tRightUpDownVector: RightUpDownVector,\n    \tRightUpTeeVector: RightUpTeeVector,\n    \tRightUpVectorBar: RightUpVectorBar,\n    \tRightUpVector: RightUpVector,\n    \tRightVectorBar: RightVectorBar,\n    \tRightVector: RightVector,\n    \tring: ring,\n    \trisingdotseq: risingdotseq,\n    \trlarr: rlarr,\n    \trlhar: rlhar,\n    \trlm: rlm,\n    \trmoustache: rmoustache,\n    \trmoust: rmoust,\n    \trnmid: rnmid,\n    \troang: roang,\n    \troarr: roarr,\n    \trobrk: robrk,\n    \tropar: ropar,\n    \tropf: ropf,\n    \tRopf: Ropf,\n    \troplus: roplus,\n    \trotimes: rotimes,\n    \tRoundImplies: RoundImplies,\n    \trpar: rpar,\n    \trpargt: rpargt,\n    \trppolint: rppolint,\n    \trrarr: rrarr,\n    \tRrightarrow: Rrightarrow,\n    \trsaquo: rsaquo,\n    \trscr: rscr,\n    \tRscr: Rscr,\n    \trsh: rsh,\n    \tRsh: Rsh,\n    \trsqb: rsqb,\n    \trsquo: rsquo,\n    \trsquor: rsquor,\n    \trthree: rthree,\n    \trtimes: rtimes,\n    \trtri: rtri,\n    \trtrie: rtrie,\n    \trtrif: rtrif,\n    \trtriltri: rtriltri,\n    \tRuleDelayed: RuleDelayed,\n    \truluhar: ruluhar,\n    \trx: rx,\n    \tSacute: Sacute,\n    \tsacute: sacute,\n    \tsbquo: sbquo,\n    \tscap: scap,\n    \tScaron: Scaron,\n    \tscaron: scaron,\n    \tSc: Sc,\n    \tsc: sc,\n    \tsccue: sccue,\n    \tsce: sce,\n    \tscE: scE,\n    \tScedil: Scedil,\n    \tscedil: scedil,\n    \tScirc: Scirc,\n    \tscirc: scirc,\n    \tscnap: scnap,\n    \tscnE: scnE,\n    \tscnsim: scnsim,\n    \tscpolint: scpolint,\n    \tscsim: scsim,\n    \tScy: Scy,\n    \tscy: scy,\n    \tsdotb: sdotb,\n    \tsdot: sdot,\n    \tsdote: sdote,\n    \tsearhk: searhk,\n    \tsearr: searr,\n    \tseArr: seArr,\n    \tsearrow: searrow,\n    \tsect: sect,\n    \tsemi: semi,\n    \tseswar: seswar,\n    \tsetminus: setminus,\n    \tsetmn: setmn,\n    \tsext: sext,\n    \tSfr: Sfr,\n    \tsfr: sfr,\n    \tsfrown: sfrown,\n    \tsharp: sharp,\n    \tSHCHcy: SHCHcy,\n    \tshchcy: shchcy,\n    \tSHcy: SHcy,\n    \tshcy: shcy,\n    \tShortDownArrow: ShortDownArrow,\n    \tShortLeftArrow: ShortLeftArrow,\n    \tshortmid: shortmid,\n    \tshortparallel: shortparallel,\n    \tShortRightArrow: ShortRightArrow,\n    \tShortUpArrow: ShortUpArrow,\n    \tshy: shy,\n    \tSigma: Sigma,\n    \tsigma: sigma,\n    \tsigmaf: sigmaf,\n    \tsigmav: sigmav,\n    \tsim: sim,\n    \tsimdot: simdot,\n    \tsime: sime,\n    \tsimeq: simeq,\n    \tsimg: simg,\n    \tsimgE: simgE,\n    \tsiml: siml,\n    \tsimlE: simlE,\n    \tsimne: simne,\n    \tsimplus: simplus,\n    \tsimrarr: simrarr,\n    \tslarr: slarr,\n    \tSmallCircle: SmallCircle,\n    \tsmallsetminus: smallsetminus,\n    \tsmashp: smashp,\n    \tsmeparsl: smeparsl,\n    \tsmid: smid,\n    \tsmile: smile,\n    \tsmt: smt,\n    \tsmte: smte,\n    \tsmtes: smtes,\n    \tSOFTcy: SOFTcy,\n    \tsoftcy: softcy,\n    \tsolbar: solbar,\n    \tsolb: solb,\n    \tsol: sol,\n    \tSopf: Sopf,\n    \tsopf: sopf,\n    \tspades: spades,\n    \tspadesuit: spadesuit,\n    \tspar: spar,\n    \tsqcap: sqcap,\n    \tsqcaps: sqcaps,\n    \tsqcup: sqcup,\n    \tsqcups: sqcups,\n    \tSqrt: Sqrt,\n    \tsqsub: sqsub,\n    \tsqsube: sqsube,\n    \tsqsubset: sqsubset,\n    \tsqsubseteq: sqsubseteq,\n    \tsqsup: sqsup,\n    \tsqsupe: sqsupe,\n    \tsqsupset: sqsupset,\n    \tsqsupseteq: sqsupseteq,\n    \tsquare: square,\n    \tSquare: Square,\n    \tSquareIntersection: SquareIntersection,\n    \tSquareSubset: SquareSubset,\n    \tSquareSubsetEqual: SquareSubsetEqual,\n    \tSquareSuperset: SquareSuperset,\n    \tSquareSupersetEqual: SquareSupersetEqual,\n    \tSquareUnion: SquareUnion,\n    \tsquarf: squarf,\n    \tsqu: squ,\n    \tsquf: squf,\n    \tsrarr: srarr,\n    \tSscr: Sscr,\n    \tsscr: sscr,\n    \tssetmn: ssetmn,\n    \tssmile: ssmile,\n    \tsstarf: sstarf,\n    \tStar: Star,\n    \tstar: star,\n    \tstarf: starf,\n    \tstraightepsilon: straightepsilon,\n    \tstraightphi: straightphi,\n    \tstrns: strns,\n    \tsub: sub,\n    \tSub: Sub,\n    \tsubdot: subdot,\n    \tsubE: subE,\n    \tsube: sube,\n    \tsubedot: subedot,\n    \tsubmult: submult,\n    \tsubnE: subnE,\n    \tsubne: subne,\n    \tsubplus: subplus,\n    \tsubrarr: subrarr,\n    \tsubset: subset,\n    \tSubset: Subset,\n    \tsubseteq: subseteq,\n    \tsubseteqq: subseteqq,\n    \tSubsetEqual: SubsetEqual,\n    \tsubsetneq: subsetneq,\n    \tsubsetneqq: subsetneqq,\n    \tsubsim: subsim,\n    \tsubsub: subsub,\n    \tsubsup: subsup,\n    \tsuccapprox: succapprox,\n    \tsucc: succ,\n    \tsucccurlyeq: succcurlyeq,\n    \tSucceeds: Succeeds,\n    \tSucceedsEqual: SucceedsEqual,\n    \tSucceedsSlantEqual: SucceedsSlantEqual,\n    \tSucceedsTilde: SucceedsTilde,\n    \tsucceq: succeq,\n    \tsuccnapprox: succnapprox,\n    \tsuccneqq: succneqq,\n    \tsuccnsim: succnsim,\n    \tsuccsim: succsim,\n    \tSuchThat: SuchThat,\n    \tsum: sum,\n    \tSum: Sum,\n    \tsung: sung,\n    \tsup1: sup1,\n    \tsup2: sup2,\n    \tsup3: sup3,\n    \tsup: sup,\n    \tSup: Sup,\n    \tsupdot: supdot,\n    \tsupdsub: supdsub,\n    \tsupE: supE,\n    \tsupe: supe,\n    \tsupedot: supedot,\n    \tSuperset: Superset,\n    \tSupersetEqual: SupersetEqual,\n    \tsuphsol: suphsol,\n    \tsuphsub: suphsub,\n    \tsuplarr: suplarr,\n    \tsupmult: supmult,\n    \tsupnE: supnE,\n    \tsupne: supne,\n    \tsupplus: supplus,\n    \tsupset: supset,\n    \tSupset: Supset,\n    \tsupseteq: supseteq,\n    \tsupseteqq: supseteqq,\n    \tsupsetneq: supsetneq,\n    \tsupsetneqq: supsetneqq,\n    \tsupsim: supsim,\n    \tsupsub: supsub,\n    \tsupsup: supsup,\n    \tswarhk: swarhk,\n    \tswarr: swarr,\n    \tswArr: swArr,\n    \tswarrow: swarrow,\n    \tswnwar: swnwar,\n    \tszlig: szlig,\n    \tTab: Tab,\n    \ttarget: target,\n    \tTau: Tau,\n    \ttau: tau,\n    \ttbrk: tbrk,\n    \tTcaron: Tcaron,\n    \ttcaron: tcaron,\n    \tTcedil: Tcedil,\n    \ttcedil: tcedil,\n    \tTcy: Tcy,\n    \ttcy: tcy,\n    \ttdot: tdot,\n    \ttelrec: telrec,\n    \tTfr: Tfr,\n    \ttfr: tfr,\n    \tthere4: there4,\n    \ttherefore: therefore,\n    \tTherefore: Therefore,\n    \tTheta: Theta,\n    \ttheta: theta,\n    \tthetasym: thetasym,\n    \tthetav: thetav,\n    \tthickapprox: thickapprox,\n    \tthicksim: thicksim,\n    \tThickSpace: ThickSpace,\n    \tThinSpace: ThinSpace,\n    \tthinsp: thinsp,\n    \tthkap: thkap,\n    \tthksim: thksim,\n    \tTHORN: THORN,\n    \tthorn: thorn,\n    \ttilde: tilde,\n    \tTilde: Tilde,\n    \tTildeEqual: TildeEqual,\n    \tTildeFullEqual: TildeFullEqual,\n    \tTildeTilde: TildeTilde,\n    \ttimesbar: timesbar,\n    \ttimesb: timesb,\n    \ttimes: times,\n    \ttimesd: timesd,\n    \ttint: tint,\n    \ttoea: toea,\n    \ttopbot: topbot,\n    \ttopcir: topcir,\n    \ttop: top,\n    \tTopf: Topf,\n    \ttopf: topf,\n    \ttopfork: topfork,\n    \ttosa: tosa,\n    \ttprime: tprime,\n    \ttrade: trade,\n    \tTRADE: TRADE,\n    \ttriangle: triangle,\n    \ttriangledown: triangledown,\n    \ttriangleleft: triangleleft,\n    \ttrianglelefteq: trianglelefteq,\n    \ttriangleq: triangleq,\n    \ttriangleright: triangleright,\n    \ttrianglerighteq: trianglerighteq,\n    \ttridot: tridot,\n    \ttrie: trie,\n    \ttriminus: triminus,\n    \tTripleDot: TripleDot,\n    \ttriplus: triplus,\n    \ttrisb: trisb,\n    \ttritime: tritime,\n    \ttrpezium: trpezium,\n    \tTscr: Tscr,\n    \ttscr: tscr,\n    \tTScy: TScy,\n    \ttscy: tscy,\n    \tTSHcy: TSHcy,\n    \ttshcy: tshcy,\n    \tTstrok: Tstrok,\n    \ttstrok: tstrok,\n    \ttwixt: twixt,\n    \ttwoheadleftarrow: twoheadleftarrow,\n    \ttwoheadrightarrow: twoheadrightarrow,\n    \tUacute: Uacute,\n    \tuacute: uacute,\n    \tuarr: uarr,\n    \tUarr: Uarr,\n    \tuArr: uArr,\n    \tUarrocir: Uarrocir,\n    \tUbrcy: Ubrcy,\n    \tubrcy: ubrcy,\n    \tUbreve: Ubreve,\n    \tubreve: ubreve,\n    \tUcirc: Ucirc,\n    \tucirc: ucirc,\n    \tUcy: Ucy,\n    \tucy: ucy,\n    \tudarr: udarr,\n    \tUdblac: Udblac,\n    \tudblac: udblac,\n    \tudhar: udhar,\n    \tufisht: ufisht,\n    \tUfr: Ufr,\n    \tufr: ufr,\n    \tUgrave: Ugrave,\n    \tugrave: ugrave,\n    \tuHar: uHar,\n    \tuharl: uharl,\n    \tuharr: uharr,\n    \tuhblk: uhblk,\n    \tulcorn: ulcorn,\n    \tulcorner: ulcorner,\n    \tulcrop: ulcrop,\n    \tultri: ultri,\n    \tUmacr: Umacr,\n    \tumacr: umacr,\n    \tuml: uml,\n    \tUnderBar: UnderBar,\n    \tUnderBrace: UnderBrace,\n    \tUnderBracket: UnderBracket,\n    \tUnderParenthesis: UnderParenthesis,\n    \tUnion: Union,\n    \tUnionPlus: UnionPlus,\n    \tUogon: Uogon,\n    \tuogon: uogon,\n    \tUopf: Uopf,\n    \tuopf: uopf,\n    \tUpArrowBar: UpArrowBar,\n    \tuparrow: uparrow,\n    \tUpArrow: UpArrow,\n    \tUparrow: Uparrow,\n    \tUpArrowDownArrow: UpArrowDownArrow,\n    \tupdownarrow: updownarrow,\n    \tUpDownArrow: UpDownArrow,\n    \tUpdownarrow: Updownarrow,\n    \tUpEquilibrium: UpEquilibrium,\n    \tupharpoonleft: upharpoonleft,\n    \tupharpoonright: upharpoonright,\n    \tuplus: uplus,\n    \tUpperLeftArrow: UpperLeftArrow,\n    \tUpperRightArrow: UpperRightArrow,\n    \tupsi: upsi,\n    \tUpsi: Upsi,\n    \tupsih: upsih,\n    \tUpsilon: Upsilon,\n    \tupsilon: upsilon,\n    \tUpTeeArrow: UpTeeArrow,\n    \tUpTee: UpTee,\n    \tupuparrows: upuparrows,\n    \turcorn: urcorn,\n    \turcorner: urcorner,\n    \turcrop: urcrop,\n    \tUring: Uring,\n    \turing: uring,\n    \turtri: urtri,\n    \tUscr: Uscr,\n    \tuscr: uscr,\n    \tutdot: utdot,\n    \tUtilde: Utilde,\n    \tutilde: utilde,\n    \tutri: utri,\n    \tutrif: utrif,\n    \tuuarr: uuarr,\n    \tUuml: Uuml,\n    \tuuml: uuml,\n    \tuwangle: uwangle,\n    \tvangrt: vangrt,\n    \tvarepsilon: varepsilon,\n    \tvarkappa: varkappa,\n    \tvarnothing: varnothing,\n    \tvarphi: varphi,\n    \tvarpi: varpi,\n    \tvarpropto: varpropto,\n    \tvarr: varr,\n    \tvArr: vArr,\n    \tvarrho: varrho,\n    \tvarsigma: varsigma,\n    \tvarsubsetneq: varsubsetneq,\n    \tvarsubsetneqq: varsubsetneqq,\n    \tvarsupsetneq: varsupsetneq,\n    \tvarsupsetneqq: varsupsetneqq,\n    \tvartheta: vartheta,\n    \tvartriangleleft: vartriangleleft,\n    \tvartriangleright: vartriangleright,\n    \tvBar: vBar,\n    \tVbar: Vbar,\n    \tvBarv: vBarv,\n    \tVcy: Vcy,\n    \tvcy: vcy,\n    \tvdash: vdash,\n    \tvDash: vDash,\n    \tVdash: Vdash,\n    \tVDash: VDash,\n    \tVdashl: Vdashl,\n    \tveebar: veebar,\n    \tvee: vee,\n    \tVee: Vee,\n    \tveeeq: veeeq,\n    \tvellip: vellip,\n    \tverbar: verbar,\n    \tVerbar: Verbar,\n    \tvert: vert,\n    \tVert: Vert,\n    \tVerticalBar: VerticalBar,\n    \tVerticalLine: VerticalLine,\n    \tVerticalSeparator: VerticalSeparator,\n    \tVerticalTilde: VerticalTilde,\n    \tVeryThinSpace: VeryThinSpace,\n    \tVfr: Vfr,\n    \tvfr: vfr,\n    \tvltri: vltri,\n    \tvnsub: vnsub,\n    \tvnsup: vnsup,\n    \tVopf: Vopf,\n    \tvopf: vopf,\n    \tvprop: vprop,\n    \tvrtri: vrtri,\n    \tVscr: Vscr,\n    \tvscr: vscr,\n    \tvsubnE: vsubnE,\n    \tvsubne: vsubne,\n    \tvsupnE: vsupnE,\n    \tvsupne: vsupne,\n    \tVvdash: Vvdash,\n    \tvzigzag: vzigzag,\n    \tWcirc: Wcirc,\n    \twcirc: wcirc,\n    \twedbar: wedbar,\n    \twedge: wedge,\n    \tWedge: Wedge,\n    \twedgeq: wedgeq,\n    \tweierp: weierp,\n    \tWfr: Wfr,\n    \twfr: wfr,\n    \tWopf: Wopf,\n    \twopf: wopf,\n    \twp: wp,\n    \twr: wr,\n    \twreath: wreath,\n    \tWscr: Wscr,\n    \twscr: wscr,\n    \txcap: xcap,\n    \txcirc: xcirc,\n    \txcup: xcup,\n    \txdtri: xdtri,\n    \tXfr: Xfr,\n    \txfr: xfr,\n    \txharr: xharr,\n    \txhArr: xhArr,\n    \tXi: Xi,\n    \txi: xi,\n    \txlarr: xlarr,\n    \txlArr: xlArr,\n    \txmap: xmap,\n    \txnis: xnis,\n    \txodot: xodot,\n    \tXopf: Xopf,\n    \txopf: xopf,\n    \txoplus: xoplus,\n    \txotime: xotime,\n    \txrarr: xrarr,\n    \txrArr: xrArr,\n    \tXscr: Xscr,\n    \txscr: xscr,\n    \txsqcup: xsqcup,\n    \txuplus: xuplus,\n    \txutri: xutri,\n    \txvee: xvee,\n    \txwedge: xwedge,\n    \tYacute: Yacute,\n    \tyacute: yacute,\n    \tYAcy: YAcy,\n    \tyacy: yacy,\n    \tYcirc: Ycirc,\n    \tycirc: ycirc,\n    \tYcy: Ycy,\n    \tycy: ycy,\n    \tyen: yen,\n    \tYfr: Yfr,\n    \tyfr: yfr,\n    \tYIcy: YIcy,\n    \tyicy: yicy,\n    \tYopf: Yopf,\n    \tyopf: yopf,\n    \tYscr: Yscr,\n    \tyscr: yscr,\n    \tYUcy: YUcy,\n    \tyucy: yucy,\n    \tyuml: yuml,\n    \tYuml: Yuml,\n    \tZacute: Zacute,\n    \tzacute: zacute,\n    \tZcaron: Zcaron,\n    \tzcaron: zcaron,\n    \tZcy: Zcy,\n    \tzcy: zcy,\n    \tZdot: Zdot,\n    \tzdot: zdot,\n    \tzeetrf: zeetrf,\n    \tZeroWidthSpace: ZeroWidthSpace,\n    \tZeta: Zeta,\n    \tzeta: zeta,\n    \tzfr: zfr,\n    \tZfr: Zfr,\n    \tZHcy: ZHcy,\n    \tzhcy: zhcy,\n    \tzigrarr: zigrarr,\n    \tzopf: zopf,\n    \tZopf: Zopf,\n    \tZscr: Zscr,\n    \tzscr: zscr,\n    \tzwj: zwj,\n    \tzwnj: zwnj\n    };\n\n    var entities$1 = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        Aacute: Aacute,\n        aacute: aacute,\n        Abreve: Abreve,\n        abreve: abreve,\n        ac: ac,\n        acd: acd,\n        acE: acE,\n        Acirc: Acirc,\n        acirc: acirc,\n        acute: acute,\n        Acy: Acy,\n        acy: acy,\n        AElig: AElig,\n        aelig: aelig,\n        af: af,\n        Afr: Afr,\n        afr: afr,\n        Agrave: Agrave,\n        agrave: agrave,\n        alefsym: alefsym,\n        aleph: aleph,\n        Alpha: Alpha,\n        alpha: alpha,\n        Amacr: Amacr,\n        amacr: amacr,\n        amalg: amalg,\n        amp: amp,\n        AMP: AMP,\n        andand: andand,\n        And: And,\n        and: and,\n        andd: andd,\n        andslope: andslope,\n        andv: andv,\n        ang: ang,\n        ange: ange,\n        angle: angle,\n        angmsdaa: angmsdaa,\n        angmsdab: angmsdab,\n        angmsdac: angmsdac,\n        angmsdad: angmsdad,\n        angmsdae: angmsdae,\n        angmsdaf: angmsdaf,\n        angmsdag: angmsdag,\n        angmsdah: angmsdah,\n        angmsd: angmsd,\n        angrt: angrt,\n        angrtvb: angrtvb,\n        angrtvbd: angrtvbd,\n        angsph: angsph,\n        angst: angst,\n        angzarr: angzarr,\n        Aogon: Aogon,\n        aogon: aogon,\n        Aopf: Aopf,\n        aopf: aopf,\n        apacir: apacir,\n        ap: ap,\n        apE: apE,\n        ape: ape,\n        apid: apid,\n        apos: apos,\n        ApplyFunction: ApplyFunction,\n        approx: approx,\n        approxeq: approxeq,\n        Aring: Aring,\n        aring: aring,\n        Ascr: Ascr,\n        ascr: ascr,\n        Assign: Assign,\n        ast: ast,\n        asymp: asymp,\n        asympeq: asympeq,\n        Atilde: Atilde,\n        atilde: atilde,\n        Auml: Auml,\n        auml: auml,\n        awconint: awconint,\n        awint: awint,\n        backcong: backcong,\n        backepsilon: backepsilon,\n        backprime: backprime,\n        backsim: backsim,\n        backsimeq: backsimeq,\n        Backslash: Backslash,\n        Barv: Barv,\n        barvee: barvee,\n        barwed: barwed,\n        Barwed: Barwed,\n        barwedge: barwedge,\n        bbrk: bbrk,\n        bbrktbrk: bbrktbrk,\n        bcong: bcong,\n        Bcy: Bcy,\n        bcy: bcy,\n        bdquo: bdquo,\n        becaus: becaus,\n        because: because,\n        Because: Because,\n        bemptyv: bemptyv,\n        bepsi: bepsi,\n        bernou: bernou,\n        Bernoullis: Bernoullis,\n        Beta: Beta,\n        beta: beta,\n        beth: beth,\n        between: between,\n        Bfr: Bfr,\n        bfr: bfr,\n        bigcap: bigcap,\n        bigcirc: bigcirc,\n        bigcup: bigcup,\n        bigodot: bigodot,\n        bigoplus: bigoplus,\n        bigotimes: bigotimes,\n        bigsqcup: bigsqcup,\n        bigstar: bigstar,\n        bigtriangledown: bigtriangledown,\n        bigtriangleup: bigtriangleup,\n        biguplus: biguplus,\n        bigvee: bigvee,\n        bigwedge: bigwedge,\n        bkarow: bkarow,\n        blacklozenge: blacklozenge,\n        blacksquare: blacksquare,\n        blacktriangle: blacktriangle,\n        blacktriangledown: blacktriangledown,\n        blacktriangleleft: blacktriangleleft,\n        blacktriangleright: blacktriangleright,\n        blank: blank,\n        blk12: blk12,\n        blk14: blk14,\n        blk34: blk34,\n        block: block,\n        bne: bne,\n        bnequiv: bnequiv,\n        bNot: bNot,\n        bnot: bnot,\n        Bopf: Bopf,\n        bopf: bopf,\n        bot: bot,\n        bottom: bottom,\n        bowtie: bowtie,\n        boxbox: boxbox,\n        boxdl: boxdl,\n        boxdL: boxdL,\n        boxDl: boxDl,\n        boxDL: boxDL,\n        boxdr: boxdr,\n        boxdR: boxdR,\n        boxDr: boxDr,\n        boxDR: boxDR,\n        boxh: boxh,\n        boxH: boxH,\n        boxhd: boxhd,\n        boxHd: boxHd,\n        boxhD: boxhD,\n        boxHD: boxHD,\n        boxhu: boxhu,\n        boxHu: boxHu,\n        boxhU: boxhU,\n        boxHU: boxHU,\n        boxminus: boxminus,\n        boxplus: boxplus,\n        boxtimes: boxtimes,\n        boxul: boxul,\n        boxuL: boxuL,\n        boxUl: boxUl,\n        boxUL: boxUL,\n        boxur: boxur,\n        boxuR: boxuR,\n        boxUr: boxUr,\n        boxUR: boxUR,\n        boxv: boxv,\n        boxV: boxV,\n        boxvh: boxvh,\n        boxvH: boxvH,\n        boxVh: boxVh,\n        boxVH: boxVH,\n        boxvl: boxvl,\n        boxvL: boxvL,\n        boxVl: boxVl,\n        boxVL: boxVL,\n        boxvr: boxvr,\n        boxvR: boxvR,\n        boxVr: boxVr,\n        boxVR: boxVR,\n        bprime: bprime,\n        breve: breve,\n        Breve: Breve,\n        brvbar: brvbar,\n        bscr: bscr,\n        Bscr: Bscr,\n        bsemi: bsemi,\n        bsim: bsim,\n        bsime: bsime,\n        bsolb: bsolb,\n        bsol: bsol,\n        bsolhsub: bsolhsub,\n        bull: bull,\n        bullet: bullet,\n        bump: bump,\n        bumpE: bumpE,\n        bumpe: bumpe,\n        Bumpeq: Bumpeq,\n        bumpeq: bumpeq,\n        Cacute: Cacute,\n        cacute: cacute,\n        capand: capand,\n        capbrcup: capbrcup,\n        capcap: capcap,\n        cap: cap,\n        Cap: Cap,\n        capcup: capcup,\n        capdot: capdot,\n        CapitalDifferentialD: CapitalDifferentialD,\n        caps: caps,\n        caret: caret,\n        caron: caron,\n        Cayleys: Cayleys,\n        ccaps: ccaps,\n        Ccaron: Ccaron,\n        ccaron: ccaron,\n        Ccedil: Ccedil,\n        ccedil: ccedil,\n        Ccirc: Ccirc,\n        ccirc: ccirc,\n        Cconint: Cconint,\n        ccups: ccups,\n        ccupssm: ccupssm,\n        Cdot: Cdot,\n        cdot: cdot,\n        cedil: cedil,\n        Cedilla: Cedilla,\n        cemptyv: cemptyv,\n        cent: cent,\n        centerdot: centerdot,\n        CenterDot: CenterDot,\n        cfr: cfr,\n        Cfr: Cfr,\n        CHcy: CHcy,\n        chcy: chcy,\n        check: check,\n        checkmark: checkmark,\n        Chi: Chi,\n        chi: chi,\n        circ: circ,\n        circeq: circeq,\n        circlearrowleft: circlearrowleft,\n        circlearrowright: circlearrowright,\n        circledast: circledast,\n        circledcirc: circledcirc,\n        circleddash: circleddash,\n        CircleDot: CircleDot,\n        circledR: circledR,\n        circledS: circledS,\n        CircleMinus: CircleMinus,\n        CirclePlus: CirclePlus,\n        CircleTimes: CircleTimes,\n        cir: cir,\n        cirE: cirE,\n        cire: cire,\n        cirfnint: cirfnint,\n        cirmid: cirmid,\n        cirscir: cirscir,\n        ClockwiseContourIntegral: ClockwiseContourIntegral,\n        CloseCurlyDoubleQuote: CloseCurlyDoubleQuote,\n        CloseCurlyQuote: CloseCurlyQuote,\n        clubs: clubs,\n        clubsuit: clubsuit,\n        colon: colon,\n        Colon: Colon,\n        Colone: Colone,\n        colone: colone,\n        coloneq: coloneq,\n        comma: comma,\n        commat: commat,\n        comp: comp,\n        compfn: compfn,\n        complement: complement,\n        complexes: complexes,\n        cong: cong,\n        congdot: congdot,\n        Congruent: Congruent,\n        conint: conint,\n        Conint: Conint,\n        ContourIntegral: ContourIntegral,\n        copf: copf,\n        Copf: Copf,\n        coprod: coprod,\n        Coproduct: Coproduct,\n        copy: copy,\n        COPY: COPY,\n        copysr: copysr,\n        CounterClockwiseContourIntegral: CounterClockwiseContourIntegral,\n        crarr: crarr,\n        cross: cross,\n        Cross: Cross,\n        Cscr: Cscr,\n        cscr: cscr,\n        csub: csub,\n        csube: csube,\n        csup: csup,\n        csupe: csupe,\n        ctdot: ctdot,\n        cudarrl: cudarrl,\n        cudarrr: cudarrr,\n        cuepr: cuepr,\n        cuesc: cuesc,\n        cularr: cularr,\n        cularrp: cularrp,\n        cupbrcap: cupbrcap,\n        cupcap: cupcap,\n        CupCap: CupCap,\n        cup: cup,\n        Cup: Cup,\n        cupcup: cupcup,\n        cupdot: cupdot,\n        cupor: cupor,\n        cups: cups,\n        curarr: curarr,\n        curarrm: curarrm,\n        curlyeqprec: curlyeqprec,\n        curlyeqsucc: curlyeqsucc,\n        curlyvee: curlyvee,\n        curlywedge: curlywedge,\n        curren: curren,\n        curvearrowleft: curvearrowleft,\n        curvearrowright: curvearrowright,\n        cuvee: cuvee,\n        cuwed: cuwed,\n        cwconint: cwconint,\n        cwint: cwint,\n        cylcty: cylcty,\n        dagger: dagger,\n        Dagger: Dagger,\n        daleth: daleth,\n        darr: darr,\n        Darr: Darr,\n        dArr: dArr,\n        dash: dash,\n        Dashv: Dashv,\n        dashv: dashv,\n        dbkarow: dbkarow,\n        dblac: dblac,\n        Dcaron: Dcaron,\n        dcaron: dcaron,\n        Dcy: Dcy,\n        dcy: dcy,\n        ddagger: ddagger,\n        ddarr: ddarr,\n        DD: DD,\n        dd: dd,\n        DDotrahd: DDotrahd,\n        ddotseq: ddotseq,\n        deg: deg,\n        Del: Del,\n        Delta: Delta,\n        delta: delta,\n        demptyv: demptyv,\n        dfisht: dfisht,\n        Dfr: Dfr,\n        dfr: dfr,\n        dHar: dHar,\n        dharl: dharl,\n        dharr: dharr,\n        DiacriticalAcute: DiacriticalAcute,\n        DiacriticalDot: DiacriticalDot,\n        DiacriticalDoubleAcute: DiacriticalDoubleAcute,\n        DiacriticalGrave: DiacriticalGrave,\n        DiacriticalTilde: DiacriticalTilde,\n        diam: diam,\n        diamond: diamond,\n        Diamond: Diamond,\n        diamondsuit: diamondsuit,\n        diams: diams,\n        die: die,\n        DifferentialD: DifferentialD,\n        digamma: digamma,\n        disin: disin,\n        div: div,\n        divide: divide,\n        divideontimes: divideontimes,\n        divonx: divonx,\n        DJcy: DJcy,\n        djcy: djcy,\n        dlcorn: dlcorn,\n        dlcrop: dlcrop,\n        dollar: dollar,\n        Dopf: Dopf,\n        dopf: dopf,\n        Dot: Dot,\n        dot: dot,\n        DotDot: DotDot,\n        doteq: doteq,\n        doteqdot: doteqdot,\n        DotEqual: DotEqual,\n        dotminus: dotminus,\n        dotplus: dotplus,\n        dotsquare: dotsquare,\n        doublebarwedge: doublebarwedge,\n        DoubleContourIntegral: DoubleContourIntegral,\n        DoubleDot: DoubleDot,\n        DoubleDownArrow: DoubleDownArrow,\n        DoubleLeftArrow: DoubleLeftArrow,\n        DoubleLeftRightArrow: DoubleLeftRightArrow,\n        DoubleLeftTee: DoubleLeftTee,\n        DoubleLongLeftArrow: DoubleLongLeftArrow,\n        DoubleLongLeftRightArrow: DoubleLongLeftRightArrow,\n        DoubleLongRightArrow: DoubleLongRightArrow,\n        DoubleRightArrow: DoubleRightArrow,\n        DoubleRightTee: DoubleRightTee,\n        DoubleUpArrow: DoubleUpArrow,\n        DoubleUpDownArrow: DoubleUpDownArrow,\n        DoubleVerticalBar: DoubleVerticalBar,\n        DownArrowBar: DownArrowBar,\n        downarrow: downarrow,\n        DownArrow: DownArrow,\n        Downarrow: Downarrow,\n        DownArrowUpArrow: DownArrowUpArrow,\n        DownBreve: DownBreve,\n        downdownarrows: downdownarrows,\n        downharpoonleft: downharpoonleft,\n        downharpoonright: downharpoonright,\n        DownLeftRightVector: DownLeftRightVector,\n        DownLeftTeeVector: DownLeftTeeVector,\n        DownLeftVectorBar: DownLeftVectorBar,\n        DownLeftVector: DownLeftVector,\n        DownRightTeeVector: DownRightTeeVector,\n        DownRightVectorBar: DownRightVectorBar,\n        DownRightVector: DownRightVector,\n        DownTeeArrow: DownTeeArrow,\n        DownTee: DownTee,\n        drbkarow: drbkarow,\n        drcorn: drcorn,\n        drcrop: drcrop,\n        Dscr: Dscr,\n        dscr: dscr,\n        DScy: DScy,\n        dscy: dscy,\n        dsol: dsol,\n        Dstrok: Dstrok,\n        dstrok: dstrok,\n        dtdot: dtdot,\n        dtri: dtri,\n        dtrif: dtrif,\n        duarr: duarr,\n        duhar: duhar,\n        dwangle: dwangle,\n        DZcy: DZcy,\n        dzcy: dzcy,\n        dzigrarr: dzigrarr,\n        Eacute: Eacute,\n        eacute: eacute,\n        easter: easter,\n        Ecaron: Ecaron,\n        ecaron: ecaron,\n        Ecirc: Ecirc,\n        ecirc: ecirc,\n        ecir: ecir,\n        ecolon: ecolon,\n        Ecy: Ecy,\n        ecy: ecy,\n        eDDot: eDDot,\n        Edot: Edot,\n        edot: edot,\n        eDot: eDot,\n        ee: ee,\n        efDot: efDot,\n        Efr: Efr,\n        efr: efr,\n        eg: eg,\n        Egrave: Egrave,\n        egrave: egrave,\n        egs: egs,\n        egsdot: egsdot,\n        el: el,\n        Element: Element,\n        elinters: elinters,\n        ell: ell,\n        els: els,\n        elsdot: elsdot,\n        Emacr: Emacr,\n        emacr: emacr,\n        empty: empty,\n        emptyset: emptyset,\n        EmptySmallSquare: EmptySmallSquare,\n        emptyv: emptyv,\n        EmptyVerySmallSquare: EmptyVerySmallSquare,\n        emsp13: emsp13,\n        emsp14: emsp14,\n        emsp: emsp,\n        ENG: ENG,\n        eng: eng,\n        ensp: ensp,\n        Eogon: Eogon,\n        eogon: eogon,\n        Eopf: Eopf,\n        eopf: eopf,\n        epar: epar,\n        eparsl: eparsl,\n        eplus: eplus,\n        epsi: epsi,\n        Epsilon: Epsilon,\n        epsilon: epsilon,\n        epsiv: epsiv,\n        eqcirc: eqcirc,\n        eqcolon: eqcolon,\n        eqsim: eqsim,\n        eqslantgtr: eqslantgtr,\n        eqslantless: eqslantless,\n        Equal: Equal,\n        equals: equals,\n        EqualTilde: EqualTilde,\n        equest: equest,\n        Equilibrium: Equilibrium,\n        equiv: equiv,\n        equivDD: equivDD,\n        eqvparsl: eqvparsl,\n        erarr: erarr,\n        erDot: erDot,\n        escr: escr,\n        Escr: Escr,\n        esdot: esdot,\n        Esim: Esim,\n        esim: esim,\n        Eta: Eta,\n        eta: eta,\n        ETH: ETH,\n        eth: eth,\n        Euml: Euml,\n        euml: euml,\n        euro: euro,\n        excl: excl,\n        exist: exist,\n        Exists: Exists,\n        expectation: expectation,\n        exponentiale: exponentiale,\n        ExponentialE: ExponentialE,\n        fallingdotseq: fallingdotseq,\n        Fcy: Fcy,\n        fcy: fcy,\n        female: female,\n        ffilig: ffilig,\n        fflig: fflig,\n        ffllig: ffllig,\n        Ffr: Ffr,\n        ffr: ffr,\n        filig: filig,\n        FilledSmallSquare: FilledSmallSquare,\n        FilledVerySmallSquare: FilledVerySmallSquare,\n        fjlig: fjlig,\n        flat: flat,\n        fllig: fllig,\n        fltns: fltns,\n        fnof: fnof,\n        Fopf: Fopf,\n        fopf: fopf,\n        forall: forall,\n        ForAll: ForAll,\n        fork: fork,\n        forkv: forkv,\n        Fouriertrf: Fouriertrf,\n        fpartint: fpartint,\n        frac12: frac12,\n        frac13: frac13,\n        frac14: frac14,\n        frac15: frac15,\n        frac16: frac16,\n        frac18: frac18,\n        frac23: frac23,\n        frac25: frac25,\n        frac34: frac34,\n        frac35: frac35,\n        frac38: frac38,\n        frac45: frac45,\n        frac56: frac56,\n        frac58: frac58,\n        frac78: frac78,\n        frasl: frasl,\n        frown: frown,\n        fscr: fscr,\n        Fscr: Fscr,\n        gacute: gacute,\n        Gamma: Gamma,\n        gamma: gamma,\n        Gammad: Gammad,\n        gammad: gammad,\n        gap: gap,\n        Gbreve: Gbreve,\n        gbreve: gbreve,\n        Gcedil: Gcedil,\n        Gcirc: Gcirc,\n        gcirc: gcirc,\n        Gcy: Gcy,\n        gcy: gcy,\n        Gdot: Gdot,\n        gdot: gdot,\n        ge: ge,\n        gE: gE,\n        gEl: gEl,\n        gel: gel,\n        geq: geq,\n        geqq: geqq,\n        geqslant: geqslant,\n        gescc: gescc,\n        ges: ges,\n        gesdot: gesdot,\n        gesdoto: gesdoto,\n        gesdotol: gesdotol,\n        gesl: gesl,\n        gesles: gesles,\n        Gfr: Gfr,\n        gfr: gfr,\n        gg: gg,\n        Gg: Gg,\n        ggg: ggg,\n        gimel: gimel,\n        GJcy: GJcy,\n        gjcy: gjcy,\n        gla: gla,\n        gl: gl,\n        glE: glE,\n        glj: glj,\n        gnap: gnap,\n        gnapprox: gnapprox,\n        gne: gne,\n        gnE: gnE,\n        gneq: gneq,\n        gneqq: gneqq,\n        gnsim: gnsim,\n        Gopf: Gopf,\n        gopf: gopf,\n        grave: grave,\n        GreaterEqual: GreaterEqual,\n        GreaterEqualLess: GreaterEqualLess,\n        GreaterFullEqual: GreaterFullEqual,\n        GreaterGreater: GreaterGreater,\n        GreaterLess: GreaterLess,\n        GreaterSlantEqual: GreaterSlantEqual,\n        GreaterTilde: GreaterTilde,\n        Gscr: Gscr,\n        gscr: gscr,\n        gsim: gsim,\n        gsime: gsime,\n        gsiml: gsiml,\n        gtcc: gtcc,\n        gtcir: gtcir,\n        gt: gt,\n        GT: GT,\n        Gt: Gt,\n        gtdot: gtdot,\n        gtlPar: gtlPar,\n        gtquest: gtquest,\n        gtrapprox: gtrapprox,\n        gtrarr: gtrarr,\n        gtrdot: gtrdot,\n        gtreqless: gtreqless,\n        gtreqqless: gtreqqless,\n        gtrless: gtrless,\n        gtrsim: gtrsim,\n        gvertneqq: gvertneqq,\n        gvnE: gvnE,\n        Hacek: Hacek,\n        hairsp: hairsp,\n        half: half,\n        hamilt: hamilt,\n        HARDcy: HARDcy,\n        hardcy: hardcy,\n        harrcir: harrcir,\n        harr: harr,\n        hArr: hArr,\n        harrw: harrw,\n        Hat: Hat,\n        hbar: hbar,\n        Hcirc: Hcirc,\n        hcirc: hcirc,\n        hearts: hearts,\n        heartsuit: heartsuit,\n        hellip: hellip,\n        hercon: hercon,\n        hfr: hfr,\n        Hfr: Hfr,\n        HilbertSpace: HilbertSpace,\n        hksearow: hksearow,\n        hkswarow: hkswarow,\n        hoarr: hoarr,\n        homtht: homtht,\n        hookleftarrow: hookleftarrow,\n        hookrightarrow: hookrightarrow,\n        hopf: hopf,\n        Hopf: Hopf,\n        horbar: horbar,\n        HorizontalLine: HorizontalLine,\n        hscr: hscr,\n        Hscr: Hscr,\n        hslash: hslash,\n        Hstrok: Hstrok,\n        hstrok: hstrok,\n        HumpDownHump: HumpDownHump,\n        HumpEqual: HumpEqual,\n        hybull: hybull,\n        hyphen: hyphen,\n        Iacute: Iacute,\n        iacute: iacute,\n        ic: ic,\n        Icirc: Icirc,\n        icirc: icirc,\n        Icy: Icy,\n        icy: icy,\n        Idot: Idot,\n        IEcy: IEcy,\n        iecy: iecy,\n        iexcl: iexcl,\n        iff: iff,\n        ifr: ifr,\n        Ifr: Ifr,\n        Igrave: Igrave,\n        igrave: igrave,\n        ii: ii,\n        iiiint: iiiint,\n        iiint: iiint,\n        iinfin: iinfin,\n        iiota: iiota,\n        IJlig: IJlig,\n        ijlig: ijlig,\n        Imacr: Imacr,\n        imacr: imacr,\n        image: image,\n        ImaginaryI: ImaginaryI,\n        imagline: imagline,\n        imagpart: imagpart,\n        imath: imath,\n        Im: Im,\n        imof: imof,\n        imped: imped,\n        Implies: Implies,\n        incare: incare,\n        infin: infin,\n        infintie: infintie,\n        inodot: inodot,\n        intcal: intcal,\n        int: int,\n        Int: Int,\n        integers: integers,\n        Integral: Integral,\n        intercal: intercal,\n        Intersection: Intersection,\n        intlarhk: intlarhk,\n        intprod: intprod,\n        InvisibleComma: InvisibleComma,\n        InvisibleTimes: InvisibleTimes,\n        IOcy: IOcy,\n        iocy: iocy,\n        Iogon: Iogon,\n        iogon: iogon,\n        Iopf: Iopf,\n        iopf: iopf,\n        Iota: Iota,\n        iota: iota,\n        iprod: iprod,\n        iquest: iquest,\n        iscr: iscr,\n        Iscr: Iscr,\n        isin: isin,\n        isindot: isindot,\n        isinE: isinE,\n        isins: isins,\n        isinsv: isinsv,\n        isinv: isinv,\n        it: it,\n        Itilde: Itilde,\n        itilde: itilde,\n        Iukcy: Iukcy,\n        iukcy: iukcy,\n        Iuml: Iuml,\n        iuml: iuml,\n        Jcirc: Jcirc,\n        jcirc: jcirc,\n        Jcy: Jcy,\n        jcy: jcy,\n        Jfr: Jfr,\n        jfr: jfr,\n        jmath: jmath,\n        Jopf: Jopf,\n        jopf: jopf,\n        Jscr: Jscr,\n        jscr: jscr,\n        Jsercy: Jsercy,\n        jsercy: jsercy,\n        Jukcy: Jukcy,\n        jukcy: jukcy,\n        Kappa: Kappa,\n        kappa: kappa,\n        kappav: kappav,\n        Kcedil: Kcedil,\n        kcedil: kcedil,\n        Kcy: Kcy,\n        kcy: kcy,\n        Kfr: Kfr,\n        kfr: kfr,\n        kgreen: kgreen,\n        KHcy: KHcy,\n        khcy: khcy,\n        KJcy: KJcy,\n        kjcy: kjcy,\n        Kopf: Kopf,\n        kopf: kopf,\n        Kscr: Kscr,\n        kscr: kscr,\n        lAarr: lAarr,\n        Lacute: Lacute,\n        lacute: lacute,\n        laemptyv: laemptyv,\n        lagran: lagran,\n        Lambda: Lambda,\n        lambda: lambda,\n        lang: lang,\n        Lang: Lang,\n        langd: langd,\n        langle: langle,\n        lap: lap,\n        Laplacetrf: Laplacetrf,\n        laquo: laquo,\n        larrb: larrb,\n        larrbfs: larrbfs,\n        larr: larr,\n        Larr: Larr,\n        lArr: lArr,\n        larrfs: larrfs,\n        larrhk: larrhk,\n        larrlp: larrlp,\n        larrpl: larrpl,\n        larrsim: larrsim,\n        larrtl: larrtl,\n        latail: latail,\n        lAtail: lAtail,\n        lat: lat,\n        late: late,\n        lates: lates,\n        lbarr: lbarr,\n        lBarr: lBarr,\n        lbbrk: lbbrk,\n        lbrace: lbrace,\n        lbrack: lbrack,\n        lbrke: lbrke,\n        lbrksld: lbrksld,\n        lbrkslu: lbrkslu,\n        Lcaron: Lcaron,\n        lcaron: lcaron,\n        Lcedil: Lcedil,\n        lcedil: lcedil,\n        lceil: lceil,\n        lcub: lcub,\n        Lcy: Lcy,\n        lcy: lcy,\n        ldca: ldca,\n        ldquo: ldquo,\n        ldquor: ldquor,\n        ldrdhar: ldrdhar,\n        ldrushar: ldrushar,\n        ldsh: ldsh,\n        le: le,\n        lE: lE,\n        LeftAngleBracket: LeftAngleBracket,\n        LeftArrowBar: LeftArrowBar,\n        leftarrow: leftarrow,\n        LeftArrow: LeftArrow,\n        Leftarrow: Leftarrow,\n        LeftArrowRightArrow: LeftArrowRightArrow,\n        leftarrowtail: leftarrowtail,\n        LeftCeiling: LeftCeiling,\n        LeftDoubleBracket: LeftDoubleBracket,\n        LeftDownTeeVector: LeftDownTeeVector,\n        LeftDownVectorBar: LeftDownVectorBar,\n        LeftDownVector: LeftDownVector,\n        LeftFloor: LeftFloor,\n        leftharpoondown: leftharpoondown,\n        leftharpoonup: leftharpoonup,\n        leftleftarrows: leftleftarrows,\n        leftrightarrow: leftrightarrow,\n        LeftRightArrow: LeftRightArrow,\n        Leftrightarrow: Leftrightarrow,\n        leftrightarrows: leftrightarrows,\n        leftrightharpoons: leftrightharpoons,\n        leftrightsquigarrow: leftrightsquigarrow,\n        LeftRightVector: LeftRightVector,\n        LeftTeeArrow: LeftTeeArrow,\n        LeftTee: LeftTee,\n        LeftTeeVector: LeftTeeVector,\n        leftthreetimes: leftthreetimes,\n        LeftTriangleBar: LeftTriangleBar,\n        LeftTriangle: LeftTriangle,\n        LeftTriangleEqual: LeftTriangleEqual,\n        LeftUpDownVector: LeftUpDownVector,\n        LeftUpTeeVector: LeftUpTeeVector,\n        LeftUpVectorBar: LeftUpVectorBar,\n        LeftUpVector: LeftUpVector,\n        LeftVectorBar: LeftVectorBar,\n        LeftVector: LeftVector,\n        lEg: lEg,\n        leg: leg,\n        leq: leq,\n        leqq: leqq,\n        leqslant: leqslant,\n        lescc: lescc,\n        les: les,\n        lesdot: lesdot,\n        lesdoto: lesdoto,\n        lesdotor: lesdotor,\n        lesg: lesg,\n        lesges: lesges,\n        lessapprox: lessapprox,\n        lessdot: lessdot,\n        lesseqgtr: lesseqgtr,\n        lesseqqgtr: lesseqqgtr,\n        LessEqualGreater: LessEqualGreater,\n        LessFullEqual: LessFullEqual,\n        LessGreater: LessGreater,\n        lessgtr: lessgtr,\n        LessLess: LessLess,\n        lesssim: lesssim,\n        LessSlantEqual: LessSlantEqual,\n        LessTilde: LessTilde,\n        lfisht: lfisht,\n        lfloor: lfloor,\n        Lfr: Lfr,\n        lfr: lfr,\n        lg: lg,\n        lgE: lgE,\n        lHar: lHar,\n        lhard: lhard,\n        lharu: lharu,\n        lharul: lharul,\n        lhblk: lhblk,\n        LJcy: LJcy,\n        ljcy: ljcy,\n        llarr: llarr,\n        ll: ll,\n        Ll: Ll,\n        llcorner: llcorner,\n        Lleftarrow: Lleftarrow,\n        llhard: llhard,\n        lltri: lltri,\n        Lmidot: Lmidot,\n        lmidot: lmidot,\n        lmoustache: lmoustache,\n        lmoust: lmoust,\n        lnap: lnap,\n        lnapprox: lnapprox,\n        lne: lne,\n        lnE: lnE,\n        lneq: lneq,\n        lneqq: lneqq,\n        lnsim: lnsim,\n        loang: loang,\n        loarr: loarr,\n        lobrk: lobrk,\n        longleftarrow: longleftarrow,\n        LongLeftArrow: LongLeftArrow,\n        Longleftarrow: Longleftarrow,\n        longleftrightarrow: longleftrightarrow,\n        LongLeftRightArrow: LongLeftRightArrow,\n        Longleftrightarrow: Longleftrightarrow,\n        longmapsto: longmapsto,\n        longrightarrow: longrightarrow,\n        LongRightArrow: LongRightArrow,\n        Longrightarrow: Longrightarrow,\n        looparrowleft: looparrowleft,\n        looparrowright: looparrowright,\n        lopar: lopar,\n        Lopf: Lopf,\n        lopf: lopf,\n        loplus: loplus,\n        lotimes: lotimes,\n        lowast: lowast,\n        lowbar: lowbar,\n        LowerLeftArrow: LowerLeftArrow,\n        LowerRightArrow: LowerRightArrow,\n        loz: loz,\n        lozenge: lozenge,\n        lozf: lozf,\n        lpar: lpar,\n        lparlt: lparlt,\n        lrarr: lrarr,\n        lrcorner: lrcorner,\n        lrhar: lrhar,\n        lrhard: lrhard,\n        lrm: lrm,\n        lrtri: lrtri,\n        lsaquo: lsaquo,\n        lscr: lscr,\n        Lscr: Lscr,\n        lsh: lsh,\n        Lsh: Lsh,\n        lsim: lsim,\n        lsime: lsime,\n        lsimg: lsimg,\n        lsqb: lsqb,\n        lsquo: lsquo,\n        lsquor: lsquor,\n        Lstrok: Lstrok,\n        lstrok: lstrok,\n        ltcc: ltcc,\n        ltcir: ltcir,\n        lt: lt,\n        LT: LT,\n        Lt: Lt,\n        ltdot: ltdot,\n        lthree: lthree,\n        ltimes: ltimes,\n        ltlarr: ltlarr,\n        ltquest: ltquest,\n        ltri: ltri,\n        ltrie: ltrie,\n        ltrif: ltrif,\n        ltrPar: ltrPar,\n        lurdshar: lurdshar,\n        luruhar: luruhar,\n        lvertneqq: lvertneqq,\n        lvnE: lvnE,\n        macr: macr,\n        male: male,\n        malt: malt,\n        maltese: maltese,\n        map: map,\n        mapsto: mapsto,\n        mapstodown: mapstodown,\n        mapstoleft: mapstoleft,\n        mapstoup: mapstoup,\n        marker: marker,\n        mcomma: mcomma,\n        Mcy: Mcy,\n        mcy: mcy,\n        mdash: mdash,\n        mDDot: mDDot,\n        measuredangle: measuredangle,\n        MediumSpace: MediumSpace,\n        Mellintrf: Mellintrf,\n        Mfr: Mfr,\n        mfr: mfr,\n        mho: mho,\n        micro: micro,\n        midast: midast,\n        midcir: midcir,\n        mid: mid,\n        middot: middot,\n        minusb: minusb,\n        minus: minus,\n        minusd: minusd,\n        minusdu: minusdu,\n        MinusPlus: MinusPlus,\n        mlcp: mlcp,\n        mldr: mldr,\n        mnplus: mnplus,\n        models: models,\n        Mopf: Mopf,\n        mopf: mopf,\n        mp: mp,\n        mscr: mscr,\n        Mscr: Mscr,\n        mstpos: mstpos,\n        Mu: Mu,\n        mu: mu,\n        multimap: multimap,\n        mumap: mumap,\n        nabla: nabla,\n        Nacute: Nacute,\n        nacute: nacute,\n        nang: nang,\n        nap: nap,\n        napE: napE,\n        napid: napid,\n        napos: napos,\n        napprox: napprox,\n        natural: natural,\n        naturals: naturals,\n        natur: natur,\n        nbsp: nbsp,\n        nbump: nbump,\n        nbumpe: nbumpe,\n        ncap: ncap,\n        Ncaron: Ncaron,\n        ncaron: ncaron,\n        Ncedil: Ncedil,\n        ncedil: ncedil,\n        ncong: ncong,\n        ncongdot: ncongdot,\n        ncup: ncup,\n        Ncy: Ncy,\n        ncy: ncy,\n        ndash: ndash,\n        nearhk: nearhk,\n        nearr: nearr,\n        neArr: neArr,\n        nearrow: nearrow,\n        ne: ne,\n        nedot: nedot,\n        NegativeMediumSpace: NegativeMediumSpace,\n        NegativeThickSpace: NegativeThickSpace,\n        NegativeThinSpace: NegativeThinSpace,\n        NegativeVeryThinSpace: NegativeVeryThinSpace,\n        nequiv: nequiv,\n        nesear: nesear,\n        nesim: nesim,\n        NestedGreaterGreater: NestedGreaterGreater,\n        NestedLessLess: NestedLessLess,\n        NewLine: NewLine,\n        nexist: nexist,\n        nexists: nexists,\n        Nfr: Nfr,\n        nfr: nfr,\n        ngE: ngE,\n        nge: nge,\n        ngeq: ngeq,\n        ngeqq: ngeqq,\n        ngeqslant: ngeqslant,\n        nges: nges,\n        nGg: nGg,\n        ngsim: ngsim,\n        nGt: nGt,\n        ngt: ngt,\n        ngtr: ngtr,\n        nGtv: nGtv,\n        nharr: nharr,\n        nhArr: nhArr,\n        nhpar: nhpar,\n        ni: ni,\n        nis: nis,\n        nisd: nisd,\n        niv: niv,\n        NJcy: NJcy,\n        njcy: njcy,\n        nlarr: nlarr,\n        nlArr: nlArr,\n        nldr: nldr,\n        nlE: nlE,\n        nle: nle,\n        nleftarrow: nleftarrow,\n        nLeftarrow: nLeftarrow,\n        nleftrightarrow: nleftrightarrow,\n        nLeftrightarrow: nLeftrightarrow,\n        nleq: nleq,\n        nleqq: nleqq,\n        nleqslant: nleqslant,\n        nles: nles,\n        nless: nless,\n        nLl: nLl,\n        nlsim: nlsim,\n        nLt: nLt,\n        nlt: nlt,\n        nltri: nltri,\n        nltrie: nltrie,\n        nLtv: nLtv,\n        nmid: nmid,\n        NoBreak: NoBreak,\n        NonBreakingSpace: NonBreakingSpace,\n        nopf: nopf,\n        Nopf: Nopf,\n        Not: Not,\n        not: not,\n        NotCongruent: NotCongruent,\n        NotCupCap: NotCupCap,\n        NotDoubleVerticalBar: NotDoubleVerticalBar,\n        NotElement: NotElement,\n        NotEqual: NotEqual,\n        NotEqualTilde: NotEqualTilde,\n        NotExists: NotExists,\n        NotGreater: NotGreater,\n        NotGreaterEqual: NotGreaterEqual,\n        NotGreaterFullEqual: NotGreaterFullEqual,\n        NotGreaterGreater: NotGreaterGreater,\n        NotGreaterLess: NotGreaterLess,\n        NotGreaterSlantEqual: NotGreaterSlantEqual,\n        NotGreaterTilde: NotGreaterTilde,\n        NotHumpDownHump: NotHumpDownHump,\n        NotHumpEqual: NotHumpEqual,\n        notin: notin,\n        notindot: notindot,\n        notinE: notinE,\n        notinva: notinva,\n        notinvb: notinvb,\n        notinvc: notinvc,\n        NotLeftTriangleBar: NotLeftTriangleBar,\n        NotLeftTriangle: NotLeftTriangle,\n        NotLeftTriangleEqual: NotLeftTriangleEqual,\n        NotLess: NotLess,\n        NotLessEqual: NotLessEqual,\n        NotLessGreater: NotLessGreater,\n        NotLessLess: NotLessLess,\n        NotLessSlantEqual: NotLessSlantEqual,\n        NotLessTilde: NotLessTilde,\n        NotNestedGreaterGreater: NotNestedGreaterGreater,\n        NotNestedLessLess: NotNestedLessLess,\n        notni: notni,\n        notniva: notniva,\n        notnivb: notnivb,\n        notnivc: notnivc,\n        NotPrecedes: NotPrecedes,\n        NotPrecedesEqual: NotPrecedesEqual,\n        NotPrecedesSlantEqual: NotPrecedesSlantEqual,\n        NotReverseElement: NotReverseElement,\n        NotRightTriangleBar: NotRightTriangleBar,\n        NotRightTriangle: NotRightTriangle,\n        NotRightTriangleEqual: NotRightTriangleEqual,\n        NotSquareSubset: NotSquareSubset,\n        NotSquareSubsetEqual: NotSquareSubsetEqual,\n        NotSquareSuperset: NotSquareSuperset,\n        NotSquareSupersetEqual: NotSquareSupersetEqual,\n        NotSubset: NotSubset,\n        NotSubsetEqual: NotSubsetEqual,\n        NotSucceeds: NotSucceeds,\n        NotSucceedsEqual: NotSucceedsEqual,\n        NotSucceedsSlantEqual: NotSucceedsSlantEqual,\n        NotSucceedsTilde: NotSucceedsTilde,\n        NotSuperset: NotSuperset,\n        NotSupersetEqual: NotSupersetEqual,\n        NotTilde: NotTilde,\n        NotTildeEqual: NotTildeEqual,\n        NotTildeFullEqual: NotTildeFullEqual,\n        NotTildeTilde: NotTildeTilde,\n        NotVerticalBar: NotVerticalBar,\n        nparallel: nparallel,\n        npar: npar,\n        nparsl: nparsl,\n        npart: npart,\n        npolint: npolint,\n        npr: npr,\n        nprcue: nprcue,\n        nprec: nprec,\n        npreceq: npreceq,\n        npre: npre,\n        nrarrc: nrarrc,\n        nrarr: nrarr,\n        nrArr: nrArr,\n        nrarrw: nrarrw,\n        nrightarrow: nrightarrow,\n        nRightarrow: nRightarrow,\n        nrtri: nrtri,\n        nrtrie: nrtrie,\n        nsc: nsc,\n        nsccue: nsccue,\n        nsce: nsce,\n        Nscr: Nscr,\n        nscr: nscr,\n        nshortmid: nshortmid,\n        nshortparallel: nshortparallel,\n        nsim: nsim,\n        nsime: nsime,\n        nsimeq: nsimeq,\n        nsmid: nsmid,\n        nspar: nspar,\n        nsqsube: nsqsube,\n        nsqsupe: nsqsupe,\n        nsub: nsub,\n        nsubE: nsubE,\n        nsube: nsube,\n        nsubset: nsubset,\n        nsubseteq: nsubseteq,\n        nsubseteqq: nsubseteqq,\n        nsucc: nsucc,\n        nsucceq: nsucceq,\n        nsup: nsup,\n        nsupE: nsupE,\n        nsupe: nsupe,\n        nsupset: nsupset,\n        nsupseteq: nsupseteq,\n        nsupseteqq: nsupseteqq,\n        ntgl: ntgl,\n        Ntilde: Ntilde,\n        ntilde: ntilde,\n        ntlg: ntlg,\n        ntriangleleft: ntriangleleft,\n        ntrianglelefteq: ntrianglelefteq,\n        ntriangleright: ntriangleright,\n        ntrianglerighteq: ntrianglerighteq,\n        Nu: Nu,\n        nu: nu,\n        num: num,\n        numero: numero,\n        numsp: numsp,\n        nvap: nvap,\n        nvdash: nvdash,\n        nvDash: nvDash,\n        nVdash: nVdash,\n        nVDash: nVDash,\n        nvge: nvge,\n        nvgt: nvgt,\n        nvHarr: nvHarr,\n        nvinfin: nvinfin,\n        nvlArr: nvlArr,\n        nvle: nvle,\n        nvlt: nvlt,\n        nvltrie: nvltrie,\n        nvrArr: nvrArr,\n        nvrtrie: nvrtrie,\n        nvsim: nvsim,\n        nwarhk: nwarhk,\n        nwarr: nwarr,\n        nwArr: nwArr,\n        nwarrow: nwarrow,\n        nwnear: nwnear,\n        Oacute: Oacute,\n        oacute: oacute,\n        oast: oast,\n        Ocirc: Ocirc,\n        ocirc: ocirc,\n        ocir: ocir,\n        Ocy: Ocy,\n        ocy: ocy,\n        odash: odash,\n        Odblac: Odblac,\n        odblac: odblac,\n        odiv: odiv,\n        odot: odot,\n        odsold: odsold,\n        OElig: OElig,\n        oelig: oelig,\n        ofcir: ofcir,\n        Ofr: Ofr,\n        ofr: ofr,\n        ogon: ogon,\n        Ograve: Ograve,\n        ograve: ograve,\n        ogt: ogt,\n        ohbar: ohbar,\n        ohm: ohm,\n        oint: oint,\n        olarr: olarr,\n        olcir: olcir,\n        olcross: olcross,\n        oline: oline,\n        olt: olt,\n        Omacr: Omacr,\n        omacr: omacr,\n        Omega: Omega,\n        omega: omega,\n        Omicron: Omicron,\n        omicron: omicron,\n        omid: omid,\n        ominus: ominus,\n        Oopf: Oopf,\n        oopf: oopf,\n        opar: opar,\n        OpenCurlyDoubleQuote: OpenCurlyDoubleQuote,\n        OpenCurlyQuote: OpenCurlyQuote,\n        operp: operp,\n        oplus: oplus,\n        orarr: orarr,\n        Or: Or,\n        or: or,\n        ord: ord,\n        order: order,\n        orderof: orderof,\n        ordf: ordf,\n        ordm: ordm,\n        origof: origof,\n        oror: oror,\n        orslope: orslope,\n        orv: orv,\n        oS: oS,\n        Oscr: Oscr,\n        oscr: oscr,\n        Oslash: Oslash,\n        oslash: oslash,\n        osol: osol,\n        Otilde: Otilde,\n        otilde: otilde,\n        otimesas: otimesas,\n        Otimes: Otimes,\n        otimes: otimes,\n        Ouml: Ouml,\n        ouml: ouml,\n        ovbar: ovbar,\n        OverBar: OverBar,\n        OverBrace: OverBrace,\n        OverBracket: OverBracket,\n        OverParenthesis: OverParenthesis,\n        para: para,\n        parallel: parallel,\n        par: par,\n        parsim: parsim,\n        parsl: parsl,\n        part: part,\n        PartialD: PartialD,\n        Pcy: Pcy,\n        pcy: pcy,\n        percnt: percnt,\n        period: period,\n        permil: permil,\n        perp: perp,\n        pertenk: pertenk,\n        Pfr: Pfr,\n        pfr: pfr,\n        Phi: Phi,\n        phi: phi,\n        phiv: phiv,\n        phmmat: phmmat,\n        phone: phone,\n        Pi: Pi,\n        pi: pi,\n        pitchfork: pitchfork,\n        piv: piv,\n        planck: planck,\n        planckh: planckh,\n        plankv: plankv,\n        plusacir: plusacir,\n        plusb: plusb,\n        pluscir: pluscir,\n        plus: plus,\n        plusdo: plusdo,\n        plusdu: plusdu,\n        pluse: pluse,\n        PlusMinus: PlusMinus,\n        plusmn: plusmn,\n        plussim: plussim,\n        plustwo: plustwo,\n        pm: pm,\n        Poincareplane: Poincareplane,\n        pointint: pointint,\n        popf: popf,\n        Popf: Popf,\n        pound: pound,\n        prap: prap,\n        Pr: Pr,\n        pr: pr,\n        prcue: prcue,\n        precapprox: precapprox,\n        prec: prec,\n        preccurlyeq: preccurlyeq,\n        Precedes: Precedes,\n        PrecedesEqual: PrecedesEqual,\n        PrecedesSlantEqual: PrecedesSlantEqual,\n        PrecedesTilde: PrecedesTilde,\n        preceq: preceq,\n        precnapprox: precnapprox,\n        precneqq: precneqq,\n        precnsim: precnsim,\n        pre: pre,\n        prE: prE,\n        precsim: precsim,\n        prime: prime,\n        Prime: Prime,\n        primes: primes,\n        prnap: prnap,\n        prnE: prnE,\n        prnsim: prnsim,\n        prod: prod,\n        Product: Product,\n        profalar: profalar,\n        profline: profline,\n        profsurf: profsurf,\n        prop: prop,\n        Proportional: Proportional,\n        Proportion: Proportion,\n        propto: propto,\n        prsim: prsim,\n        prurel: prurel,\n        Pscr: Pscr,\n        pscr: pscr,\n        Psi: Psi,\n        psi: psi,\n        puncsp: puncsp,\n        Qfr: Qfr,\n        qfr: qfr,\n        qint: qint,\n        qopf: qopf,\n        Qopf: Qopf,\n        qprime: qprime,\n        Qscr: Qscr,\n        qscr: qscr,\n        quaternions: quaternions,\n        quatint: quatint,\n        quest: quest,\n        questeq: questeq,\n        quot: quot,\n        QUOT: QUOT,\n        rAarr: rAarr,\n        race: race,\n        Racute: Racute,\n        racute: racute,\n        radic: radic,\n        raemptyv: raemptyv,\n        rang: rang,\n        Rang: Rang,\n        rangd: rangd,\n        range: range,\n        rangle: rangle,\n        raquo: raquo,\n        rarrap: rarrap,\n        rarrb: rarrb,\n        rarrbfs: rarrbfs,\n        rarrc: rarrc,\n        rarr: rarr,\n        Rarr: Rarr,\n        rArr: rArr,\n        rarrfs: rarrfs,\n        rarrhk: rarrhk,\n        rarrlp: rarrlp,\n        rarrpl: rarrpl,\n        rarrsim: rarrsim,\n        Rarrtl: Rarrtl,\n        rarrtl: rarrtl,\n        rarrw: rarrw,\n        ratail: ratail,\n        rAtail: rAtail,\n        ratio: ratio,\n        rationals: rationals,\n        rbarr: rbarr,\n        rBarr: rBarr,\n        RBarr: RBarr,\n        rbbrk: rbbrk,\n        rbrace: rbrace,\n        rbrack: rbrack,\n        rbrke: rbrke,\n        rbrksld: rbrksld,\n        rbrkslu: rbrkslu,\n        Rcaron: Rcaron,\n        rcaron: rcaron,\n        Rcedil: Rcedil,\n        rcedil: rcedil,\n        rceil: rceil,\n        rcub: rcub,\n        Rcy: Rcy,\n        rcy: rcy,\n        rdca: rdca,\n        rdldhar: rdldhar,\n        rdquo: rdquo,\n        rdquor: rdquor,\n        rdsh: rdsh,\n        real: real,\n        realine: realine,\n        realpart: realpart,\n        reals: reals,\n        Re: Re,\n        rect: rect,\n        reg: reg,\n        REG: REG,\n        ReverseElement: ReverseElement,\n        ReverseEquilibrium: ReverseEquilibrium,\n        ReverseUpEquilibrium: ReverseUpEquilibrium,\n        rfisht: rfisht,\n        rfloor: rfloor,\n        rfr: rfr,\n        Rfr: Rfr,\n        rHar: rHar,\n        rhard: rhard,\n        rharu: rharu,\n        rharul: rharul,\n        Rho: Rho,\n        rho: rho,\n        rhov: rhov,\n        RightAngleBracket: RightAngleBracket,\n        RightArrowBar: RightArrowBar,\n        rightarrow: rightarrow,\n        RightArrow: RightArrow,\n        Rightarrow: Rightarrow,\n        RightArrowLeftArrow: RightArrowLeftArrow,\n        rightarrowtail: rightarrowtail,\n        RightCeiling: RightCeiling,\n        RightDoubleBracket: RightDoubleBracket,\n        RightDownTeeVector: RightDownTeeVector,\n        RightDownVectorBar: RightDownVectorBar,\n        RightDownVector: RightDownVector,\n        RightFloor: RightFloor,\n        rightharpoondown: rightharpoondown,\n        rightharpoonup: rightharpoonup,\n        rightleftarrows: rightleftarrows,\n        rightleftharpoons: rightleftharpoons,\n        rightrightarrows: rightrightarrows,\n        rightsquigarrow: rightsquigarrow,\n        RightTeeArrow: RightTeeArrow,\n        RightTee: RightTee,\n        RightTeeVector: RightTeeVector,\n        rightthreetimes: rightthreetimes,\n        RightTriangleBar: RightTriangleBar,\n        RightTriangle: RightTriangle,\n        RightTriangleEqual: RightTriangleEqual,\n        RightUpDownVector: RightUpDownVector,\n        RightUpTeeVector: RightUpTeeVector,\n        RightUpVectorBar: RightUpVectorBar,\n        RightUpVector: RightUpVector,\n        RightVectorBar: RightVectorBar,\n        RightVector: RightVector,\n        ring: ring,\n        risingdotseq: risingdotseq,\n        rlarr: rlarr,\n        rlhar: rlhar,\n        rlm: rlm,\n        rmoustache: rmoustache,\n        rmoust: rmoust,\n        rnmid: rnmid,\n        roang: roang,\n        roarr: roarr,\n        robrk: robrk,\n        ropar: ropar,\n        ropf: ropf,\n        Ropf: Ropf,\n        roplus: roplus,\n        rotimes: rotimes,\n        RoundImplies: RoundImplies,\n        rpar: rpar,\n        rpargt: rpargt,\n        rppolint: rppolint,\n        rrarr: rrarr,\n        Rrightarrow: Rrightarrow,\n        rsaquo: rsaquo,\n        rscr: rscr,\n        Rscr: Rscr,\n        rsh: rsh,\n        Rsh: Rsh,\n        rsqb: rsqb,\n        rsquo: rsquo,\n        rsquor: rsquor,\n        rthree: rthree,\n        rtimes: rtimes,\n        rtri: rtri,\n        rtrie: rtrie,\n        rtrif: rtrif,\n        rtriltri: rtriltri,\n        RuleDelayed: RuleDelayed,\n        ruluhar: ruluhar,\n        rx: rx,\n        Sacute: Sacute,\n        sacute: sacute,\n        sbquo: sbquo,\n        scap: scap,\n        Scaron: Scaron,\n        scaron: scaron,\n        Sc: Sc,\n        sc: sc,\n        sccue: sccue,\n        sce: sce,\n        scE: scE,\n        Scedil: Scedil,\n        scedil: scedil,\n        Scirc: Scirc,\n        scirc: scirc,\n        scnap: scnap,\n        scnE: scnE,\n        scnsim: scnsim,\n        scpolint: scpolint,\n        scsim: scsim,\n        Scy: Scy,\n        scy: scy,\n        sdotb: sdotb,\n        sdot: sdot,\n        sdote: sdote,\n        searhk: searhk,\n        searr: searr,\n        seArr: seArr,\n        searrow: searrow,\n        sect: sect,\n        semi: semi,\n        seswar: seswar,\n        setminus: setminus,\n        setmn: setmn,\n        sext: sext,\n        Sfr: Sfr,\n        sfr: sfr,\n        sfrown: sfrown,\n        sharp: sharp,\n        SHCHcy: SHCHcy,\n        shchcy: shchcy,\n        SHcy: SHcy,\n        shcy: shcy,\n        ShortDownArrow: ShortDownArrow,\n        ShortLeftArrow: ShortLeftArrow,\n        shortmid: shortmid,\n        shortparallel: shortparallel,\n        ShortRightArrow: ShortRightArrow,\n        ShortUpArrow: ShortUpArrow,\n        shy: shy,\n        Sigma: Sigma,\n        sigma: sigma,\n        sigmaf: sigmaf,\n        sigmav: sigmav,\n        sim: sim,\n        simdot: simdot,\n        sime: sime,\n        simeq: simeq,\n        simg: simg,\n        simgE: simgE,\n        siml: siml,\n        simlE: simlE,\n        simne: simne,\n        simplus: simplus,\n        simrarr: simrarr,\n        slarr: slarr,\n        SmallCircle: SmallCircle,\n        smallsetminus: smallsetminus,\n        smashp: smashp,\n        smeparsl: smeparsl,\n        smid: smid,\n        smile: smile,\n        smt: smt,\n        smte: smte,\n        smtes: smtes,\n        SOFTcy: SOFTcy,\n        softcy: softcy,\n        solbar: solbar,\n        solb: solb,\n        sol: sol,\n        Sopf: Sopf,\n        sopf: sopf,\n        spades: spades,\n        spadesuit: spadesuit,\n        spar: spar,\n        sqcap: sqcap,\n        sqcaps: sqcaps,\n        sqcup: sqcup,\n        sqcups: sqcups,\n        Sqrt: Sqrt,\n        sqsub: sqsub,\n        sqsube: sqsube,\n        sqsubset: sqsubset,\n        sqsubseteq: sqsubseteq,\n        sqsup: sqsup,\n        sqsupe: sqsupe,\n        sqsupset: sqsupset,\n        sqsupseteq: sqsupseteq,\n        square: square,\n        Square: Square,\n        SquareIntersection: SquareIntersection,\n        SquareSubset: SquareSubset,\n        SquareSubsetEqual: SquareSubsetEqual,\n        SquareSuperset: SquareSuperset,\n        SquareSupersetEqual: SquareSupersetEqual,\n        SquareUnion: SquareUnion,\n        squarf: squarf,\n        squ: squ,\n        squf: squf,\n        srarr: srarr,\n        Sscr: Sscr,\n        sscr: sscr,\n        ssetmn: ssetmn,\n        ssmile: ssmile,\n        sstarf: sstarf,\n        Star: Star,\n        star: star,\n        starf: starf,\n        straightepsilon: straightepsilon,\n        straightphi: straightphi,\n        strns: strns,\n        sub: sub,\n        Sub: Sub,\n        subdot: subdot,\n        subE: subE,\n        sube: sube,\n        subedot: subedot,\n        submult: submult,\n        subnE: subnE,\n        subne: subne,\n        subplus: subplus,\n        subrarr: subrarr,\n        subset: subset,\n        Subset: Subset,\n        subseteq: subseteq,\n        subseteqq: subseteqq,\n        SubsetEqual: SubsetEqual,\n        subsetneq: subsetneq,\n        subsetneqq: subsetneqq,\n        subsim: subsim,\n        subsub: subsub,\n        subsup: subsup,\n        succapprox: succapprox,\n        succ: succ,\n        succcurlyeq: succcurlyeq,\n        Succeeds: Succeeds,\n        SucceedsEqual: SucceedsEqual,\n        SucceedsSlantEqual: SucceedsSlantEqual,\n        SucceedsTilde: SucceedsTilde,\n        succeq: succeq,\n        succnapprox: succnapprox,\n        succneqq: succneqq,\n        succnsim: succnsim,\n        succsim: succsim,\n        SuchThat: SuchThat,\n        sum: sum,\n        Sum: Sum,\n        sung: sung,\n        sup1: sup1,\n        sup2: sup2,\n        sup3: sup3,\n        sup: sup,\n        Sup: Sup,\n        supdot: supdot,\n        supdsub: supdsub,\n        supE: supE,\n        supe: supe,\n        supedot: supedot,\n        Superset: Superset,\n        SupersetEqual: SupersetEqual,\n        suphsol: suphsol,\n        suphsub: suphsub,\n        suplarr: suplarr,\n        supmult: supmult,\n        supnE: supnE,\n        supne: supne,\n        supplus: supplus,\n        supset: supset,\n        Supset: Supset,\n        supseteq: supseteq,\n        supseteqq: supseteqq,\n        supsetneq: supsetneq,\n        supsetneqq: supsetneqq,\n        supsim: supsim,\n        supsub: supsub,\n        supsup: supsup,\n        swarhk: swarhk,\n        swarr: swarr,\n        swArr: swArr,\n        swarrow: swarrow,\n        swnwar: swnwar,\n        szlig: szlig,\n        Tab: Tab,\n        target: target,\n        Tau: Tau,\n        tau: tau,\n        tbrk: tbrk,\n        Tcaron: Tcaron,\n        tcaron: tcaron,\n        Tcedil: Tcedil,\n        tcedil: tcedil,\n        Tcy: Tcy,\n        tcy: tcy,\n        tdot: tdot,\n        telrec: telrec,\n        Tfr: Tfr,\n        tfr: tfr,\n        there4: there4,\n        therefore: therefore,\n        Therefore: Therefore,\n        Theta: Theta,\n        theta: theta,\n        thetasym: thetasym,\n        thetav: thetav,\n        thickapprox: thickapprox,\n        thicksim: thicksim,\n        ThickSpace: ThickSpace,\n        ThinSpace: ThinSpace,\n        thinsp: thinsp,\n        thkap: thkap,\n        thksim: thksim,\n        THORN: THORN,\n        thorn: thorn,\n        tilde: tilde,\n        Tilde: Tilde,\n        TildeEqual: TildeEqual,\n        TildeFullEqual: TildeFullEqual,\n        TildeTilde: TildeTilde,\n        timesbar: timesbar,\n        timesb: timesb,\n        times: times,\n        timesd: timesd,\n        tint: tint,\n        toea: toea,\n        topbot: topbot,\n        topcir: topcir,\n        top: top,\n        Topf: Topf,\n        topf: topf,\n        topfork: topfork,\n        tosa: tosa,\n        tprime: tprime,\n        trade: trade,\n        TRADE: TRADE,\n        triangle: triangle,\n        triangledown: triangledown,\n        triangleleft: triangleleft,\n        trianglelefteq: trianglelefteq,\n        triangleq: triangleq,\n        triangleright: triangleright,\n        trianglerighteq: trianglerighteq,\n        tridot: tridot,\n        trie: trie,\n        triminus: triminus,\n        TripleDot: TripleDot,\n        triplus: triplus,\n        trisb: trisb,\n        tritime: tritime,\n        trpezium: trpezium,\n        Tscr: Tscr,\n        tscr: tscr,\n        TScy: TScy,\n        tscy: tscy,\n        TSHcy: TSHcy,\n        tshcy: tshcy,\n        Tstrok: Tstrok,\n        tstrok: tstrok,\n        twixt: twixt,\n        twoheadleftarrow: twoheadleftarrow,\n        twoheadrightarrow: twoheadrightarrow,\n        Uacute: Uacute,\n        uacute: uacute,\n        uarr: uarr,\n        Uarr: Uarr,\n        uArr: uArr,\n        Uarrocir: Uarrocir,\n        Ubrcy: Ubrcy,\n        ubrcy: ubrcy,\n        Ubreve: Ubreve,\n        ubreve: ubreve,\n        Ucirc: Ucirc,\n        ucirc: ucirc,\n        Ucy: Ucy,\n        ucy: ucy,\n        udarr: udarr,\n        Udblac: Udblac,\n        udblac: udblac,\n        udhar: udhar,\n        ufisht: ufisht,\n        Ufr: Ufr,\n        ufr: ufr,\n        Ugrave: Ugrave,\n        ugrave: ugrave,\n        uHar: uHar,\n        uharl: uharl,\n        uharr: uharr,\n        uhblk: uhblk,\n        ulcorn: ulcorn,\n        ulcorner: ulcorner,\n        ulcrop: ulcrop,\n        ultri: ultri,\n        Umacr: Umacr,\n        umacr: umacr,\n        uml: uml,\n        UnderBar: UnderBar,\n        UnderBrace: UnderBrace,\n        UnderBracket: UnderBracket,\n        UnderParenthesis: UnderParenthesis,\n        Union: Union,\n        UnionPlus: UnionPlus,\n        Uogon: Uogon,\n        uogon: uogon,\n        Uopf: Uopf,\n        uopf: uopf,\n        UpArrowBar: UpArrowBar,\n        uparrow: uparrow,\n        UpArrow: UpArrow,\n        Uparrow: Uparrow,\n        UpArrowDownArrow: UpArrowDownArrow,\n        updownarrow: updownarrow,\n        UpDownArrow: UpDownArrow,\n        Updownarrow: Updownarrow,\n        UpEquilibrium: UpEquilibrium,\n        upharpoonleft: upharpoonleft,\n        upharpoonright: upharpoonright,\n        uplus: uplus,\n        UpperLeftArrow: UpperLeftArrow,\n        UpperRightArrow: UpperRightArrow,\n        upsi: upsi,\n        Upsi: Upsi,\n        upsih: upsih,\n        Upsilon: Upsilon,\n        upsilon: upsilon,\n        UpTeeArrow: UpTeeArrow,\n        UpTee: UpTee,\n        upuparrows: upuparrows,\n        urcorn: urcorn,\n        urcorner: urcorner,\n        urcrop: urcrop,\n        Uring: Uring,\n        uring: uring,\n        urtri: urtri,\n        Uscr: Uscr,\n        uscr: uscr,\n        utdot: utdot,\n        Utilde: Utilde,\n        utilde: utilde,\n        utri: utri,\n        utrif: utrif,\n        uuarr: uuarr,\n        Uuml: Uuml,\n        uuml: uuml,\n        uwangle: uwangle,\n        vangrt: vangrt,\n        varepsilon: varepsilon,\n        varkappa: varkappa,\n        varnothing: varnothing,\n        varphi: varphi,\n        varpi: varpi,\n        varpropto: varpropto,\n        varr: varr,\n        vArr: vArr,\n        varrho: varrho,\n        varsigma: varsigma,\n        varsubsetneq: varsubsetneq,\n        varsubsetneqq: varsubsetneqq,\n        varsupsetneq: varsupsetneq,\n        varsupsetneqq: varsupsetneqq,\n        vartheta: vartheta,\n        vartriangleleft: vartriangleleft,\n        vartriangleright: vartriangleright,\n        vBar: vBar,\n        Vbar: Vbar,\n        vBarv: vBarv,\n        Vcy: Vcy,\n        vcy: vcy,\n        vdash: vdash,\n        vDash: vDash,\n        Vdash: Vdash,\n        VDash: VDash,\n        Vdashl: Vdashl,\n        veebar: veebar,\n        vee: vee,\n        Vee: Vee,\n        veeeq: veeeq,\n        vellip: vellip,\n        verbar: verbar,\n        Verbar: Verbar,\n        vert: vert,\n        Vert: Vert,\n        VerticalBar: VerticalBar,\n        VerticalLine: VerticalLine,\n        VerticalSeparator: VerticalSeparator,\n        VerticalTilde: VerticalTilde,\n        VeryThinSpace: VeryThinSpace,\n        Vfr: Vfr,\n        vfr: vfr,\n        vltri: vltri,\n        vnsub: vnsub,\n        vnsup: vnsup,\n        Vopf: Vopf,\n        vopf: vopf,\n        vprop: vprop,\n        vrtri: vrtri,\n        Vscr: Vscr,\n        vscr: vscr,\n        vsubnE: vsubnE,\n        vsubne: vsubne,\n        vsupnE: vsupnE,\n        vsupne: vsupne,\n        Vvdash: Vvdash,\n        vzigzag: vzigzag,\n        Wcirc: Wcirc,\n        wcirc: wcirc,\n        wedbar: wedbar,\n        wedge: wedge,\n        Wedge: Wedge,\n        wedgeq: wedgeq,\n        weierp: weierp,\n        Wfr: Wfr,\n        wfr: wfr,\n        Wopf: Wopf,\n        wopf: wopf,\n        wp: wp,\n        wr: wr,\n        wreath: wreath,\n        Wscr: Wscr,\n        wscr: wscr,\n        xcap: xcap,\n        xcirc: xcirc,\n        xcup: xcup,\n        xdtri: xdtri,\n        Xfr: Xfr,\n        xfr: xfr,\n        xharr: xharr,\n        xhArr: xhArr,\n        Xi: Xi,\n        xi: xi,\n        xlarr: xlarr,\n        xlArr: xlArr,\n        xmap: xmap,\n        xnis: xnis,\n        xodot: xodot,\n        Xopf: Xopf,\n        xopf: xopf,\n        xoplus: xoplus,\n        xotime: xotime,\n        xrarr: xrarr,\n        xrArr: xrArr,\n        Xscr: Xscr,\n        xscr: xscr,\n        xsqcup: xsqcup,\n        xuplus: xuplus,\n        xutri: xutri,\n        xvee: xvee,\n        xwedge: xwedge,\n        Yacute: Yacute,\n        yacute: yacute,\n        YAcy: YAcy,\n        yacy: yacy,\n        Ycirc: Ycirc,\n        ycirc: ycirc,\n        Ycy: Ycy,\n        ycy: ycy,\n        yen: yen,\n        Yfr: Yfr,\n        yfr: yfr,\n        YIcy: YIcy,\n        yicy: yicy,\n        Yopf: Yopf,\n        yopf: yopf,\n        Yscr: Yscr,\n        yscr: yscr,\n        YUcy: YUcy,\n        yucy: yucy,\n        yuml: yuml,\n        Yuml: Yuml,\n        Zacute: Zacute,\n        zacute: zacute,\n        Zcaron: Zcaron,\n        zcaron: zcaron,\n        Zcy: Zcy,\n        zcy: zcy,\n        Zdot: Zdot,\n        zdot: zdot,\n        zeetrf: zeetrf,\n        ZeroWidthSpace: ZeroWidthSpace,\n        Zeta: Zeta,\n        zeta: zeta,\n        zfr: zfr,\n        Zfr: Zfr,\n        ZHcy: ZHcy,\n        zhcy: zhcy,\n        zigrarr: zigrarr,\n        zopf: zopf,\n        Zopf: Zopf,\n        Zscr: Zscr,\n        zscr: zscr,\n        zwj: zwj,\n        zwnj: zwnj,\n        'default': entities\n    });\n\n    var Aacute$1 = \"Á\";\n    var aacute$1 = \"á\";\n    var Acirc$1 = \"Â\";\n    var acirc$1 = \"â\";\n    var acute$1 = \"´\";\n    var AElig$1 = \"Æ\";\n    var aelig$1 = \"æ\";\n    var Agrave$1 = \"À\";\n    var agrave$1 = \"à\";\n    var amp$1 = \"&\";\n    var AMP$1 = \"&\";\n    var Aring$1 = \"Å\";\n    var aring$1 = \"å\";\n    var Atilde$1 = \"Ã\";\n    var atilde$1 = \"ã\";\n    var Auml$1 = \"Ä\";\n    var auml$1 = \"ä\";\n    var brvbar$1 = \"¦\";\n    var Ccedil$1 = \"Ç\";\n    var ccedil$1 = \"ç\";\n    var cedil$1 = \"¸\";\n    var cent$1 = \"¢\";\n    var copy$1 = \"©\";\n    var COPY$1 = \"©\";\n    var curren$1 = \"¤\";\n    var deg$1 = \"°\";\n    var divide$1 = \"÷\";\n    var Eacute$1 = \"É\";\n    var eacute$1 = \"é\";\n    var Ecirc$1 = \"Ê\";\n    var ecirc$1 = \"ê\";\n    var Egrave$1 = \"È\";\n    var egrave$1 = \"è\";\n    var ETH$1 = \"Ð\";\n    var eth$1 = \"ð\";\n    var Euml$1 = \"Ë\";\n    var euml$1 = \"ë\";\n    var frac12$1 = \"½\";\n    var frac14$1 = \"¼\";\n    var frac34$1 = \"¾\";\n    var gt$1 = \">\";\n    var GT$1 = \">\";\n    var Iacute$1 = \"Í\";\n    var iacute$1 = \"í\";\n    var Icirc$1 = \"Î\";\n    var icirc$1 = \"î\";\n    var iexcl$1 = \"¡\";\n    var Igrave$1 = \"Ì\";\n    var igrave$1 = \"ì\";\n    var iquest$1 = \"¿\";\n    var Iuml$1 = \"Ï\";\n    var iuml$1 = \"ï\";\n    var laquo$1 = \"«\";\n    var lt$1 = \"<\";\n    var LT$1 = \"<\";\n    var macr$1 = \"¯\";\n    var micro$1 = \"µ\";\n    var middot$1 = \"·\";\n    var nbsp$1 = \" \";\n    var not$1 = \"¬\";\n    var Ntilde$1 = \"Ñ\";\n    var ntilde$1 = \"ñ\";\n    var Oacute$1 = \"Ó\";\n    var oacute$1 = \"ó\";\n    var Ocirc$1 = \"Ô\";\n    var ocirc$1 = \"ô\";\n    var Ograve$1 = \"Ò\";\n    var ograve$1 = \"ò\";\n    var ordf$1 = \"ª\";\n    var ordm$1 = \"º\";\n    var Oslash$1 = \"Ø\";\n    var oslash$1 = \"ø\";\n    var Otilde$1 = \"Õ\";\n    var otilde$1 = \"õ\";\n    var Ouml$1 = \"Ö\";\n    var ouml$1 = \"ö\";\n    var para$1 = \"¶\";\n    var plusmn$1 = \"±\";\n    var pound$1 = \"£\";\n    var quot$1 = \"\\\"\";\n    var QUOT$1 = \"\\\"\";\n    var raquo$1 = \"»\";\n    var reg$1 = \"®\";\n    var REG$1 = \"®\";\n    var sect$1 = \"§\";\n    var shy$1 = \"­\";\n    var sup1$1 = \"¹\";\n    var sup2$1 = \"²\";\n    var sup3$1 = \"³\";\n    var szlig$1 = \"ß\";\n    var THORN$1 = \"Þ\";\n    var thorn$1 = \"þ\";\n    var times$1 = \"×\";\n    var Uacute$1 = \"Ú\";\n    var uacute$1 = \"ú\";\n    var Ucirc$1 = \"Û\";\n    var ucirc$1 = \"û\";\n    var Ugrave$1 = \"Ù\";\n    var ugrave$1 = \"ù\";\n    var uml$1 = \"¨\";\n    var Uuml$1 = \"Ü\";\n    var uuml$1 = \"ü\";\n    var Yacute$1 = \"Ý\";\n    var yacute$1 = \"ý\";\n    var yen$1 = \"¥\";\n    var yuml$1 = \"ÿ\";\n    var legacy = {\n    \tAacute: Aacute$1,\n    \taacute: aacute$1,\n    \tAcirc: Acirc$1,\n    \tacirc: acirc$1,\n    \tacute: acute$1,\n    \tAElig: AElig$1,\n    \taelig: aelig$1,\n    \tAgrave: Agrave$1,\n    \tagrave: agrave$1,\n    \tamp: amp$1,\n    \tAMP: AMP$1,\n    \tAring: Aring$1,\n    \taring: aring$1,\n    \tAtilde: Atilde$1,\n    \tatilde: atilde$1,\n    \tAuml: Auml$1,\n    \tauml: auml$1,\n    \tbrvbar: brvbar$1,\n    \tCcedil: Ccedil$1,\n    \tccedil: ccedil$1,\n    \tcedil: cedil$1,\n    \tcent: cent$1,\n    \tcopy: copy$1,\n    \tCOPY: COPY$1,\n    \tcurren: curren$1,\n    \tdeg: deg$1,\n    \tdivide: divide$1,\n    \tEacute: Eacute$1,\n    \teacute: eacute$1,\n    \tEcirc: Ecirc$1,\n    \tecirc: ecirc$1,\n    \tEgrave: Egrave$1,\n    \tegrave: egrave$1,\n    \tETH: ETH$1,\n    \teth: eth$1,\n    \tEuml: Euml$1,\n    \teuml: euml$1,\n    \tfrac12: frac12$1,\n    \tfrac14: frac14$1,\n    \tfrac34: frac34$1,\n    \tgt: gt$1,\n    \tGT: GT$1,\n    \tIacute: Iacute$1,\n    \tiacute: iacute$1,\n    \tIcirc: Icirc$1,\n    \ticirc: icirc$1,\n    \tiexcl: iexcl$1,\n    \tIgrave: Igrave$1,\n    \tigrave: igrave$1,\n    \tiquest: iquest$1,\n    \tIuml: Iuml$1,\n    \tiuml: iuml$1,\n    \tlaquo: laquo$1,\n    \tlt: lt$1,\n    \tLT: LT$1,\n    \tmacr: macr$1,\n    \tmicro: micro$1,\n    \tmiddot: middot$1,\n    \tnbsp: nbsp$1,\n    \tnot: not$1,\n    \tNtilde: Ntilde$1,\n    \tntilde: ntilde$1,\n    \tOacute: Oacute$1,\n    \toacute: oacute$1,\n    \tOcirc: Ocirc$1,\n    \tocirc: ocirc$1,\n    \tOgrave: Ograve$1,\n    \tograve: ograve$1,\n    \tordf: ordf$1,\n    \tordm: ordm$1,\n    \tOslash: Oslash$1,\n    \toslash: oslash$1,\n    \tOtilde: Otilde$1,\n    \totilde: otilde$1,\n    \tOuml: Ouml$1,\n    \touml: ouml$1,\n    \tpara: para$1,\n    \tplusmn: plusmn$1,\n    \tpound: pound$1,\n    \tquot: quot$1,\n    \tQUOT: QUOT$1,\n    \traquo: raquo$1,\n    \treg: reg$1,\n    \tREG: REG$1,\n    \tsect: sect$1,\n    \tshy: shy$1,\n    \tsup1: sup1$1,\n    \tsup2: sup2$1,\n    \tsup3: sup3$1,\n    \tszlig: szlig$1,\n    \tTHORN: THORN$1,\n    \tthorn: thorn$1,\n    \ttimes: times$1,\n    \tUacute: Uacute$1,\n    \tuacute: uacute$1,\n    \tUcirc: Ucirc$1,\n    \tucirc: ucirc$1,\n    \tUgrave: Ugrave$1,\n    \tugrave: ugrave$1,\n    \tuml: uml$1,\n    \tUuml: Uuml$1,\n    \tuuml: uuml$1,\n    \tYacute: Yacute$1,\n    \tyacute: yacute$1,\n    \tyen: yen$1,\n    \tyuml: yuml$1\n    };\n\n    var legacy$1 = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        Aacute: Aacute$1,\n        aacute: aacute$1,\n        Acirc: Acirc$1,\n        acirc: acirc$1,\n        acute: acute$1,\n        AElig: AElig$1,\n        aelig: aelig$1,\n        Agrave: Agrave$1,\n        agrave: agrave$1,\n        amp: amp$1,\n        AMP: AMP$1,\n        Aring: Aring$1,\n        aring: aring$1,\n        Atilde: Atilde$1,\n        atilde: atilde$1,\n        Auml: Auml$1,\n        auml: auml$1,\n        brvbar: brvbar$1,\n        Ccedil: Ccedil$1,\n        ccedil: ccedil$1,\n        cedil: cedil$1,\n        cent: cent$1,\n        copy: copy$1,\n        COPY: COPY$1,\n        curren: curren$1,\n        deg: deg$1,\n        divide: divide$1,\n        Eacute: Eacute$1,\n        eacute: eacute$1,\n        Ecirc: Ecirc$1,\n        ecirc: ecirc$1,\n        Egrave: Egrave$1,\n        egrave: egrave$1,\n        ETH: ETH$1,\n        eth: eth$1,\n        Euml: Euml$1,\n        euml: euml$1,\n        frac12: frac12$1,\n        frac14: frac14$1,\n        frac34: frac34$1,\n        gt: gt$1,\n        GT: GT$1,\n        Iacute: Iacute$1,\n        iacute: iacute$1,\n        Icirc: Icirc$1,\n        icirc: icirc$1,\n        iexcl: iexcl$1,\n        Igrave: Igrave$1,\n        igrave: igrave$1,\n        iquest: iquest$1,\n        Iuml: Iuml$1,\n        iuml: iuml$1,\n        laquo: laquo$1,\n        lt: lt$1,\n        LT: LT$1,\n        macr: macr$1,\n        micro: micro$1,\n        middot: middot$1,\n        nbsp: nbsp$1,\n        not: not$1,\n        Ntilde: Ntilde$1,\n        ntilde: ntilde$1,\n        Oacute: Oacute$1,\n        oacute: oacute$1,\n        Ocirc: Ocirc$1,\n        ocirc: ocirc$1,\n        Ograve: Ograve$1,\n        ograve: ograve$1,\n        ordf: ordf$1,\n        ordm: ordm$1,\n        Oslash: Oslash$1,\n        oslash: oslash$1,\n        Otilde: Otilde$1,\n        otilde: otilde$1,\n        Ouml: Ouml$1,\n        ouml: ouml$1,\n        para: para$1,\n        plusmn: plusmn$1,\n        pound: pound$1,\n        quot: quot$1,\n        QUOT: QUOT$1,\n        raquo: raquo$1,\n        reg: reg$1,\n        REG: REG$1,\n        sect: sect$1,\n        shy: shy$1,\n        sup1: sup1$1,\n        sup2: sup2$1,\n        sup3: sup3$1,\n        szlig: szlig$1,\n        THORN: THORN$1,\n        thorn: thorn$1,\n        times: times$1,\n        Uacute: Uacute$1,\n        uacute: uacute$1,\n        Ucirc: Ucirc$1,\n        ucirc: ucirc$1,\n        Ugrave: Ugrave$1,\n        ugrave: ugrave$1,\n        uml: uml$1,\n        Uuml: Uuml$1,\n        uuml: uuml$1,\n        Yacute: Yacute$1,\n        yacute: yacute$1,\n        yen: yen$1,\n        yuml: yuml$1,\n        'default': legacy\n    });\n\n    var amp$2 = \"&\";\n    var apos$1 = \"'\";\n    var gt$2 = \">\";\n    var lt$2 = \"<\";\n    var quot$2 = \"\\\"\";\n    var xml = {\n    \tamp: amp$2,\n    \tapos: apos$1,\n    \tgt: gt$2,\n    \tlt: lt$2,\n    \tquot: quot$2\n    };\n\n    var xml$1 = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        amp: amp$2,\n        apos: apos$1,\n        gt: gt$2,\n        lt: lt$2,\n        quot: quot$2,\n        'default': xml\n    });\n\n    var decode = {\n    \t\"0\": 65533,\n    \t\"128\": 8364,\n    \t\"130\": 8218,\n    \t\"131\": 402,\n    \t\"132\": 8222,\n    \t\"133\": 8230,\n    \t\"134\": 8224,\n    \t\"135\": 8225,\n    \t\"136\": 710,\n    \t\"137\": 8240,\n    \t\"138\": 352,\n    \t\"139\": 8249,\n    \t\"140\": 338,\n    \t\"142\": 381,\n    \t\"145\": 8216,\n    \t\"146\": 8217,\n    \t\"147\": 8220,\n    \t\"148\": 8221,\n    \t\"149\": 8226,\n    \t\"150\": 8211,\n    \t\"151\": 8212,\n    \t\"152\": 732,\n    \t\"153\": 8482,\n    \t\"154\": 353,\n    \t\"155\": 8250,\n    \t\"156\": 339,\n    \t\"158\": 382,\n    \t\"159\": 376\n    };\n\n    var decode$1 = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        'default': decode\n    });\n\n    var require$$0 = getCjsExportFromNamespace(decode$1);\n\n    var decode_codepoint = createCommonjsModule(function (module, exports) {\n    var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var decode_json_1 = __importDefault(require$$0);\n    // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n    function decodeCodePoint(codePoint) {\n        if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n            return \"\\uFFFD\";\n        }\n        if (codePoint in decode_json_1.default) {\n            // @ts-ignore\n            codePoint = decode_json_1.default[codePoint];\n        }\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    }\n    exports.default = decodeCodePoint;\n    });\n\n    unwrapExports(decode_codepoint);\n\n    var require$$1 = getCjsExportFromNamespace(entities$1);\n\n    var require$$1$1 = getCjsExportFromNamespace(legacy$1);\n\n    var require$$0$1 = getCjsExportFromNamespace(xml$1);\n\n    var decode$2 = createCommonjsModule(function (module, exports) {\n    var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var entities_json_1 = __importDefault(require$$1);\n    var legacy_json_1 = __importDefault(require$$1$1);\n    var xml_json_1 = __importDefault(require$$0$1);\n    var decode_codepoint_1 = __importDefault(decode_codepoint);\n    exports.decodeXML = getStrictDecoder(xml_json_1.default);\n    exports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\n    function getStrictDecoder(map) {\n        var keys = Object.keys(map).join(\"|\");\n        var replace = getReplacer(map);\n        keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n        var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n        return function (str) { return String(str).replace(re, replace); };\n    }\n    var sorter = function (a, b) { return (a < b ? 1 : -1); };\n    exports.decodeHTML = (function () {\n        var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n        var keys = Object.keys(entities_json_1.default).sort(sorter);\n        for (var i = 0, j = 0; i < keys.length; i++) {\n            if (legacy[j] === keys[i]) {\n                keys[i] += \";?\";\n                j++;\n            }\n            else {\n                keys[i] += \";\";\n            }\n        }\n        var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n        var replace = getReplacer(entities_json_1.default);\n        function replacer(str) {\n            if (str.substr(-1) !== \";\")\n                str += \";\";\n            return replace(str);\n        }\n        //TODO consider creating a merged map\n        return function (str) {\n            return String(str).replace(re, replacer);\n        };\n    })();\n    function getReplacer(map) {\n        return function replace(str) {\n            if (str.charAt(1) === \"#\") {\n                if (str.charAt(2) === \"X\" || str.charAt(2) === \"x\") {\n                    return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n                }\n                return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n            }\n            return map[str.slice(1, -1)];\n        };\n    }\n    });\n\n    unwrapExports(decode$2);\n    var decode_1 = decode$2.decodeXML;\n    var decode_2 = decode$2.decodeHTMLStrict;\n    var decode_3 = decode$2.decodeHTML;\n\n    var encode$1 = createCommonjsModule(function (module, exports) {\n    var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var xml_json_1 = __importDefault(require$$0$1);\n    var inverseXML = getInverseObj(xml_json_1.default);\n    var xmlReplacer = getInverseReplacer(inverseXML);\n    exports.encodeXML = getInverse(inverseXML, xmlReplacer);\n    var entities_json_1 = __importDefault(require$$1);\n    var inverseHTML = getInverseObj(entities_json_1.default);\n    var htmlReplacer = getInverseReplacer(inverseHTML);\n    exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n    function getInverseObj(obj) {\n        return Object.keys(obj)\n            .sort()\n            .reduce(function (inverse, name) {\n            inverse[obj[name]] = \"&\" + name + \";\";\n            return inverse;\n        }, {});\n    }\n    function getInverseReplacer(inverse) {\n        var single = [];\n        var multiple = [];\n        Object.keys(inverse).forEach(function (k) {\n            return k.length === 1\n                ? // Add value to single array\n                    single.push(\"\\\\\" + k)\n                : // Add value to multiple array\n                    multiple.push(k);\n        });\n        //TODO add ranges\n        multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n        return new RegExp(multiple.join(\"|\"), \"g\");\n    }\n    var reNonASCII = /[^\\0-\\x7F]/g;\n    var reAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    function singleCharReplacer(c) {\n        return \"&#x\" + c\n            .charCodeAt(0)\n            .toString(16)\n            .toUpperCase() + \";\";\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n    function astralReplacer(c, _) {\n        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        var high = c.charCodeAt(0);\n        var low = c.charCodeAt(1);\n        var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n        return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n    }\n    function getInverse(inverse, re) {\n        return function (data) {\n            return data\n                .replace(re, function (name) { return inverse[name]; })\n                .replace(reAstralSymbols, astralReplacer)\n                .replace(reNonASCII, singleCharReplacer);\n        };\n    }\n    var reXmlChars = getInverseReplacer(inverseXML);\n    function escape(data) {\n        return data\n            .replace(reXmlChars, singleCharReplacer)\n            .replace(reAstralSymbols, astralReplacer)\n            .replace(reNonASCII, singleCharReplacer);\n    }\n    exports.escape = escape;\n    });\n\n    unwrapExports(encode$1);\n    var encode_1$1 = encode$1.encodeXML;\n    var encode_2 = encode$1.encodeHTML;\n    var encode_3 = encode$1.escape;\n\n    var lib = createCommonjsModule(function (module, exports) {\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n\n\n    function decode(data, level) {\n        return (!level || level <= 0 ? decode$2.decodeXML : decode$2.decodeHTML)(data);\n    }\n    exports.decode = decode;\n    function decodeStrict(data, level) {\n        return (!level || level <= 0 ? decode$2.decodeXML : decode$2.decodeHTMLStrict)(data);\n    }\n    exports.decodeStrict = decodeStrict;\n    function encode(data, level) {\n        return (!level || level <= 0 ? encode$1.encodeXML : encode$1.encodeHTML)(data);\n    }\n    exports.encode = encode;\n    var encode_2 = encode$1;\n    exports.encodeXML = encode_2.encodeXML;\n    exports.encodeHTML = encode_2.encodeHTML;\n    exports.escape = encode_2.escape;\n    // Legacy aliases\n    exports.encodeHTML4 = encode_2.encodeHTML;\n    exports.encodeHTML5 = encode_2.encodeHTML;\n    var decode_2 = decode$2;\n    exports.decodeXML = decode_2.decodeXML;\n    exports.decodeHTML = decode_2.decodeHTML;\n    exports.decodeHTMLStrict = decode_2.decodeHTMLStrict;\n    // Legacy aliases\n    exports.decodeHTML4 = decode_2.decodeHTML;\n    exports.decodeHTML5 = decode_2.decodeHTML;\n    exports.decodeHTML4Strict = decode_2.decodeHTMLStrict;\n    exports.decodeHTML5Strict = decode_2.decodeHTMLStrict;\n    exports.decodeXMLStrict = decode_2.decodeXML;\n    });\n\n    unwrapExports(lib);\n    var lib_1 = lib.decode;\n    var lib_2 = lib.decodeStrict;\n    var lib_3 = lib.encode;\n    var lib_4 = lib.encodeXML;\n    var lib_5 = lib.encodeHTML;\n    var lib_6 = lib.escape;\n    var lib_7 = lib.encodeHTML4;\n    var lib_8 = lib.encodeHTML5;\n    var lib_9 = lib.decodeXML;\n    var lib_10 = lib.decodeHTML;\n    var lib_11 = lib.decodeHTMLStrict;\n    var lib_12 = lib.decodeHTML4;\n    var lib_13 = lib.decodeHTML5;\n    var lib_14 = lib.decodeHTML4Strict;\n    var lib_15 = lib.decodeHTML5Strict;\n    var lib_16 = lib.decodeXMLStrict;\n\n    var C_BACKSLASH = 92;\n\n    var ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\n    var TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\n    var ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\n    var UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\n    var SINGLEQUOTEDVALUE = \"'[^']*'\";\n    var DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\n    var ATTRIBUTEVALUE =\n        \"(?:\" +\n        UNQUOTEDVALUE +\n        \"|\" +\n        SINGLEQUOTEDVALUE +\n        \"|\" +\n        DOUBLEQUOTEDVALUE +\n        \")\";\n    var ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\n    var ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\n    var OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\n    var CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\n    var HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\n    var PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\n    var DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\n    var CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\n    var HTMLTAG =\n        \"(?:\" +\n        OPENTAG +\n        \"|\" +\n        CLOSETAG +\n        \"|\" +\n        HTMLCOMMENT +\n        \"|\" +\n        PROCESSINGINSTRUCTION +\n        \"|\" +\n        DECLARATION +\n        \"|\" +\n        CDATA +\n        \")\";\n    var reHtmlTag = new RegExp(\"^\" + HTMLTAG);\n\n    var reBackslashOrAmp = /[\\\\&]/;\n\n    var ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\n\n    var reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\n\n    var XMLSPECIAL = '[&<>\"]';\n\n    var reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\n    var unescapeChar = function(s) {\n        if (s.charCodeAt(0) === C_BACKSLASH) {\n            return s.charAt(1);\n        } else {\n            return lib_10(s);\n        }\n    };\n\n    // Replace entities and backslash escapes with literal characters.\n    var unescapeString = function(s) {\n        if (reBackslashOrAmp.test(s)) {\n            return s.replace(reEntityOrEscapedChar, unescapeChar);\n        } else {\n            return s;\n        }\n    };\n\n    var normalizeURI = function(uri) {\n        try {\n            return encode_1(uri);\n        } catch (err) {\n            return uri;\n        }\n    };\n\n    var replaceUnsafeChar = function(s) {\n        switch (s) {\n            case \"&\":\n                return \"&amp;\";\n            case \"<\":\n                return \"&lt;\";\n            case \">\":\n                return \"&gt;\";\n            case '\"':\n                return \"&quot;\";\n            default:\n                return s;\n        }\n    };\n\n    var escapeXml = function(s) {\n        if (reXmlSpecial.test(s)) {\n            return s.replace(reXmlSpecial, replaceUnsafeChar);\n        } else {\n            return s;\n        }\n    };\n\n    // derived from https://github.com/mathiasbynens/String.fromCodePoint\n    /*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\n    var _fromCodePoint;\n\n    function fromCodePoint(_) {\n        return _fromCodePoint(_);\n    }\n\n    if (String.fromCodePoint) {\n        _fromCodePoint = function(_) {\n            try {\n                return String.fromCodePoint(_);\n            } catch (e) {\n                if (e instanceof RangeError) {\n                    return String.fromCharCode(0xfffd);\n                }\n                throw e;\n            }\n        };\n    } else {\n        var stringFromCharCode = String.fromCharCode;\n        var floor = Math.floor;\n        _fromCodePoint = function() {\n            var MAX_SIZE = 0x4000;\n            var codeUnits = [];\n            var highSurrogate;\n            var lowSurrogate;\n            var index = -1;\n            var length = arguments.length;\n            if (!length) {\n                return \"\";\n            }\n            var result = \"\";\n            while (++index < length) {\n                var codePoint = Number(arguments[index]);\n                if (\n                    !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                    codePoint < 0 || // not a valid Unicode code point\n                    codePoint > 0x10ffff || // not a valid Unicode code point\n                    floor(codePoint) !== codePoint // not an integer\n                ) {\n                    return String.fromCharCode(0xfffd);\n                }\n                if (codePoint <= 0xffff) {\n                    // BMP code point\n                    codeUnits.push(codePoint);\n                } else {\n                    // Astral code point; split in surrogate halves\n                    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                    codePoint -= 0x10000;\n                    highSurrogate = (codePoint >> 10) + 0xd800;\n                    lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                    codeUnits.push(highSurrogate, lowSurrogate);\n                }\n                if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                    result += stringFromCharCode.apply(null, codeUnits);\n                    codeUnits.length = 0;\n                }\n            }\n            return result;\n        };\n    }\n\n    /*! http://mths.be/repeat v0.2.0 by @mathias */\n    if (!String.prototype.repeat) {\n    \t(function() {\n    \t\tvar defineProperty = (function() {\n    \t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n    \t\t\ttry {\n    \t\t\t\tvar object = {};\n    \t\t\t\tvar $defineProperty = Object.defineProperty;\n    \t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n    \t\t\t} catch(error) {}\n    \t\t\treturn result;\n    \t\t}());\n    \t\tvar repeat = function(count) {\n    \t\t\tif (this == null) {\n    \t\t\t\tthrow TypeError();\n    \t\t\t}\n    \t\t\tvar string = String(this);\n    \t\t\t// `ToInteger`\n    \t\t\tvar n = count ? Number(count) : 0;\n    \t\t\tif (n != n) { // better `isNaN`\n    \t\t\t\tn = 0;\n    \t\t\t}\n    \t\t\t// Account for out-of-bounds indices\n    \t\t\tif (n < 0 || n == Infinity) {\n    \t\t\t\tthrow RangeError();\n    \t\t\t}\n    \t\t\tvar result = '';\n    \t\t\twhile (n) {\n    \t\t\t\tif (n % 2 == 1) {\n    \t\t\t\t\tresult += string;\n    \t\t\t\t}\n    \t\t\t\tif (n > 1) {\n    \t\t\t\t\tstring += string;\n    \t\t\t\t}\n    \t\t\t\tn >>= 1;\n    \t\t\t}\n    \t\t\treturn result;\n    \t\t};\n    \t\tif (defineProperty) {\n    \t\t\tdefineProperty(String.prototype, 'repeat', {\n    \t\t\t\t'value': repeat,\n    \t\t\t\t'configurable': true,\n    \t\t\t\t'writable': true\n    \t\t\t});\n    \t\t} else {\n    \t\t\tString.prototype.repeat = repeat;\n    \t\t}\n    \t}());\n    }\n\n    var normalizeURI$1 = normalizeURI;\n    var unescapeString$1 = unescapeString;\n\n    // Constants for character codes:\n\n    var C_NEWLINE = 10;\n    var C_ASTERISK = 42;\n    var C_UNDERSCORE = 95;\n    var C_BACKTICK = 96;\n    var C_OPEN_BRACKET = 91;\n    var C_CLOSE_BRACKET = 93;\n    var C_LESSTHAN = 60;\n    var C_BANG = 33;\n    var C_BACKSLASH$1 = 92;\n    var C_AMPERSAND = 38;\n    var C_OPEN_PAREN = 40;\n    var C_CLOSE_PAREN = 41;\n    var C_COLON = 58;\n    var C_SINGLEQUOTE = 39;\n    var C_DOUBLEQUOTE = 34;\n\n    // Some regexps used in inline parser:\n\n    var ESCAPABLE$1 = ESCAPABLE;\n    var ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE$1;\n\n    var ENTITY$1 = ENTITY;\n    var reHtmlTag$1 = reHtmlTag;\n\n    var rePunctuation = new RegExp(\n        /[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n    );\n\n    var reLinkTitle = new RegExp(\n        '^(?:\"(' +\n            ESCAPED_CHAR +\n            '|[^\"\\\\x00])*\"' +\n            \"|\" +\n            \"'(\" +\n            ESCAPED_CHAR +\n            \"|[^'\\\\x00])*'\" +\n            \"|\" +\n            \"\\\\((\" +\n            ESCAPED_CHAR +\n            \"|[^()\\\\x00])*\\\\))\"\n    );\n\n    var reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\n    var reEscapable = new RegExp(\"^\" + ESCAPABLE$1);\n\n    var reEntityHere = new RegExp(\"^\" + ENTITY$1, \"i\");\n\n    var reTicks = /`+/;\n\n    var reTicksHere = /^`+/;\n\n    var reEllipses = /\\.\\.\\./g;\n\n    var reDash = /--+/g;\n\n    var reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\n    var reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\n    var reSpnl = /^ *(?:\\n *)?/;\n\n    var reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\n    var reUnicodeWhitespaceChar = /^\\s/;\n\n    var reFinalSpace = / *$/;\n\n    var reInitialSpace = /^ */;\n\n    var reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\n    var reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n    // Matches a string of non-special characters.\n    var reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\n    var text = function(s) {\n        var node = new Node(\"text\");\n        node._literal = s;\n        return node;\n    };\n\n    // normalize a reference in reference link (remove []s, trim,\n    // collapse internal space, unicode case fold.\n    // See commonmark/commonmark.js#168.\n    var normalizeReference = function(string) {\n        return string\n            .slice(1, string.length - 1)\n            .trim()\n            .replace(/[ \\t\\r\\n]+/, \" \")\n            .toLowerCase()\n            .toUpperCase();\n    };\n\n    // INLINE PARSER\n\n    // These are methods of an InlineParser object, defined below.\n    // An InlineParser keeps track of a subject (a string to be\n    // parsed) and a position in that subject.\n\n    // If re matches at current position in the subject, advance\n    // position in subject and return the match; otherwise return null.\n    var match = function(re) {\n        var m = re.exec(this.subject.slice(this.pos));\n        if (m === null) {\n            return null;\n        } else {\n            this.pos += m.index + m[0].length;\n            return m[0];\n        }\n    };\n\n    // Returns the code for the character at the current subject position, or -1\n    // there are no more characters.\n    var peek = function() {\n        if (this.pos < this.subject.length) {\n            return this.subject.charCodeAt(this.pos);\n        } else {\n            return -1;\n        }\n    };\n\n    // Parse zero or more space characters, including at most one newline\n    var spnl = function() {\n        this.match(reSpnl);\n        return true;\n    };\n\n    // All of the parsers below try to match something at the current position\n    // in the subject.  If they succeed in matching anything, they\n    // return the inline matched, advancing the subject.\n\n    // Attempt to parse backticks, adding either a backtick code span or a\n    // literal sequence of backticks.\n    var parseBackticks = function(block) {\n        var ticks = this.match(reTicksHere);\n        if (ticks === null) {\n            return false;\n        }\n        var afterOpenTicks = this.pos;\n        var matched;\n        var node;\n        var contents;\n        while ((matched = this.match(reTicks)) !== null) {\n            if (matched === ticks) {\n                node = new Node(\"code\");\n                contents = this.subject\n                    .slice(afterOpenTicks, this.pos - ticks.length)\n                    .replace(/\\n/gm, \" \");\n                if (\n                    contents.length > 0 &&\n                    contents.match(/[^ ]/) !== null &&\n                    contents[0] == \" \" &&\n                    contents[contents.length - 1] == \" \"\n                ) {\n                    node._literal = contents.slice(1, contents.length - 1);\n                } else {\n                    node._literal = contents;\n                }\n                block.appendChild(node);\n                return true;\n            }\n        }\n        // If we got here, we didn't match a closing backtick sequence.\n        this.pos = afterOpenTicks;\n        block.appendChild(text(ticks));\n        return true;\n    };\n\n    // Parse a backslash-escaped special character, adding either the escaped\n    // character, a hard line break (if the backslash is followed by a newline),\n    // or a literal backslash to the block's children.  Assumes current character\n    // is a backslash.\n    var parseBackslash = function(block) {\n        var subj = this.subject;\n        var node;\n        this.pos += 1;\n        if (this.peek() === C_NEWLINE) {\n            this.pos += 1;\n            node = new Node(\"linebreak\");\n            block.appendChild(node);\n        } else if (reEscapable.test(subj.charAt(this.pos))) {\n            block.appendChild(text(subj.charAt(this.pos)));\n            this.pos += 1;\n        } else {\n            block.appendChild(text(\"\\\\\"));\n        }\n        return true;\n    };\n\n    // Attempt to parse an autolink (URL or email in pointy brackets).\n    var parseAutolink = function(block) {\n        var m;\n        var dest;\n        var node;\n        if ((m = this.match(reEmailAutolink))) {\n            dest = m.slice(1, m.length - 1);\n            node = new Node(\"link\");\n            node._destination = normalizeURI$1(\"mailto:\" + dest);\n            node._title = \"\";\n            node.appendChild(text(dest));\n            block.appendChild(node);\n            return true;\n        } else if ((m = this.match(reAutolink))) {\n            dest = m.slice(1, m.length - 1);\n            node = new Node(\"link\");\n            node._destination = normalizeURI$1(dest);\n            node._title = \"\";\n            node.appendChild(text(dest));\n            block.appendChild(node);\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // Attempt to parse a raw HTML tag.\n    var parseHtmlTag = function(block) {\n        var m = this.match(reHtmlTag$1);\n        if (m === null) {\n            return false;\n        } else {\n            var node = new Node(\"html_inline\");\n            node._literal = m;\n            block.appendChild(node);\n            return true;\n        }\n    };\n\n    // Scan a sequence of characters with code cc, and return information about\n    // the number of delimiters and whether they are positioned such that\n    // they can open and/or close emphasis or strong emphasis.  A utility\n    // function for strong/emph parsing.\n    var scanDelims = function(cc) {\n        var numdelims = 0;\n        var char_before, char_after, cc_after;\n        var startpos = this.pos;\n        var left_flanking, right_flanking, can_open, can_close;\n        var after_is_whitespace,\n            after_is_punctuation,\n            before_is_whitespace,\n            before_is_punctuation;\n\n        if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n            numdelims++;\n            this.pos++;\n        } else {\n            while (this.peek() === cc) {\n                numdelims++;\n                this.pos++;\n            }\n        }\n\n        if (numdelims === 0) {\n            return null;\n        }\n\n        char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n\n        cc_after = this.peek();\n        if (cc_after === -1) {\n            char_after = \"\\n\";\n        } else {\n            char_after = fromCodePoint(cc_after);\n        }\n\n        after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n        after_is_punctuation = rePunctuation.test(char_after);\n        before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n        before_is_punctuation = rePunctuation.test(char_before);\n\n        left_flanking =\n            !after_is_whitespace &&\n            (!after_is_punctuation ||\n                before_is_whitespace ||\n                before_is_punctuation);\n        right_flanking =\n            !before_is_whitespace &&\n            (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n        if (cc === C_UNDERSCORE) {\n            can_open = left_flanking && (!right_flanking || before_is_punctuation);\n            can_close = right_flanking && (!left_flanking || after_is_punctuation);\n        } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n            can_open = left_flanking && !right_flanking;\n            can_close = right_flanking;\n        } else {\n            can_open = left_flanking;\n            can_close = right_flanking;\n        }\n        this.pos = startpos;\n        return { numdelims: numdelims, can_open: can_open, can_close: can_close };\n    };\n\n    // Handle a delimiter marker for emphasis or a quote.\n    var handleDelim = function(cc, block) {\n        var res = this.scanDelims(cc);\n        if (!res) {\n            return false;\n        }\n        var numdelims = res.numdelims;\n        var startpos = this.pos;\n        var contents;\n\n        this.pos += numdelims;\n        if (cc === C_SINGLEQUOTE) {\n            contents = \"\\u2019\";\n        } else if (cc === C_DOUBLEQUOTE) {\n            contents = \"\\u201C\";\n        } else {\n            contents = this.subject.slice(startpos, this.pos);\n        }\n        var node = text(contents);\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        if (\n            (res.can_open || res.can_close) &&\n            (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))\n        ) {\n            this.delimiters = {\n                cc: cc,\n                numdelims: numdelims,\n                origdelims: numdelims,\n                node: node,\n                previous: this.delimiters,\n                next: null,\n                can_open: res.can_open,\n                can_close: res.can_close\n            };\n            if (this.delimiters.previous !== null) {\n                this.delimiters.previous.next = this.delimiters;\n            }\n        }\n\n        return true;\n    };\n\n    var removeDelimiter = function(delim) {\n        if (delim.previous !== null) {\n            delim.previous.next = delim.next;\n        }\n        if (delim.next === null) {\n            // top of stack\n            this.delimiters = delim.previous;\n        } else {\n            delim.next.previous = delim.previous;\n        }\n    };\n\n    var removeDelimitersBetween = function(bottom, top) {\n        if (bottom.next !== top) {\n            bottom.next = top;\n            top.previous = bottom;\n        }\n    };\n\n    var processEmphasis = function(stack_bottom) {\n        var opener, closer, old_closer;\n        var opener_inl, closer_inl;\n        var tempstack;\n        var use_delims;\n        var tmp, next;\n        var opener_found;\n        var openers_bottom = [[], [], []];\n        var odd_match = false;\n\n        for (var i = 0; i < 3; i++) {\n            openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n            openers_bottom[i][C_ASTERISK] = stack_bottom;\n            openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n            openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n        }\n        // find first closer above stack_bottom:\n        closer = this.delimiters;\n        while (closer !== null && closer.previous !== stack_bottom) {\n            closer = closer.previous;\n        }\n        // move forward, looking for closers, and handling each\n        while (closer !== null) {\n            var closercc = closer.cc;\n            if (!closer.can_close) {\n                closer = closer.next;\n            } else {\n                // found emphasis closer. now look back for first matching opener:\n                opener = closer.previous;\n                opener_found = false;\n                while (\n                    opener !== null &&\n                    opener !== stack_bottom &&\n                    opener !== openers_bottom[closer.origdelims % 3][closercc]\n                ) {\n                    odd_match =\n                        (closer.can_open || opener.can_close) &&\n                        closer.origdelims % 3 !== 0 &&\n                        (opener.origdelims + closer.origdelims) % 3 === 0;\n                    if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                        opener_found = true;\n                        break;\n                    }\n                    opener = opener.previous;\n                }\n                old_closer = closer;\n\n                if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                    if (!opener_found) {\n                        closer = closer.next;\n                    } else {\n                        // calculate actual number of delimiters used from closer\n                        use_delims =\n                            closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n\n                        opener_inl = opener.node;\n                        closer_inl = closer.node;\n\n                        // remove used delimiters from stack elts and inlines\n                        opener.numdelims -= use_delims;\n                        closer.numdelims -= use_delims;\n                        opener_inl._literal = opener_inl._literal.slice(\n                            0,\n                            opener_inl._literal.length - use_delims\n                        );\n                        closer_inl._literal = closer_inl._literal.slice(\n                            0,\n                            closer_inl._literal.length - use_delims\n                        );\n\n                        // build contents for new emph element\n                        var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n\n                        tmp = opener_inl._next;\n                        while (tmp && tmp !== closer_inl) {\n                            next = tmp._next;\n                            tmp.unlink();\n                            emph.appendChild(tmp);\n                            tmp = next;\n                        }\n\n                        opener_inl.insertAfter(emph);\n\n                        // remove elts between opener and closer in delimiters stack\n                        removeDelimitersBetween(opener, closer);\n\n                        // if opener has 0 delims, remove it and the inline\n                        if (opener.numdelims === 0) {\n                            opener_inl.unlink();\n                            this.removeDelimiter(opener);\n                        }\n\n                        if (closer.numdelims === 0) {\n                            closer_inl.unlink();\n                            tempstack = closer.next;\n                            this.removeDelimiter(closer);\n                            closer = tempstack;\n                        }\n                    }\n                } else if (closercc === C_SINGLEQUOTE) {\n                    closer.node._literal = \"\\u2019\";\n                    if (opener_found) {\n                        opener.node._literal = \"\\u2018\";\n                    }\n                    closer = closer.next;\n                } else if (closercc === C_DOUBLEQUOTE) {\n                    closer.node._literal = \"\\u201D\";\n                    if (opener_found) {\n                        opener.node.literal = \"\\u201C\";\n                    }\n                    closer = closer.next;\n                }\n                if (!opener_found) {\n                    // Set lower bound for future searches for openers:\n                    openers_bottom[old_closer.origdelims % 3][closercc] =\n                        old_closer.previous;\n                    if (!old_closer.can_open) {\n                        // We can remove a closer that can't be an opener,\n                        // once we've seen there's no matching opener:\n                        this.removeDelimiter(old_closer);\n                    }\n                }\n            }\n        }\n\n        // remove all delimiters\n        while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n            this.removeDelimiter(this.delimiters);\n        }\n    };\n\n    // Attempt to parse link title (sans quotes), returning the string\n    // or null if no match.\n    var parseLinkTitle = function() {\n        var title = this.match(reLinkTitle);\n        if (title === null) {\n            return null;\n        } else {\n            // chop off quotes from title and unescape:\n            return unescapeString$1(title.substr(1, title.length - 2));\n        }\n    };\n\n    // Attempt to parse link destination, returning the string or\n    // null if no match.\n    var parseLinkDestination = function() {\n        var res = this.match(reLinkDestinationBraces);\n        if (res === null) {\n            if (this.peek() === C_LESSTHAN) {\n                return null;\n            }\n            // TODO handrolled parser; res should be null or the string\n            var savepos = this.pos;\n            var openparens = 0;\n            var c;\n            while ((c = this.peek()) !== -1) {\n                if (\n                    c === C_BACKSLASH$1 &&\n                    reEscapable.test(this.subject.charAt(this.pos + 1))\n                ) {\n                    this.pos += 1;\n                    if (this.peek() !== -1) {\n                        this.pos += 1;\n                    }\n                } else if (c === C_OPEN_PAREN) {\n                    this.pos += 1;\n                    openparens += 1;\n                } else if (c === C_CLOSE_PAREN) {\n                    if (openparens < 1) {\n                        break;\n                    } else {\n                        this.pos += 1;\n                        openparens -= 1;\n                    }\n                } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                    break;\n                } else {\n                    this.pos += 1;\n                }\n            }\n            if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n                return null;\n            }\n            if (openparens !== 0) {\n                return null;\n            }\n            res = this.subject.substr(savepos, this.pos - savepos);\n            return normalizeURI$1(unescapeString$1(res));\n        } else {\n            // chop off surrounding <..>:\n            return normalizeURI$1(unescapeString$1(res.substr(1, res.length - 2)));\n        }\n    };\n\n    // Attempt to parse a link label, returning number of characters parsed.\n    var parseLinkLabel = function() {\n        var m = this.match(reLinkLabel);\n        if (m === null || m.length > 1001) {\n            return 0;\n        } else {\n            return m.length;\n        }\n    };\n\n    // Add open bracket to delimiter stack and add a text node to block's children.\n    var parseOpenBracket = function(block) {\n        var startpos = this.pos;\n        this.pos += 1;\n\n        var node = text(\"[\");\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos, false);\n        return true;\n    };\n\n    // IF next character is [, and ! delimiter to delimiter stack and\n    // add a text node to block's children.  Otherwise just add a text node.\n    var parseBang = function(block) {\n        var startpos = this.pos;\n        this.pos += 1;\n        if (this.peek() === C_OPEN_BRACKET) {\n            this.pos += 1;\n\n            var node = text(\"![\");\n            block.appendChild(node);\n\n            // Add entry to stack for this opener\n            this.addBracket(node, startpos + 1, true);\n        } else {\n            block.appendChild(text(\"!\"));\n        }\n        return true;\n    };\n\n    // Try to match close bracket against an opening in the delimiter\n    // stack.  Add either a link or image, or a plain [ character,\n    // to block's children.  If there is a matching delimiter,\n    // remove it from the delimiter stack.\n    var parseCloseBracket = function(block) {\n        var startpos;\n        var is_image;\n        var dest;\n        var title;\n        var matched = false;\n        var reflabel;\n        var opener;\n\n        this.pos += 1;\n        startpos = this.pos;\n\n        // get last [ or ![\n        opener = this.brackets;\n\n        if (opener === null) {\n            // no matched opener, just return a literal\n            block.appendChild(text(\"]\"));\n            return true;\n        }\n\n        if (!opener.active) {\n            // no matched opener, just return a literal\n            block.appendChild(text(\"]\"));\n            // take opener off brackets stack\n            this.removeBracket();\n            return true;\n        }\n\n        // If we got here, open is a potential opener\n        is_image = opener.image;\n\n        // Check to see if we have a link/image\n\n        var savepos = this.pos;\n\n        // Inline link?\n        if (this.peek() === C_OPEN_PAREN) {\n            this.pos++;\n            if (\n                this.spnl() &&\n                (dest = this.parseLinkDestination()) !== null &&\n                this.spnl() &&\n                // make sure there's a space before the title:\n                ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                    (title = this.parseLinkTitle())) ||\n                    true) &&\n                this.spnl() &&\n                this.peek() === C_CLOSE_PAREN\n            ) {\n                this.pos += 1;\n                matched = true;\n            } else {\n                this.pos = savepos;\n            }\n        }\n\n        if (!matched) {\n            // Next, see if there's a link label\n            var beforelabel = this.pos;\n            var n = this.parseLinkLabel();\n            if (n > 2) {\n                reflabel = this.subject.slice(beforelabel, beforelabel + n);\n            } else if (!opener.bracketAfter) {\n                // Empty or missing second label means to use the first label as the reference.\n                // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n                reflabel = this.subject.slice(opener.index, startpos);\n            }\n            if (n === 0) {\n                // If shortcut reference link, rewind before spaces we skipped.\n                this.pos = savepos;\n            }\n\n            if (reflabel) {\n                // lookup rawlabel in refmap\n                var link = this.refmap[normalizeReference(reflabel)];\n                if (link) {\n                    dest = link.destination;\n                    title = link.title;\n                    matched = true;\n                }\n            }\n        }\n\n        if (matched) {\n            var node = new Node(is_image ? \"image\" : \"link\");\n            node._destination = dest;\n            node._title = title || \"\";\n\n            var tmp, next;\n            tmp = opener.node._next;\n            while (tmp) {\n                next = tmp._next;\n                tmp.unlink();\n                node.appendChild(tmp);\n                tmp = next;\n            }\n            block.appendChild(node);\n            this.processEmphasis(opener.previousDelimiter);\n            this.removeBracket();\n            opener.node.unlink();\n\n            // We remove this bracket and processEmphasis will remove later delimiters.\n            // Now, for a link, we also deactivate earlier link openers.\n            // (no links in links)\n            if (!is_image) {\n                opener = this.brackets;\n                while (opener !== null) {\n                    if (!opener.image) {\n                        opener.active = false; // deactivate this opener\n                    }\n                    opener = opener.previous;\n                }\n            }\n\n            return true;\n        } else {\n            // no match\n\n            this.removeBracket(); // remove this opener from stack\n            this.pos = startpos;\n            block.appendChild(text(\"]\"));\n            return true;\n        }\n    };\n\n    var addBracket = function(node, index, image) {\n        if (this.brackets !== null) {\n            this.brackets.bracketAfter = true;\n        }\n        this.brackets = {\n            node: node,\n            previous: this.brackets,\n            previousDelimiter: this.delimiters,\n            index: index,\n            image: image,\n            active: true\n        };\n    };\n\n    var removeBracket = function() {\n        this.brackets = this.brackets.previous;\n    };\n\n    // Attempt to parse an entity.\n    var parseEntity = function(block) {\n        var m;\n        if ((m = this.match(reEntityHere))) {\n            block.appendChild(text(lib_10(m)));\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // Parse a run of ordinary characters, or a single character with\n    // a special meaning in markdown, as a plain string.\n    var parseString = function(block) {\n        var m;\n        if ((m = this.match(reMain))) {\n            if (this.options.smart) {\n                block.appendChild(\n                    text(\n                        m\n                            .replace(reEllipses, \"\\u2026\")\n                            .replace(reDash, function(chars) {\n                                var enCount = 0;\n                                var emCount = 0;\n                                if (chars.length % 3 === 0) {\n                                    // If divisible by 3, use all em dashes\n                                    emCount = chars.length / 3;\n                                } else if (chars.length % 2 === 0) {\n                                    // If divisible by 2, use all en dashes\n                                    enCount = chars.length / 2;\n                                } else if (chars.length % 3 === 2) {\n                                    // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                                    enCount = 1;\n                                    emCount = (chars.length - 2) / 3;\n                                } else {\n                                    // Use en dashes for last 4 hyphens; em dashes for rest\n                                    enCount = 2;\n                                    emCount = (chars.length - 4) / 3;\n                                }\n                                return (\n                                    \"\\u2014\".repeat(emCount) +\n                                    \"\\u2013\".repeat(enCount)\n                                );\n                            })\n                    )\n                );\n            } else {\n                block.appendChild(text(m));\n            }\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // Parse a newline.  If it was preceded by two spaces, return a hard\n    // line break; otherwise a soft line break.\n    var parseNewline = function(block) {\n        this.pos += 1; // assume we're at a \\n\n        // check previous node for trailing spaces\n        var lastc = block._lastChild;\n        if (\n            lastc &&\n            lastc.type === \"text\" &&\n            lastc._literal[lastc._literal.length - 1] === \" \"\n        ) {\n            var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n            lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n            block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n        } else {\n            block.appendChild(new Node(\"softbreak\"));\n        }\n        this.match(reInitialSpace); // gobble leading spaces in next line\n        return true;\n    };\n\n    // Attempt to parse a link reference, modifying refmap.\n    var parseReference = function(s, refmap) {\n        this.subject = s;\n        this.pos = 0;\n        var rawlabel;\n        var dest;\n        var title;\n        var matchChars;\n        var startpos = this.pos;\n\n        // label:\n        matchChars = this.parseLinkLabel();\n        if (matchChars === 0) {\n            return 0;\n        } else {\n            rawlabel = this.subject.substr(0, matchChars);\n        }\n\n        // colon:\n        if (this.peek() === C_COLON) {\n            this.pos++;\n        } else {\n            this.pos = startpos;\n            return 0;\n        }\n\n        //  link url\n        this.spnl();\n\n        dest = this.parseLinkDestination();\n        if (dest === null) {\n            this.pos = startpos;\n            return 0;\n        }\n\n        var beforetitle = this.pos;\n        this.spnl();\n        if (this.pos !== beforetitle) {\n            title = this.parseLinkTitle();\n        }\n        if (title === null) {\n            title = \"\";\n            // rewind before spaces\n            this.pos = beforetitle;\n        }\n\n        // make sure we're at line end:\n        var atLineEnd = true;\n        if (this.match(reSpaceAtEndOfLine) === null) {\n            if (title === \"\") {\n                atLineEnd = false;\n            } else {\n                // the potential title we found is not at the line end,\n                // but it could still be a legal link reference if we\n                // discard the title\n                title = \"\";\n                // rewind before spaces\n                this.pos = beforetitle;\n                // and instead check if the link URL is at the line end\n                atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n            }\n        }\n\n        if (!atLineEnd) {\n            this.pos = startpos;\n            return 0;\n        }\n\n        var normlabel = normalizeReference(rawlabel);\n        if (normlabel === \"\") {\n            // label must contain non-whitespace characters\n            this.pos = startpos;\n            return 0;\n        }\n\n        if (!refmap[normlabel]) {\n            refmap[normlabel] = { destination: dest, title: title };\n        }\n        return this.pos - startpos;\n    };\n\n    // Parse the next inline element in subject, advancing subject position.\n    // On success, add the result to block's children and return true.\n    // On failure, return false.\n    var parseInline = function(block) {\n        var res = false;\n        var c = this.peek();\n        if (c === -1) {\n            return false;\n        }\n        switch (c) {\n            case C_NEWLINE:\n                res = this.parseNewline(block);\n                break;\n            case C_BACKSLASH$1:\n                res = this.parseBackslash(block);\n                break;\n            case C_BACKTICK:\n                res = this.parseBackticks(block);\n                break;\n            case C_ASTERISK:\n            case C_UNDERSCORE:\n                res = this.handleDelim(c, block);\n                break;\n            case C_SINGLEQUOTE:\n            case C_DOUBLEQUOTE:\n                res = this.options.smart && this.handleDelim(c, block);\n                break;\n            case C_OPEN_BRACKET:\n                res = this.parseOpenBracket(block);\n                break;\n            case C_BANG:\n                res = this.parseBang(block);\n                break;\n            case C_CLOSE_BRACKET:\n                res = this.parseCloseBracket(block);\n                break;\n            case C_LESSTHAN:\n                res = this.parseAutolink(block) || this.parseHtmlTag(block);\n                break;\n            case C_AMPERSAND:\n                res = this.parseEntity(block);\n                break;\n            default:\n                res = this.parseString(block);\n                break;\n        }\n        if (!res) {\n            this.pos += 1;\n            block.appendChild(text(fromCodePoint(c)));\n        }\n\n        return true;\n    };\n\n    // Parse string content in block into inline children,\n    // using refmap to resolve references.\n    var parseInlines = function(block) {\n        this.subject = block._string_content.trim();\n        this.pos = 0;\n        this.delimiters = null;\n        this.brackets = null;\n        while (this.parseInline(block)) {}\n        block._string_content = null; // allow raw string to be garbage collected\n        this.processEmphasis(null);\n    };\n\n    // The InlineParser object.\n    function InlineParser(options) {\n        return {\n            subject: \"\",\n            delimiters: null, // used by handleDelim method\n            brackets: null,\n            pos: 0,\n            refmap: {},\n            match: match,\n            peek: peek,\n            spnl: spnl,\n            parseBackticks: parseBackticks,\n            parseBackslash: parseBackslash,\n            parseAutolink: parseAutolink,\n            parseHtmlTag: parseHtmlTag,\n            scanDelims: scanDelims,\n            handleDelim: handleDelim,\n            parseLinkTitle: parseLinkTitle,\n            parseLinkDestination: parseLinkDestination,\n            parseLinkLabel: parseLinkLabel,\n            parseOpenBracket: parseOpenBracket,\n            parseBang: parseBang,\n            parseCloseBracket: parseCloseBracket,\n            addBracket: addBracket,\n            removeBracket: removeBracket,\n            parseEntity: parseEntity,\n            parseString: parseString,\n            parseNewline: parseNewline,\n            parseReference: parseReference,\n            parseInline: parseInline,\n            processEmphasis: processEmphasis,\n            removeDelimiter: removeDelimiter,\n            options: options || {},\n            parse: parseInlines\n        };\n    }\n\n    var CODE_INDENT = 4;\n\n    var C_TAB = 9;\n    var C_NEWLINE$1 = 10;\n    var C_GREATERTHAN = 62;\n    var C_LESSTHAN$1 = 60;\n    var C_SPACE = 32;\n    var C_OPEN_BRACKET$1 = 91;\n\n    var reHtmlBlockOpen = [\n        /./, // dummy for 0\n        /^<(?:script|pre|textarea|style)(?:\\s|>|$)/i,\n        /^<!--/,\n        /^<[?]/,\n        /^<![A-Z]/,\n        /^<!\\[CDATA\\[/,\n        /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n        new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")\n    ];\n\n    var reHtmlBlockClose = [\n        /./, // dummy for 0\n        /<\\/(?:script|pre|textarea|style)>/i,\n        /-->/,\n        /\\?>/,\n        />/,\n        /\\]\\]>/\n    ];\n\n    var reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\n    var reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\n    var reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\n    var reBulletListMarker = /^[*+-]/;\n\n    var reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\n    var reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\n    var reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\n    var reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\n    var reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\n    var reLineEnding = /\\r\\n|\\n|\\r/;\n\n    // Returns true if string contains only space characters.\n    var isBlank = function(s) {\n        return !reNonSpace.test(s);\n    };\n\n    var isSpaceOrTab = function(c) {\n        return c === C_SPACE || c === C_TAB;\n    };\n\n    var peek$1 = function(ln, pos) {\n        if (pos < ln.length) {\n            return ln.charCodeAt(pos);\n        } else {\n            return -1;\n        }\n    };\n\n    // DOC PARSER\n\n    // These are methods of a Parser object, defined below.\n\n    // Returns true if block ends with a blank line, descending if needed\n    // into lists and sublists.\n    var endsWithBlankLine = function(block) {\n        while (block) {\n            if (block._lastLineBlank) {\n                return true;\n            }\n            var t = block.type;\n            if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n                block._lastLineChecked = true;\n                block = block._lastChild;\n            } else {\n                block._lastLineChecked = true;\n                break;\n            }\n        }\n        return false;\n    };\n\n    // Add a line to the block at the tip.  We assume the tip\n    // can accept lines -- that check should be done before calling this.\n    var addLine = function() {\n        if (this.partiallyConsumedTab) {\n            this.offset += 1; // skip over tab\n            // add space characters:\n            var charsToTab = 4 - (this.column % 4);\n            this.tip._string_content += \" \".repeat(charsToTab);\n        }\n        this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n    };\n\n    // Add block of type tag as a child of the tip.  If the tip can't\n    // accept children, close and finalize it and try its parent,\n    // and so on til we find a block that can accept children.\n    var addChild = function(tag, offset) {\n        while (!this.blocks[this.tip.type].canContain(tag)) {\n            this.finalize(this.tip, this.lineNumber - 1);\n        }\n\n        var column_number = offset + 1; // offset 0 = column 1\n        var newBlock = new Node(tag, [\n            [this.lineNumber, column_number],\n            [0, 0]\n        ]);\n        newBlock._string_content = \"\";\n        this.tip.appendChild(newBlock);\n        this.tip = newBlock;\n        return newBlock;\n    };\n\n    // Parse a list marker and return data on the marker (type,\n    // start, delimiter, bullet character, padding) or null.\n    var parseListMarker = function(parser, container) {\n        var rest = parser.currentLine.slice(parser.nextNonspace);\n        var match;\n        var nextc;\n        var spacesStartCol;\n        var spacesStartOffset;\n        var data = {\n            type: null,\n            tight: true, // lists are tight by default\n            bulletChar: null,\n            start: null,\n            delimiter: null,\n            padding: null,\n            markerOffset: parser.indent\n        };\n        if (parser.indent >= 4) {\n            return null;\n        }\n        if ((match = rest.match(reBulletListMarker))) {\n            data.type = \"bullet\";\n            data.bulletChar = match[0][0];\n        } else if (\n            (match = rest.match(reOrderedListMarker)) &&\n            (container.type !== \"paragraph\" || match[1] === \"1\")\n        ) {\n            data.type = \"ordered\";\n            data.start = parseInt(match[1]);\n            data.delimiter = match[2];\n        } else {\n            return null;\n        }\n        // make sure we have spaces after\n        nextc = peek$1(parser.currentLine, parser.nextNonspace + match[0].length);\n        if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n            return null;\n        }\n\n        // if it interrupts paragraph, make sure first line isn't blank\n        if (\n            container.type === \"paragraph\" &&\n            !parser.currentLine\n                .slice(parser.nextNonspace + match[0].length)\n                .match(reNonSpace)\n        ) {\n            return null;\n        }\n\n        // we've got a match! advance offset and calculate padding\n        parser.advanceNextNonspace(); // to start of marker\n        parser.advanceOffset(match[0].length, true); // to end of marker\n        spacesStartCol = parser.column;\n        spacesStartOffset = parser.offset;\n        do {\n            parser.advanceOffset(1, true);\n            nextc = peek$1(parser.currentLine, parser.offset);\n        } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n        var blank_item = peek$1(parser.currentLine, parser.offset) === -1;\n        var spaces_after_marker = parser.column - spacesStartCol;\n        if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n            data.padding = match[0].length + 1;\n            parser.column = spacesStartCol;\n            parser.offset = spacesStartOffset;\n            if (isSpaceOrTab(peek$1(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n        } else {\n            data.padding = match[0].length + spaces_after_marker;\n        }\n        return data;\n    };\n\n    // Returns true if the two list items are of the same type,\n    // with the same delimiter and bullet character.  This is used\n    // in agglomerating list items into lists.\n    var listsMatch = function(list_data, item_data) {\n        return (\n            list_data.type === item_data.type &&\n            list_data.delimiter === item_data.delimiter &&\n            list_data.bulletChar === item_data.bulletChar\n        );\n    };\n\n    // Finalize and close any unmatched blocks.\n    var closeUnmatchedBlocks = function() {\n        if (!this.allClosed) {\n            // finalize any blocks not matched\n            while (this.oldtip !== this.lastMatchedContainer) {\n                var parent = this.oldtip._parent;\n                this.finalize(this.oldtip, this.lineNumber - 1);\n                this.oldtip = parent;\n            }\n            this.allClosed = true;\n        }\n    };\n\n    // 'finalize' is run when the block is closed.\n    // 'continue' is run to check whether the block is continuing\n    // at a certain line and offset (e.g. whether a block quote\n    // contains a `>`.  It returns 0 for matched, 1 for not matched,\n    // and 2 for \"we've dealt with this line completely, go to next.\"\n    var blocks = {\n        document: {\n            continue: function() {\n                return 0;\n            },\n            finalize: function() {\n                return;\n            },\n            canContain: function(t) {\n                return t !== \"item\";\n            },\n            acceptsLines: false\n        },\n        list: {\n            continue: function() {\n                return 0;\n            },\n            finalize: function(parser, block) {\n                var item = block._firstChild;\n                while (item) {\n                    // check for non-final list item ending with blank line:\n                    if (endsWithBlankLine(item) && item._next) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    // recurse into children of list item, to see if there are\n                    // spaces between any of them:\n                    var subitem = item._firstChild;\n                    while (subitem) {\n                        if (\n                            endsWithBlankLine(subitem) &&\n                            (item._next || subitem._next)\n                        ) {\n                            block._listData.tight = false;\n                            break;\n                        }\n                        subitem = subitem._next;\n                    }\n                    item = item._next;\n                }\n            },\n            canContain: function(t) {\n                return t === \"item\";\n            },\n            acceptsLines: false\n        },\n        block_quote: {\n            continue: function(parser) {\n                var ln = parser.currentLine;\n                if (\n                    !parser.indented &&\n                    peek$1(ln, parser.nextNonspace) === C_GREATERTHAN\n                ) {\n                    parser.advanceNextNonspace();\n                    parser.advanceOffset(1, false);\n                    if (isSpaceOrTab(peek$1(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                    }\n                } else {\n                    return 1;\n                }\n                return 0;\n            },\n            finalize: function() {\n                return;\n            },\n            canContain: function(t) {\n                return t !== \"item\";\n            },\n            acceptsLines: false\n        },\n        item: {\n            continue: function(parser, container) {\n                if (parser.blank) {\n                    if (container._firstChild == null) {\n                        // Blank line after empty list item\n                        return 1;\n                    } else {\n                        parser.advanceNextNonspace();\n                    }\n                } else if (\n                    parser.indent >=\n                    container._listData.markerOffset + container._listData.padding\n                ) {\n                    parser.advanceOffset(\n                        container._listData.markerOffset +\n                            container._listData.padding,\n                        true\n                    );\n                } else {\n                    return 1;\n                }\n                return 0;\n            },\n            finalize: function() {\n                return;\n            },\n            canContain: function(t) {\n                return t !== \"item\";\n            },\n            acceptsLines: false\n        },\n        heading: {\n            continue: function() {\n                // a heading can never container > 1 line, so fail to match:\n                return 1;\n            },\n            finalize: function() {\n                return;\n            },\n            canContain: function() {\n                return false;\n            },\n            acceptsLines: false\n        },\n        thematic_break: {\n            continue: function() {\n                // a thematic break can never container > 1 line, so fail to match:\n                return 1;\n            },\n            finalize: function() {\n                return;\n            },\n            canContain: function() {\n                return false;\n            },\n            acceptsLines: false\n        },\n        code_block: {\n            continue: function(parser, container) {\n                var ln = parser.currentLine;\n                var indent = parser.indent;\n                if (container._isFenced) {\n                    // fenced\n                    var match =\n                        indent <= 3 &&\n                        ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                        ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n                    if (match && match[0].length >= container._fenceLength) {\n                        // closing fence - we're at end of line, so we can return\n                        parser.lastLineLength =\n                            parser.offset + indent + match[0].length;\n                        parser.finalize(container, parser.lineNumber);\n                        return 2;\n                    } else {\n                        // skip optional spaces of fence offset\n                        var i = container._fenceOffset;\n                        while (i > 0 && isSpaceOrTab(peek$1(ln, parser.offset))) {\n                            parser.advanceOffset(1, true);\n                            i--;\n                        }\n                    }\n                } else {\n                    // indented\n                    if (indent >= CODE_INDENT) {\n                        parser.advanceOffset(CODE_INDENT, true);\n                    } else if (parser.blank) {\n                        parser.advanceNextNonspace();\n                    } else {\n                        return 1;\n                    }\n                }\n                return 0;\n            },\n            finalize: function(parser, block) {\n                if (block._isFenced) {\n                    // fenced\n                    // first line becomes info string\n                    var content = block._string_content;\n                    var newlinePos = content.indexOf(\"\\n\");\n                    var firstLine = content.slice(0, newlinePos);\n                    var rest = content.slice(newlinePos + 1);\n                    block.info = unescapeString(firstLine.trim());\n                    block._literal = rest;\n                } else {\n                    // indented\n                    block._literal = block._string_content.replace(\n                        /(\\n *)+$/,\n                        \"\\n\"\n                    );\n                }\n                block._string_content = null; // allow GC\n            },\n            canContain: function() {\n                return false;\n            },\n            acceptsLines: true\n        },\n        html_block: {\n            continue: function(parser, container) {\n                return parser.blank &&\n                    (container._htmlBlockType === 6 ||\n                        container._htmlBlockType === 7)\n                    ? 1\n                    : 0;\n            },\n            finalize: function(parser, block) {\n                block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n                block._string_content = null; // allow GC\n            },\n            canContain: function() {\n                return false;\n            },\n            acceptsLines: true\n        },\n        paragraph: {\n            continue: function(parser) {\n                return parser.blank ? 1 : 0;\n            },\n            finalize: function(parser, block) {\n                var pos;\n                var hasReferenceDefs = false;\n\n                // try parsing the beginning as link reference definitions:\n                while (\n                    peek$1(block._string_content, 0) === C_OPEN_BRACKET$1 &&\n                    (pos = parser.inlineParser.parseReference(\n                        block._string_content,\n                        parser.refmap\n                    ))\n                ) {\n                    block._string_content = block._string_content.slice(pos);\n                    hasReferenceDefs = true;\n                }\n                if (hasReferenceDefs && isBlank(block._string_content)) {\n                    block.unlink();\n                }\n            },\n            canContain: function() {\n                return false;\n            },\n            acceptsLines: true\n        }\n    };\n\n    // block start functions.  Return values:\n    // 0 = no match\n    // 1 = matched container, keep going\n    // 2 = matched leaf, no more block starts\n    var blockStarts = [\n        // block quote\n        function(parser) {\n            if (\n                !parser.indented &&\n                peek$1(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                // optional following space\n                if (isSpaceOrTab(peek$1(parser.currentLine, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n                parser.closeUnmatchedBlocks();\n                parser.addChild(\"block_quote\", parser.nextNonspace);\n                return 1;\n            } else {\n                return 0;\n            }\n        },\n\n        // ATX heading\n        function(parser) {\n            var match;\n            if (\n                !parser.indented &&\n                (match = parser.currentLine\n                    .slice(parser.nextNonspace)\n                    .match(reATXHeadingMarker))\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(match[0].length, false);\n                parser.closeUnmatchedBlocks();\n                var container = parser.addChild(\"heading\", parser.nextNonspace);\n                container.level = match[0].trim().length; // number of #s\n                // remove trailing ###s:\n                container._string_content = parser.currentLine\n                    .slice(parser.offset)\n                    .replace(/^[ \\t]*#+[ \\t]*$/, \"\")\n                    .replace(/[ \\t]+#+[ \\t]*$/, \"\");\n                parser.advanceOffset(parser.currentLine.length - parser.offset);\n                return 2;\n            } else {\n                return 0;\n            }\n        },\n\n        // Fenced code block\n        function(parser) {\n            var match;\n            if (\n                !parser.indented &&\n                (match = parser.currentLine\n                    .slice(parser.nextNonspace)\n                    .match(reCodeFence))\n            ) {\n                var fenceLength = match[0].length;\n                parser.closeUnmatchedBlocks();\n                var container = parser.addChild(\"code_block\", parser.nextNonspace);\n                container._isFenced = true;\n                container._fenceLength = fenceLength;\n                container._fenceChar = match[0][0];\n                container._fenceOffset = parser.indent;\n                parser.advanceNextNonspace();\n                parser.advanceOffset(fenceLength, false);\n                return 2;\n            } else {\n                return 0;\n            }\n        },\n\n        // HTML block\n        function(parser, container) {\n            if (\n                !parser.indented &&\n                peek$1(parser.currentLine, parser.nextNonspace) === C_LESSTHAN$1\n            ) {\n                var s = parser.currentLine.slice(parser.nextNonspace);\n                var blockType;\n\n                for (blockType = 1; blockType <= 7; blockType++) {\n                    if (\n                        reHtmlBlockOpen[blockType].test(s) &&\n                        (blockType < 7 || container.type !== \"paragraph\")\n                    ) {\n                        parser.closeUnmatchedBlocks();\n                        // We don't adjust parser.offset;\n                        // spaces are part of the HTML block:\n                        var b = parser.addChild(\"html_block\", parser.offset);\n                        b._htmlBlockType = blockType;\n                        return 2;\n                    }\n                }\n            }\n\n            return 0;\n        },\n\n        // Setext heading\n        function(parser, container) {\n            var match;\n            if (\n                !parser.indented &&\n                container.type === \"paragraph\" &&\n                (match = parser.currentLine\n                    .slice(parser.nextNonspace)\n                    .match(reSetextHeadingLine))\n            ) {\n                parser.closeUnmatchedBlocks();\n                // resolve reference link definitiosn\n                var pos;\n                while (\n                    peek$1(container._string_content, 0) === C_OPEN_BRACKET$1 &&\n                    (pos = parser.inlineParser.parseReference(\n                        container._string_content,\n                        parser.refmap\n                    ))\n                ) {\n                    container._string_content = container._string_content.slice(\n                        pos\n                    );\n                }\n                if (container._string_content.length > 0) {\n                    var heading = new Node(\"heading\", container.sourcepos);\n                    heading.level = match[0][0] === \"=\" ? 1 : 2;\n                    heading._string_content = container._string_content;\n                    container.insertAfter(heading);\n                    container.unlink();\n                    parser.tip = heading;\n                    parser.advanceOffset(\n                        parser.currentLine.length - parser.offset,\n                        false\n                    );\n                    return 2;\n                } else {\n                    return 0;\n                }\n            } else {\n                return 0;\n            }\n        },\n\n        // thematic break\n        function(parser) {\n            if (\n                !parser.indented &&\n                reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))\n            ) {\n                parser.closeUnmatchedBlocks();\n                parser.addChild(\"thematic_break\", parser.nextNonspace);\n                parser.advanceOffset(\n                    parser.currentLine.length - parser.offset,\n                    false\n                );\n                return 2;\n            } else {\n                return 0;\n            }\n        },\n\n        // list item\n        function(parser, container) {\n            var data;\n\n            if (\n                (!parser.indented || container.type === \"list\") &&\n                (data = parseListMarker(parser, container))\n            ) {\n                parser.closeUnmatchedBlocks();\n\n                // add the list if needed\n                if (\n                    parser.tip.type !== \"list\" ||\n                    !listsMatch(container._listData, data)\n                ) {\n                    container = parser.addChild(\"list\", parser.nextNonspace);\n                    container._listData = data;\n                }\n\n                // add the list item\n                container = parser.addChild(\"item\", parser.nextNonspace);\n                container._listData = data;\n                return 1;\n            } else {\n                return 0;\n            }\n        },\n\n        // indented code block\n        function(parser) {\n            if (\n                parser.indented &&\n                parser.tip.type !== \"paragraph\" &&\n                !parser.blank\n            ) {\n                // indented code\n                parser.advanceOffset(CODE_INDENT, true);\n                parser.closeUnmatchedBlocks();\n                parser.addChild(\"code_block\", parser.offset);\n                return 2;\n            } else {\n                return 0;\n            }\n        }\n    ];\n\n    var advanceOffset = function(count, columns) {\n        var currentLine = this.currentLine;\n        var charsToTab, charsToAdvance;\n        var c;\n        while (count > 0 && (c = currentLine[this.offset])) {\n            if (c === \"\\t\") {\n                charsToTab = 4 - (this.column % 4);\n                if (columns) {\n                    this.partiallyConsumedTab = charsToTab > count;\n                    charsToAdvance = charsToTab > count ? count : charsToTab;\n                    this.column += charsToAdvance;\n                    this.offset += this.partiallyConsumedTab ? 0 : 1;\n                    count -= charsToAdvance;\n                } else {\n                    this.partiallyConsumedTab = false;\n                    this.column += charsToTab;\n                    this.offset += 1;\n                    count -= 1;\n                }\n            } else {\n                this.partiallyConsumedTab = false;\n                this.offset += 1;\n                this.column += 1; // assume ascii; block starts are ascii\n                count -= 1;\n            }\n        }\n    };\n\n    var advanceNextNonspace = function() {\n        this.offset = this.nextNonspace;\n        this.column = this.nextNonspaceColumn;\n        this.partiallyConsumedTab = false;\n    };\n\n    var findNextNonspace = function() {\n        var currentLine = this.currentLine;\n        var i = this.offset;\n        var cols = this.column;\n        var c;\n\n        while ((c = currentLine.charAt(i)) !== \"\") {\n            if (c === \" \") {\n                i++;\n                cols++;\n            } else if (c === \"\\t\") {\n                i++;\n                cols += 4 - (cols % 4);\n            } else {\n                break;\n            }\n        }\n        this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n        this.nextNonspace = i;\n        this.nextNonspaceColumn = cols;\n        this.indent = this.nextNonspaceColumn - this.column;\n        this.indented = this.indent >= CODE_INDENT;\n    };\n\n    // Analyze a line of text and update the document appropriately.\n    // We parse markdown text by calling this on each line of input,\n    // then finalizing the document.\n    var incorporateLine = function(ln) {\n        var all_matched = true;\n        var t;\n\n        var container = this.doc;\n        this.oldtip = this.tip;\n        this.offset = 0;\n        this.column = 0;\n        this.blank = false;\n        this.partiallyConsumedTab = false;\n        this.lineNumber += 1;\n\n        // replace NUL characters for security\n        if (ln.indexOf(\"\\u0000\") !== -1) {\n            ln = ln.replace(/\\0/g, \"\\uFFFD\");\n        }\n\n        this.currentLine = ln;\n\n        // For each containing block, try to parse the associated line start.\n        // Bail out on failure: container will point to the last matching block.\n        // Set all_matched to false if not all containers match.\n        var lastChild;\n        while ((lastChild = container._lastChild) && lastChild._open) {\n            container = lastChild;\n\n            this.findNextNonspace();\n\n            switch (this.blocks[container.type].continue(this, container)) {\n                case 0: // we've matched, keep going\n                    break;\n                case 1: // we've failed to match a block\n                    all_matched = false;\n                    break;\n                case 2: // we've hit end of line for fenced code close and can return\n                    return;\n                default:\n                    throw \"continue returned illegal value, must be 0, 1, or 2\";\n            }\n            if (!all_matched) {\n                container = container._parent; // back up to last matching block\n                break;\n            }\n        }\n\n        this.allClosed = container === this.oldtip;\n        this.lastMatchedContainer = container;\n\n        var matchedLeaf =\n            container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n        var starts = this.blockStarts;\n        var startsLen = starts.length;\n        // Unless last matched container is a code block, try new container starts,\n        // adding children to the last matched container:\n        while (!matchedLeaf) {\n            this.findNextNonspace();\n\n            // this is a little performance optimization:\n            if (\n                !this.indented &&\n                !reMaybeSpecial.test(ln.slice(this.nextNonspace))\n            ) {\n                this.advanceNextNonspace();\n                break;\n            }\n\n            var i = 0;\n            while (i < startsLen) {\n                var res = starts[i](this, container);\n                if (res === 1) {\n                    container = this.tip;\n                    break;\n                } else if (res === 2) {\n                    container = this.tip;\n                    matchedLeaf = true;\n                    break;\n                } else {\n                    i++;\n                }\n            }\n\n            if (i === startsLen) {\n                // nothing matched\n                this.advanceNextNonspace();\n                break;\n            }\n        }\n\n        // What remains at the offset is a text line.  Add the text to the\n        // appropriate container.\n\n        // First check for a lazy paragraph continuation:\n        if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n            // lazy paragraph continuation\n            this.addLine();\n        } else {\n            // not a lazy continuation\n\n            // finalize any blocks not matched\n            this.closeUnmatchedBlocks();\n            if (this.blank && container.lastChild) {\n                container.lastChild._lastLineBlank = true;\n            }\n\n            t = container.type;\n\n            // Block quote lines are never blank as they start with >\n            // and we don't count blanks in fenced code for purposes of tight/loose\n            // lists or breaking out of lists.  We also don't set _lastLineBlank\n            // on an empty list item, or if we just closed a fenced block.\n            var lastLineBlank =\n                this.blank &&\n                !(\n                    t === \"block_quote\" ||\n                    (t === \"code_block\" && container._isFenced) ||\n                    (t === \"item\" &&\n                        !container._firstChild &&\n                        container.sourcepos[0][0] === this.lineNumber)\n                );\n\n            // propagate lastLineBlank up through parents:\n            var cont = container;\n            while (cont) {\n                cont._lastLineBlank = lastLineBlank;\n                cont = cont._parent;\n            }\n\n            if (this.blocks[t].acceptsLines) {\n                this.addLine();\n                // if HtmlBlock, check for end condition\n                if (\n                    t === \"html_block\" &&\n                    container._htmlBlockType >= 1 &&\n                    container._htmlBlockType <= 5 &&\n                    reHtmlBlockClose[container._htmlBlockType].test(\n                        this.currentLine.slice(this.offset)\n                    )\n                ) {\n                    this.lastLineLength = ln.length;\n                    this.finalize(container, this.lineNumber);\n                }\n            } else if (this.offset < ln.length && !this.blank) {\n                // create paragraph container for line\n                container = this.addChild(\"paragraph\", this.offset);\n                this.advanceNextNonspace();\n                this.addLine();\n            }\n        }\n        this.lastLineLength = ln.length;\n    };\n\n    // Finalize a block.  Close it and do any necessary postprocessing,\n    // e.g. creating string_content from strings, setting the 'tight'\n    // or 'loose' status of a list, and parsing the beginnings\n    // of paragraphs for reference definitions.  Reset the tip to the\n    // parent of the closed block.\n    var finalize = function(block, lineNumber) {\n        var above = block._parent;\n        block._open = false;\n        block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n        this.blocks[block.type].finalize(this, block);\n\n        this.tip = above;\n    };\n\n    // Walk through a block & children recursively, parsing string content\n    // into inline content where appropriate.\n    var processInlines = function(block) {\n        var node, event, t;\n        var walker = block.walker();\n        this.inlineParser.refmap = this.refmap;\n        this.inlineParser.options = this.options;\n        while ((event = walker.next())) {\n            node = event.node;\n            t = node.type;\n            if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n                this.inlineParser.parse(node);\n            }\n        }\n    };\n\n    var Document = function() {\n        var doc = new Node(\"document\", [\n            [1, 1],\n            [0, 0]\n        ]);\n        return doc;\n    };\n\n    // The main parsing function.  Returns a parsed document AST.\n    var parse = function(input) {\n        this.doc = new Document();\n        this.tip = this.doc;\n        this.refmap = {};\n        this.lineNumber = 0;\n        this.lastLineLength = 0;\n        this.offset = 0;\n        this.column = 0;\n        this.lastMatchedContainer = this.doc;\n        this.currentLine = \"\";\n        if (this.options.time) {\n            console.time(\"preparing input\");\n        }\n        var lines = input.split(reLineEnding);\n        var len = lines.length;\n        if (input.charCodeAt(input.length - 1) === C_NEWLINE$1) {\n            // ignore last blank line created by final newline\n            len -= 1;\n        }\n        if (this.options.time) {\n            console.timeEnd(\"preparing input\");\n        }\n        if (this.options.time) {\n            console.time(\"block parsing\");\n        }\n        for (var i = 0; i < len; i++) {\n            this.incorporateLine(lines[i]);\n        }\n        while (this.tip) {\n            this.finalize(this.tip, len);\n        }\n        if (this.options.time) {\n            console.timeEnd(\"block parsing\");\n        }\n        if (this.options.time) {\n            console.time(\"inline parsing\");\n        }\n        this.processInlines(this.doc);\n        if (this.options.time) {\n            console.timeEnd(\"inline parsing\");\n        }\n        return this.doc;\n    };\n\n    // The Parser object.\n    function Parser(options) {\n        return {\n            doc: new Document(),\n            blocks: blocks,\n            blockStarts: blockStarts,\n            tip: this.doc,\n            oldtip: this.doc,\n            currentLine: \"\",\n            lineNumber: 0,\n            offset: 0,\n            column: 0,\n            nextNonspace: 0,\n            nextNonspaceColumn: 0,\n            indent: 0,\n            indented: false,\n            blank: false,\n            partiallyConsumedTab: false,\n            allClosed: true,\n            lastMatchedContainer: this.doc,\n            refmap: {},\n            lastLineLength: 0,\n            inlineParser: new InlineParser(options),\n            findNextNonspace: findNextNonspace,\n            advanceOffset: advanceOffset,\n            advanceNextNonspace: advanceNextNonspace,\n            addLine: addLine,\n            addChild: addChild,\n            incorporateLine: incorporateLine,\n            finalize: finalize,\n            processInlines: processInlines,\n            closeUnmatchedBlocks: closeUnmatchedBlocks,\n            parse: parse,\n            options: options || {}\n        };\n    }\n\n    function Renderer() {}\n\n    /**\n     *  Walks the AST and calls member methods for each Node type.\n     *\n     *  @param ast {Node} The root of the abstract syntax tree.\n     */\n    function render(ast) {\n        var walker = ast.walker(),\n            event,\n            type;\n\n        this.buffer = \"\";\n        this.lastOut = \"\\n\";\n\n        while ((event = walker.next())) {\n            type = event.node.type;\n            if (this[type]) {\n                this[type](event.node, event.entering);\n            }\n        }\n        return this.buffer;\n    }\n\n    /**\n     *  Concatenate a literal string to the buffer.\n     *\n     *  @param str {String} The string to concatenate.\n     */\n    function lit(str) {\n        this.buffer += str;\n        this.lastOut = str;\n    }\n\n    /**\n     *  Output a newline to the buffer.\n     */\n    function cr() {\n        if (this.lastOut !== \"\\n\") {\n            this.lit(\"\\n\");\n        }\n    }\n\n    /**\n     *  Concatenate a string to the buffer possibly escaping the content.\n     *\n     *  Concrete renderer implementations should override this method.\n     *\n     *  @param str {String} The string to concatenate.\n     */\n    function out(str) {\n        this.lit(str);\n    }\n\n    /**\n     *  Escape a string for the target renderer.\n     *\n     *  Abstract function that should be implemented by concrete\n     *  renderer implementations.\n     *\n     *  @param str {String} The string to escape.\n     */\n    function esc(str) {\n        return str;\n    }\n\n    Renderer.prototype.render = render;\n    Renderer.prototype.out = out;\n    Renderer.prototype.lit = lit;\n    Renderer.prototype.cr = cr;\n    Renderer.prototype.esc = esc;\n\n    var reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\n    var reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\n    var potentiallyUnsafe = function(url) {\n        return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n    };\n\n    // Helper function to produce an HTML tag.\n    function tag(name, attrs, selfclosing) {\n        if (this.disableTags > 0) {\n            return;\n        }\n        this.buffer += \"<\" + name;\n        if (attrs && attrs.length > 0) {\n            var i = 0;\n            var attrib;\n            while ((attrib = attrs[i]) !== undefined) {\n                this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n                i++;\n            }\n        }\n        if (selfclosing) {\n            this.buffer += \" /\";\n        }\n        this.buffer += \">\";\n        this.lastOut = \">\";\n    }\n\n    function HtmlRenderer(options) {\n        options = options || {};\n        // by default, soft breaks are rendered as newlines in HTML\n        options.softbreak = options.softbreak || \"\\n\";\n        // set to \"<br />\" to make them hard breaks\n        // set to \" \" if you want to ignore line wrapping in source\n\n        this.disableTags = 0;\n        this.lastOut = \"\\n\";\n        this.options = options;\n    }\n\n    /* Node methods */\n\n    function text$1(node) {\n        this.out(node.literal);\n    }\n\n    function softbreak() {\n        this.lit(this.options.softbreak);\n    }\n\n    function linebreak() {\n        this.tag(\"br\", [], true);\n        this.cr();\n    }\n\n    function link(node, entering) {\n        var attrs = this.attrs(node);\n        if (entering) {\n            if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n                attrs.push([\"href\", this.esc(node.destination)]);\n            }\n            if (node.title) {\n                attrs.push([\"title\", this.esc(node.title)]);\n            }\n            this.tag(\"a\", attrs);\n        } else {\n            this.tag(\"/a\");\n        }\n    }\n\n    function image$1(node, entering) {\n        if (entering) {\n            if (this.disableTags === 0) {\n                if (this.options.safe && potentiallyUnsafe(node.destination)) {\n                    this.lit('<img src=\"\" alt=\"');\n                } else {\n                    this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n                }\n            }\n            this.disableTags += 1;\n        } else {\n            this.disableTags -= 1;\n            if (this.disableTags === 0) {\n                if (node.title) {\n                    this.lit('\" title=\"' + this.esc(node.title));\n                }\n                this.lit('\" />');\n            }\n        }\n    }\n\n    function emph(node, entering) {\n        this.tag(entering ? \"em\" : \"/em\");\n    }\n\n    function strong(node, entering) {\n        this.tag(entering ? \"strong\" : \"/strong\");\n    }\n\n    function paragraph(node, entering) {\n        var grandparent = node.parent.parent,\n            attrs = this.attrs(node);\n        if (grandparent !== null && grandparent.type === \"list\") {\n            if (grandparent.listTight) {\n                return;\n            }\n        }\n        if (entering) {\n            this.cr();\n            this.tag(\"p\", attrs);\n        } else {\n            this.tag(\"/p\");\n            this.cr();\n        }\n    }\n\n    function heading(node, entering) {\n        var tagname = \"h\" + node.level,\n            attrs = this.attrs(node);\n        if (entering) {\n            this.cr();\n            this.tag(tagname, attrs);\n        } else {\n            this.tag(\"/\" + tagname);\n            this.cr();\n        }\n    }\n\n    function code(node) {\n        this.tag(\"code\");\n        this.out(node.literal);\n        this.tag(\"/code\");\n    }\n\n    function code_block(node) {\n        var info_words = node.info ? node.info.split(/\\s+/) : [],\n            attrs = this.attrs(node);\n        if (info_words.length > 0 && info_words[0].length > 0) {\n            attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n        }\n        this.cr();\n        this.tag(\"pre\");\n        this.tag(\"code\", attrs);\n        this.out(node.literal);\n        this.tag(\"/code\");\n        this.tag(\"/pre\");\n        this.cr();\n    }\n\n    function thematic_break(node) {\n        var attrs = this.attrs(node);\n        this.cr();\n        this.tag(\"hr\", attrs, true);\n        this.cr();\n    }\n\n    function block_quote(node, entering) {\n        var attrs = this.attrs(node);\n        if (entering) {\n            this.cr();\n            this.tag(\"blockquote\", attrs);\n            this.cr();\n        } else {\n            this.cr();\n            this.tag(\"/blockquote\");\n            this.cr();\n        }\n    }\n\n    function list(node, entering) {\n        var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n            attrs = this.attrs(node);\n\n        if (entering) {\n            var start = node.listStart;\n            if (start !== null && start !== 1) {\n                attrs.push([\"start\", start.toString()]);\n            }\n            this.cr();\n            this.tag(tagname, attrs);\n            this.cr();\n        } else {\n            this.cr();\n            this.tag(\"/\" + tagname);\n            this.cr();\n        }\n    }\n\n    function item(node, entering) {\n        var attrs = this.attrs(node);\n        if (entering) {\n            this.tag(\"li\", attrs);\n        } else {\n            this.tag(\"/li\");\n            this.cr();\n        }\n    }\n\n    function html_inline(node) {\n        if (this.options.safe) {\n            this.lit(\"<!-- raw HTML omitted -->\");\n        } else {\n            this.lit(node.literal);\n        }\n    }\n\n    function html_block(node) {\n        this.cr();\n        if (this.options.safe) {\n            this.lit(\"<!-- raw HTML omitted -->\");\n        } else {\n            this.lit(node.literal);\n        }\n        this.cr();\n    }\n\n    function custom_inline(node, entering) {\n        if (entering && node.onEnter) {\n            this.lit(node.onEnter);\n        } else if (!entering && node.onExit) {\n            this.lit(node.onExit);\n        }\n    }\n\n    function custom_block(node, entering) {\n        this.cr();\n        if (entering && node.onEnter) {\n            this.lit(node.onEnter);\n        } else if (!entering && node.onExit) {\n            this.lit(node.onExit);\n        }\n        this.cr();\n    }\n\n    /* Helper methods */\n\n    function out$1(s) {\n        this.lit(this.esc(s));\n    }\n\n    function attrs(node) {\n        var att = [];\n        if (this.options.sourcepos) {\n            var pos = node.sourcepos;\n            if (pos) {\n                att.push([\n                    \"data-sourcepos\",\n                    String(pos[0][0]) +\n                        \":\" +\n                        String(pos[0][1]) +\n                        \"-\" +\n                        String(pos[1][0]) +\n                        \":\" +\n                        String(pos[1][1])\n                ]);\n            }\n        }\n        return att;\n    }\n\n    // quick browser-compatible inheritance\n    HtmlRenderer.prototype = Object.create(Renderer.prototype);\n\n    HtmlRenderer.prototype.text = text$1;\n    HtmlRenderer.prototype.html_inline = html_inline;\n    HtmlRenderer.prototype.html_block = html_block;\n    HtmlRenderer.prototype.softbreak = softbreak;\n    HtmlRenderer.prototype.linebreak = linebreak;\n    HtmlRenderer.prototype.link = link;\n    HtmlRenderer.prototype.image = image$1;\n    HtmlRenderer.prototype.emph = emph;\n    HtmlRenderer.prototype.strong = strong;\n    HtmlRenderer.prototype.paragraph = paragraph;\n    HtmlRenderer.prototype.heading = heading;\n    HtmlRenderer.prototype.code = code;\n    HtmlRenderer.prototype.code_block = code_block;\n    HtmlRenderer.prototype.thematic_break = thematic_break;\n    HtmlRenderer.prototype.block_quote = block_quote;\n    HtmlRenderer.prototype.list = list;\n    HtmlRenderer.prototype.item = item;\n    HtmlRenderer.prototype.custom_inline = custom_inline;\n    HtmlRenderer.prototype.custom_block = custom_block;\n\n    HtmlRenderer.prototype.esc = escapeXml;\n\n    HtmlRenderer.prototype.out = out$1;\n    HtmlRenderer.prototype.tag = tag;\n    HtmlRenderer.prototype.attrs = attrs;\n\n    var reXMLTag = /\\<[^>]*\\>/;\n\n    function toTagName(s) {\n        return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n    }\n\n    function XmlRenderer(options) {\n        options = options || {};\n\n        this.disableTags = 0;\n        this.lastOut = \"\\n\";\n\n        this.indentLevel = 0;\n        this.indent = \"  \";\n\n        this.options = options;\n    }\n\n    function render$1(ast) {\n        this.buffer = \"\";\n\n        var attrs;\n        var tagname;\n        var walker = ast.walker();\n        var event, node, entering;\n        var container;\n        var selfClosing;\n        var nodetype;\n\n        var options = this.options;\n\n        if (options.time) {\n            console.time(\"rendering\");\n        }\n\n        this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n        this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n        while ((event = walker.next())) {\n            entering = event.entering;\n            node = event.node;\n            nodetype = node.type;\n\n            container = node.isContainer;\n\n            selfClosing =\n                nodetype === \"thematic_break\" ||\n                nodetype === \"linebreak\" ||\n                nodetype === \"softbreak\";\n\n            tagname = toTagName(nodetype);\n\n            if (entering) {\n                attrs = [];\n\n                switch (nodetype) {\n                    case \"document\":\n                        attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n                        break;\n                    case \"list\":\n                        if (node.listType !== null) {\n                            attrs.push([\"type\", node.listType.toLowerCase()]);\n                        }\n                        if (node.listStart !== null) {\n                            attrs.push([\"start\", String(node.listStart)]);\n                        }\n                        if (node.listTight !== null) {\n                            attrs.push([\n                                \"tight\",\n                                node.listTight ? \"true\" : \"false\"\n                            ]);\n                        }\n                        var delim = node.listDelimiter;\n                        if (delim !== null) {\n                            var delimword = \"\";\n                            if (delim === \".\") {\n                                delimword = \"period\";\n                            } else {\n                                delimword = \"paren\";\n                            }\n                            attrs.push([\"delimiter\", delimword]);\n                        }\n                        break;\n                    case \"code_block\":\n                        if (node.info) {\n                            attrs.push([\"info\", node.info]);\n                        }\n                        break;\n                    case \"heading\":\n                        attrs.push([\"level\", String(node.level)]);\n                        break;\n                    case \"link\":\n                    case \"image\":\n                        attrs.push([\"destination\", node.destination]);\n                        attrs.push([\"title\", node.title]);\n                        break;\n                    case \"custom_inline\":\n                    case \"custom_block\":\n                        attrs.push([\"on_enter\", node.onEnter]);\n                        attrs.push([\"on_exit\", node.onExit]);\n                        break;\n                }\n                if (options.sourcepos) {\n                    var pos = node.sourcepos;\n                    if (pos) {\n                        attrs.push([\n                            \"sourcepos\",\n                            String(pos[0][0]) +\n                                \":\" +\n                                String(pos[0][1]) +\n                                \"-\" +\n                                String(pos[1][0]) +\n                                \":\" +\n                                String(pos[1][1])\n                        ]);\n                    }\n                }\n\n                this.cr();\n                this.out(this.tag(tagname, attrs, selfClosing));\n                if (container) {\n                    this.indentLevel += 1;\n                } else if (!container && !selfClosing) {\n                    var lit = node.literal;\n                    if (lit) {\n                        this.out(this.esc(lit));\n                    }\n                    this.out(this.tag(\"/\" + tagname));\n                }\n            } else {\n                this.indentLevel -= 1;\n                this.cr();\n                this.out(this.tag(\"/\" + tagname));\n            }\n        }\n        if (options.time) {\n            console.timeEnd(\"rendering\");\n        }\n        this.buffer += \"\\n\";\n        return this.buffer;\n    }\n\n    function out$2(s) {\n        if (this.disableTags > 0) {\n            this.buffer += s.replace(reXMLTag, \"\");\n        } else {\n            this.buffer += s;\n        }\n        this.lastOut = s;\n    }\n\n    function cr$1() {\n        if (this.lastOut !== \"\\n\") {\n            this.buffer += \"\\n\";\n            this.lastOut = \"\\n\";\n            for (var i = this.indentLevel; i > 0; i--) {\n                this.buffer += this.indent;\n            }\n        }\n    }\n\n    // Helper function to produce an XML tag.\n    function tag$1(name, attrs, selfclosing) {\n        var result = \"<\" + name;\n        if (attrs && attrs.length > 0) {\n            var i = 0;\n            var attrib;\n            while ((attrib = attrs[i]) !== undefined) {\n                result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n                i++;\n            }\n        }\n        if (selfclosing) {\n            result += \" /\";\n        }\n        result += \">\";\n        return result;\n    }\n\n    // quick browser-compatible inheritance\n    XmlRenderer.prototype = Object.create(Renderer.prototype);\n\n    XmlRenderer.prototype.render = render$1;\n    XmlRenderer.prototype.out = out$2;\n    XmlRenderer.prototype.cr = cr$1;\n    XmlRenderer.prototype.tag = tag$1;\n    XmlRenderer.prototype.esc = escapeXml;\n\n    exports.HtmlRenderer = HtmlRenderer;\n    exports.Node = Node;\n    exports.Parser = Parser;\n    exports.Renderer = Renderer;\n    exports.XmlRenderer = XmlRenderer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","const Registry = require('./registry');\nconst _ = require('./helper');\nconst I18N = require('./I18N');\nconst DataTypes = require('./datatypes');\nconst Formatters = require('./formatters');\n\nfunction formatGrouped(context, data, type, filter, coreKey) {\n\t// Group fields into extensions\n\tlet groups = {};\n\tfor(let field in data) {\n\t\tlet value;\n\t\ttry {\n\t\t\tlet parts = field.split(/:(.*)/);\n\t\t\tif (parts.length === 1) {\n\t\t\t\tparts.unshift(coreKey);\n\t\t\t}\n\t\t\tlet ext = parts[0];\n\t\t\tif (typeof filter === 'function' && !filter(field, [field])) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvalue = data[field];\n\t\t\tlet spec = Registry.getSpecification(field, type);\n\n\t\t\t// Move to another extension (e.g. if no prefix is provided)\n\t\t\tif (spec.ext) {\n\t\t\t\text = spec.ext;\n\t\t\t}\n\n\t\t\t// Special handling for summaries that contain a list with keys (e.g. cube:dimensions, gee:schema)\n\t\t\t// There's usually just a single object included, so get that as value\n\t\t\tlet isSummarizedListWithKeys = false;\n\t\t\tif (type === 'summaries' && spec.listWithKeys && Array.isArray(value) && value.length > 0) {\n\t\t\t\tvalue = value[0];\n\t\t\t\tisSummarizedListWithKeys = true;\n\t\t\t}\n\n\t\t\t// Fill items with missing properties\n\t\t\tlet items = null;\n\t\t\tlet itemOrder = [];\n\t\t\tif (_.isObject(spec.items)) {\n\t\t\t\tlet temp = value;\n\t\t\t\t// Ignore keys for lists that are stored as object (e.g. cube:dimensions)\n\t\t\t\tif (spec.listWithKeys) {\n\t\t\t\t\ttemp = Object.values(temp);\n\t\t\t\t}\n\n\t\t\t\tlet itemFieldNames = [];\n\t\t\t\tif (Array.isArray(temp)) {\n\t\t\t\t\titemFieldNames = _.keysFromListOfObjects(temp);\n\t\t\t\t}\n\t\t\t\telse if (_.isObject(temp)) {\n\t\t\t\t\titemFieldNames = Object.keys(temp);\n\t\t\t\t}\n\n\t\t\t\titems = {};\n\t\t\t\t// Remove fields from list that are not available in the data\n\t\t\t\titemOrder = spec.itemOrder.filter(fieldName => itemFieldNames.includes(fieldName));\n\n\t\t\t\titemFieldNames.forEach(key => {\n\t\t\t\t\tif (typeof spec.items[key] === 'undefined') {\n\t\t\t\t\t\t// Add fields that are not specified in fields.json\n\t\t\t\t\t\titems[key] = {\n\t\t\t\t\t\t\tlabel: _.formatKey(key),\n\t\t\t\t\t\t\texplain: key\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Place non-specified fields at the end\n\t\t\t\t\t\titemOrder.push(key);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Clone field spec from fields.json\n\t\t\t\t\t\titems[key] = Object.assign({}, spec.items[key]);\n\t\t\t\t\t\titems[key].label = label(key, spec.items[key]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Format values\n\t\t\tlet formatted;\n\n\t\t\t// Handle summaries\n\t\t\tif (type === 'summaries') {\n\t\t\t\tif (!isSummarizedListWithKeys && _.isObject(value)) {\n\t\t\t\t\tif (typeof value.minimum !== 'undefined' && typeof value.maximum !== 'undefined') {\n\t\t\t\t\t\tconst formatSummaryValue = x => format(x, field, context, data, spec, filter, [field]);\n\t\t\t\t\t\tif (value.minimum === value.maximum) {\n\t\t\t\t\t\t\tformatted = formatSummaryValue(value.minimum);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (value.minimum === null) {\n\t\t\t\t\t\t\tformatted = `< ${formatSummaryValue(value.maximum)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (value.maximum === null) {\n\t\t\t\t\t\t\tformatted = `> ${formatSummaryValue(value.minimum)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tformatted = `${formatSummaryValue(value.minimum)} – ${formatSummaryValue(value.maximum)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tformatted = DataTypes.object(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (Registry.externalRenderer && items) {\n\t\t\t\t\tlet formatted = isSummarizedListWithKeys ? Object.assign({}, value) : value.slice(0);\n\t\t\t\t\t// Go through each field's summary\n\t\t\t\t\tfor(let i in formatted) {\n\t\t\t\t\t\tlet result = _.isObject(formatted[i]) ? {} : [];\n\t\t\t\t\t\t// Go through each entry in a field's summary (this is besically a single value as defined in the Item spec)\n\t\t\t\t\t\tfor(let key in items) {\n\t\t\t\t\t\t\tresult[key] = format(formatted[i][key], key, context, data, items[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformatted[i] = result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (Array.isArray(value)) {\n\t\t\t\t\tformatted = _.toList(value, !spec.custom && !spec.items, v => format(v, field, context, data, spec));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn(`Invalid summary value: ${value}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fallback to \"normal\" rendering if not handled by summaries yet\n\t\t\tif (typeof formatted === 'undefined') {\n\t\t\t\tformatted = format(value, field, context, data, spec, filter, [field]);\n\t\t\t}\n\n\t\t\t// Add group if missing\n\t\t\tif (!_.isObject(groups[ext])) {\n\t\t\t\tgroups[ext] = {\n\t\t\t\t\textension: ext,\n\t\t\t\t\tlabel: extension(ext),\n\t\t\t\t\tproperties: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tgroups[ext].properties[field] = {\n\t\t\t\tlabel: label(field, spec),\n\t\t\t\tvalue,\n\t\t\t\tformatted,\n\t\t\t\titems,\n\t\t\t\titemOrder,\n\t\t\t\tspec\n\t\t\t};\n\t\t} catch(error) {\n\t\t\tconsole.error(`Field '${field}' with value '${value}' resulted in an error`, error);\n\t\t}\n\t}\n\treturn Object.values(groups).sort((a,b) => I18N.collator.compare(a.extension, b.extension));\n\n}\n\n// For assets (item and collection) and item-assets (extension)\nfunction formatAsset(asset, context, filter = null, coreKey = '') {\n\treturn formatGrouped(context, asset, 'assets', filter, coreKey);\n}\n\n// For links\nfunction formatLink(link, context, filter = null, coreKey = '') {\n\treturn formatGrouped(context, link, 'links', filter, coreKey);\n}\n\n// For Providers\nfunction formatProvider(provider, context, filter = null, coreKey = '') {\n\treturn formatGrouped(context, provider, 'providers', filter, coreKey);\n}\n\n// For Collection summaries\nfunction formatSummaries(collection, filter = null, coreKey = '') {\n\treturn formatGrouped(collection, collection.summaries, 'summaries', filter, coreKey);\n}\n\n// For Collections\nfunction formatCollection(collection, filter = null, coreKey = '') {\n\treturn formatGrouped(collection, collection, 'collection', filter, coreKey);\n}\n\n// For Catalogs\nfunction formatCatalog(catalog, filter = null, coreKey = '') {\n\treturn formatGrouped(catalog, catalog, 'catalog', filter, coreKey);\n}\n\n// For item properties\nfunction formatItemProperties(item, filter = null, coreKey = '') {\n\treturn formatGrouped(item, item.properties, 'metadata', filter, coreKey);\n}\n\nfunction format(value, field, context = null, parent = null, spec = null, filter = null, path = []) {\n\tif (!_.isObject(spec)) {\n\t\tspec = Registry.getSpecification(field);\n\t}\n\n\tif (typeof spec.format === 'string') {\n\t\tlet fn = Formatters[`format${spec.format}`];\n\t\tif (!fn) {\n\t\t\tconsole.warn(`Formatter '${spec.format}' not available.`);\n\t\t}\n\t\treturn fn(value, field, spec, context, parent);\n\t}\n\telse if (typeof spec.formatter === 'function') {\n\t\treturn spec.formatter(value, field, spec, context, parent);\n\t}\n\telse if (_.isObject(spec.mapping)) {\n\t\tlet key = String(value);\n\t\tif (typeof spec.mapping[key] !== 'undefined') {\n\t\t\tvalue = spec.mapping[key];\n\t\t}\n\t\telse if (typeof spec.mapping[key.toLowerCase()] !== 'undefined') {\n\t\t\tvalue = spec.mapping[key.toLowerCase()];\n\t\t}\n\t\telse if (typeof spec.mapping[key.toUpperCase()] !== 'undefined') {\n\t\t\tvalue = spec.mapping[key.toUpperCase()];\n\t\t}\n\t\treturn DataTypes.format(_.t(value), spec.unit);\n\t}\n\telse if (value === null && spec.null) {\n\t\treturn DataTypes.null(spec.null);\n\t}\n\telse if (Array.isArray(value)) {\n\t\tlet callback = (v, i) => format(v, field, context, parent, spec, filter, path.concat([i]));\n\t\tif (typeof filter === 'function' && path.length > 0) {\n\t\t\tvalue = value.filter((v, i) => filter(path[0], path.concat([i])));\n\t\t}\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items)) {\n\t\t\treturn value.map(callback);\n\t\t}\n\t\telse {\n\t\t\treturn _.toList(value, false, callback);\n\t\t}\n\t}\n\telse if (_.isObject(value)) {\n\t\tlet callbackSpec = k => {\n\t\t\tif (_.isObject(spec.items)) {\n\t\t\t\treturn spec.listWithKeys ? {items: spec.items, itemOrder: spec.itemOrder} : spec.items[k];\n\t\t\t}\n\t\t\telse if (_.isObject(spec.properties)) {\n\t\t\t\treturn spec.properties[k];\n\t\t\t}\n\t\t\treturn {};\n\t\t};\n\t\tlet callbackValue = (v, k, p) => format(v, k, context, p, callbackSpec(k), filter, path.concat([k]));\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items || spec.properties)) {\n\t\t\tlet formattedValues = {};\n\t\t\tfor(let key in value) {\n\t\t\t\tif (typeof filter === 'function' && path.length > 0 && !filter(path[0], path.concat([key]))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tformattedValues[key] = callbackValue(value[key], key, value);\n\t\t\t}\n\t\t\treturn formattedValues;\n\t\t}\n\t\telse {\n\t\t\tlet callbackLabel = k => label(k, callbackSpec(k));\n\t\t\tlet itemOrder = spec.listWithKeys ? [] : spec.itemOrder;\n\t\t\treturn _.toObject(value, callbackValue, callbackLabel, itemOrder, filter, path);\n\t\t}\n\t}\n\telse {\n\t\treturn DataTypes.format(value, spec.unit);\n\t}\n}\n\nfunction label(key, spec = null) {\n\tif (!_.isObject(spec)) {\n\t\tspec = Registry.getSpecification(key);\n\t}\n\tif (_.isObject(spec) && typeof spec.label === 'string') {\n\t\tif (typeof spec.explain === 'string') {\n\t\t\tif (spec.explain.match(/^https?:\\/\\//i)) {\n\t\t\t\treturn _.toLink(spec.explain, _.t(spec.label), \"about\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn _.abbrev(_.t(spec.label), _.t(spec.explain));\n\t\t\t}\n\t\t}\n\t\telse if (typeof spec.label === 'string') {\n\t\t\treturn _.t(spec.label);\n\t\t}\n\t}\n\treturn _.formatKey(key);\n}\n\nfunction extension(key) {\n\treturn label(key, Registry.getExtension(key));\n}\n\nmodule.exports = {\n\tformat,\n\tlabel,\n\textension,\n\tformatCatalog,\n\tformatCollection,\n\tformatSummaries,\n\tformatItemProperties,\n\tformatAsset,\n\tformatLink,\n\tformatProvider,\n\tformatGrouped\n};","'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {SupportedEncodings} [encoding=utf8] - The encoding to use\n * @returns {string}\n */\nfunction toString (array, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n\nmodule.exports = toString\n","/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\"use strict\"\n\nexports.TextEncoder =\n  typeof TextEncoder !== \"undefined\" ? TextEncoder : require(\"util\").TextEncoder\n\nexports.TextDecoder =\n  typeof TextDecoder !== \"undefined\" ? TextDecoder : require(\"util\").TextDecoder\n","'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n","const Registry = require('./registry');\r\n\r\nRegistry.importFields(require('./fields.json'));\r\nRegistry.addDependency('@musement/iso-duration', require('@musement/iso-duration'));\r\nRegistry.addDependency('content-type', require('content-type'));\r\nRegistry.addDependency('commonmark', require('commonmark'));\r\nRegistry.addDependency('multihashes', require('multihashes'));\r\n\r\nmodule.exports = {\r\n\t...require('./interface'),\r\n\tFields: Registry.exportFields(),\r\n\tRegistry,\r\n\tHelper: require('./helper'),\r\n\tDataTypes: require('./datatypes'),\r\n\tFormatters: require('./formatters'),\r\n\tI18N: require('./I18N')\r\n};","  'use strict'\n\nconst { bases } = require('multiformats/basics')\n\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */\n\n/**\n * @param {string} name\n * @param {string} prefix\n * @param {(buf: Uint8Array) => string} encode\n * @param {(str: string) => Uint8Array} decode\n * @returns {MultibaseCodec}\n */\nfunction createCodec (name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = new Uint8Array(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\n/**\n * @typedef {'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof bases } SupportedEncodings\n */\n\n/**\n * @type {Record<SupportedEncodings, MultibaseCodec>}\n */\nconst BASES = {\n  'utf8': string,\n  'utf-8': string,\n  'hex': bases.base16,\n  'latin1': ascii,\n  'ascii': ascii,\n  'binary': ascii,\n\n  ...bases\n}\n\nmodule.exports = BASES\n","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n * @returns {false | string}\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nexports.names = Object.freeze(constants.names)\nexports.codes = Object.freeze(constants.codes)\n","'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n"],"names":["multibase","varint","names","uint8ArrayToString","uint8ArrayFromString","uint8ArrayConcat","codes","key","name","toHexString","hash","Uint8Array","Error","fromHexString","toB58String","encode","slice","fromB58String","encoded","decode","bytes","length","code","isValidCode","toString","len","digest","undefined","hashfn","coerceCode","isAppCode","validate","multihash","prefix","subarray","module","exports","Object","freeze","encodeText","Base","constructor","factory","alphabet","this","codeBuf","codec","buf","string","char","indexOf","TextEncoder","TextDecoder","textDecoder","decodeText","textEncoder","text","concat","arrs","output","offset","arr","set","base","ALPHABET","TypeError","BASE_MAP","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","source","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","bases","fromString","encoding","decoder","read","MSB","REST","b","res","shift","counter","l","RangeError","pow","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","global","isContainer","node","_type","resumeAt","entering","current","next","cur","container","_firstChild","root","_next","_parent","NodeWalker","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","defineProperty","get","s","type","t","tight","start","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","encodeCache","getEncodeCache","exclude","ch","cache","String","fromCharCode","test","push","toUpperCase","keepEscaped","nextCode","result","defaultChars","encodeURIComponent","componentChars","encode_1","commonjsGlobal","globalThis","window","g","self","unwrapExports","__esModule","hasOwnProperty","call","createCommonjsModule","fn","getCjsExportFromNamespace","Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","amp","AMP","andand","And","and","andd","andslope","andv","ang","ange","angle","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angmsd","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","apacir","ap","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxHd","boxhD","boxHD","boxhu","boxHu","boxhU","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsolb","bsol","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","capand","capbrcup","capcap","cap","Cap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","CHcy","chcy","check","checkmark","Chi","chi","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cir","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","copy","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cupbrcap","cupcap","CupCap","cup","Cup","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","Darr","dArr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","ddagger","ddarr","DD","dd","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrowBar","downarrow","DownArrow","Downarrow","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVectorBar","DownLeftVector","DownRightTeeVector","DownRightVectorBar","DownRightVector","DownTeeArrow","DownTee","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","Ecirc","ecirc","ecir","ecolon","Ecy","ecy","eDDot","Edot","edot","eDot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp13","emsp14","emsp","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","ge","gE","gEl","gel","geq","geqq","geqslant","gescc","ges","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","gg","Gg","ggg","gimel","GJcy","gjcy","gla","gl","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","gtcc","gtcir","gt","GT","Gt","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","harrcir","harr","hArr","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","ifr","Ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","Im","imof","imped","Implies","incare","infin","infintie","inodot","intcal","int","Int","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","lang","Lang","langd","langle","lap","Laplacetrf","laquo","larrb","larrbfs","larr","Larr","lArr","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","latail","lAtail","lat","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","LeftArrowBar","leftarrow","LeftArrow","Leftarrow","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVectorBar","LeftDownVector","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","LeftRightArrow","Leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTeeArrow","LeftTee","LeftTeeVector","leftthreetimes","LeftTriangleBar","LeftTriangle","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVectorBar","LeftUpVector","LeftVectorBar","LeftVector","lEg","leg","leq","leqq","leqslant","lescc","les","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","llarr","ll","Ll","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoustache","lmoust","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","LongLeftArrow","Longleftarrow","longleftrightarrow","LongLeftRightArrow","Longleftrightarrow","longmapsto","longrightarrow","LongRightArrow","Longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","ltcc","ltcir","lt","LT","Lt","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","midast","midcir","mid","middot","minusb","minus","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","mscr","Mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natural","naturals","natur","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","nearhk","nearr","neArr","nearrow","ne","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlarr","nlArr","nldr","nlE","nle","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangleBar","NotLeftTriangle","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangleBar","NotRightTriangle","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","nparallel","npar","nparsl","npart","npolint","npr","nprcue","nprec","npreceq","npre","nrarrc","nrarr","nrArr","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","Oacute","oacute","oast","Ocirc","ocirc","ocir","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","orarr","Or","or","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","otimesas","Otimes","otimes","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","para","parallel","par","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plusacir","plusb","pluscir","plus","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","prap","Pr","pr","prcue","precapprox","prec","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","pre","prE","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportional","Proportion","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","qopf","Qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","quot","QUOT","rAarr","race","Racute","racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarrap","rarrb","rarrbfs","rarrc","rarr","Rarr","rArr","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","Re","rect","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrowBar","rightarrow","RightArrow","Rightarrow","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVectorBar","RightDownVector","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTeeArrow","RightTee","RightTeeVector","rightthreetimes","RightTriangleBar","RightTriangle","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVectorBar","RightUpVector","RightVectorBar","RightVector","ring","risingdotseq","rlarr","rlhar","rlm","rmoustache","rmoust","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","scap","Scaron","scaron","Sc","sc","sccue","sce","scE","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdotb","sdot","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","solbar","solb","sol","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squ","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","sub","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succapprox","succ","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup1","sup2","sup3","sup","Sup","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","target","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","therefore","Therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","ThinSpace","thinsp","thkap","thksim","THORN","thorn","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","timesbar","timesb","times","timesd","tint","toea","topbot","topcir","top","Topf","topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","uarr","Uarr","uArr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrowBar","uparrow","UpArrow","Uparrow","UpArrowDownArrow","updownarrow","UpDownArrow","Updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","Upsilon","upsilon","UpTeeArrow","UpTee","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","Vcy","vcy","vdash","vDash","Vdash","VDash","Vdashl","veebar","vee","Vee","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","wedge","Wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xharr","xhArr","Xi","xi","xlarr","xlArr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrarr","xrArr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","yuml","Yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","zfr","Zfr","ZHcy","zhcy","zigrarr","zopf","Zopf","Zscr","zscr","zwj","zwnj","entities","entities$1","__proto__","Aacute$1","aacute$1","Acirc$1","acirc$1","acute$1","AElig$1","aelig$1","Agrave$1","agrave$1","amp$1","AMP$1","Aring$1","aring$1","Atilde$1","atilde$1","Auml$1","auml$1","brvbar$1","Ccedil$1","ccedil$1","cedil$1","cent$1","copy$1","COPY$1","curren$1","deg$1","divide$1","Eacute$1","eacute$1","Ecirc$1","ecirc$1","Egrave$1","egrave$1","ETH$1","eth$1","Euml$1","euml$1","frac12$1","frac14$1","frac34$1","gt$1","GT$1","Iacute$1","iacute$1","Icirc$1","icirc$1","iexcl$1","Igrave$1","igrave$1","iquest$1","Iuml$1","iuml$1","laquo$1","lt$1","LT$1","macr$1","micro$1","middot$1","nbsp$1","not$1","Ntilde$1","ntilde$1","Oacute$1","oacute$1","Ocirc$1","ocirc$1","Ograve$1","ograve$1","ordf$1","ordm$1","Oslash$1","oslash$1","Otilde$1","otilde$1","Ouml$1","ouml$1","para$1","plusmn$1","pound$1","quot$1","QUOT$1","raquo$1","reg$1","REG$1","sect$1","shy$1","sup1$1","sup2$1","sup3$1","szlig$1","THORN$1","thorn$1","times$1","Uacute$1","uacute$1","Ucirc$1","ucirc$1","Ugrave$1","ugrave$1","uml$1","Uuml$1","uuml$1","Yacute$1","yacute$1","yen$1","yuml$1","legacy","legacy$1","amp$2","apos$1","gt$2","lt$2","quot$2","xml","xml$1","decode$1","require$$0","decode_codepoint","__importDefault","mod","decode_json_1","decodeCodePoint","codePoint","default","require$$1","require$$1$1","require$$0$1","decode$2","entities_json_1","legacy_json_1","xml_json_1","decode_codepoint_1","getStrictDecoder","keys","join","replace","getReplacer","re","RegExp","decodeXML","decodeHTMLStrict","sorter","a","parseInt","substr","decodeHTML","sort","replacer","encode$1","inverseXML","getInverseObj","xmlReplacer","getInverseReplacer","encodeXML","getInverse","inverseHTML","htmlReplacer","obj","reduce","inverse","single","multiple","forEach","k","unshift","encodeHTML","reNonASCII","reAstralSymbols","singleCharReplacer","c","astralReplacer","_","high","low","data","reXmlChars","escape","lib","level","decodeStrict","encode_2","encodeHTML4","encodeHTML5","decode_2","decodeHTML4","decodeHTML5","decodeHTML4Strict","decodeHTML5Strict","decodeXMLStrict","_fromCodePoint","lib_10","C_BACKSLASH","ENTITY","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reHtmlTag","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","unescapeString","normalizeURI","uri","err","replaceUnsafeChar","escapeXml","fromCodePoint","e","stringFromCharCode","floor","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","arguments","Number","isFinite","apply","object","$defineProperty","error","count","Infinity","normalizeURI$1","unescapeString$1","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_BACKSLASH$1","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPABLE$1","ESCAPED_CHAR","ENTITY$1","reHtmlTag$1","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","trim","toLowerCase","match","m","exec","subject","pos","peek","spnl","parseBackticks","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","options","smart","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","closercc","emph","literal","parseLinkTitle","title","parseLinkDestination","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","InlineParser","parse","CODE_INDENT","C_TAB","C_NEWLINE$1","C_GREATERTHAN","C_LESSTHAN$1","C_SPACE","C_OPEN_BRACKET$1","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","peek$1","ln","endsWithBlankLine","addLine","partiallyConsumedTab","charsToTab","column","tip","currentLine","addChild","tag","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","bulletChar","padding","markerOffset","indent","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","parent","document","continue","acceptsLines","list","item","subitem","block_quote","indented","heading","thematic_break","code_block","lastLineLength","content","newlinePos","firstLine","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","fenceLength","blockType","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","console","lines","split","timeEnd","Parser","Renderer","render","lastOut","lit","cr","out","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","attrs","selfclosing","disableTags","attrib","HtmlRenderer","softbreak","text$1","linebreak","safe","image$1","strong","grandparent","listTight","tagname","info_words","listType","listStart","html_inline","custom_inline","onEnter","onExit","custom_block","out$1","att","create","reXMLTag","toTagName","XmlRenderer","indentLevel","render$1","selfClosing","nodetype","listDelimiter","delimword","out$2","cr$1","tag$1","Registry","I18N","DataTypes","Formatters","formatGrouped","context","filter","coreKey","groups","field","parts","ext","spec","getSpecification","isSummarizedListWithKeys","listWithKeys","formatted","items","itemOrder","isObject","temp","values","itemFieldNames","keysFromListOfObjects","fieldName","includes","label","formatKey","explain","assign","minimum","maximum","formatSummaryValue","format","externalRenderer","toList","custom","v","warn","extension","properties","collator","compare","formatAsset","asset","formatLink","formatProvider","provider","formatSummaries","collection","summaries","formatCollection","formatCatalog","catalog","formatItemProperties","path","formatter","mapping","unit","null","callback","callbackSpec","callbackValue","p","formattedValues","callbackLabel","toObject","toLink","abbrev","getExtension","arrays","acc","curr","array","encoder","substring","encodingLength","baseX","rfc4648","identity","constants","prev","tupple","importFields","addDependency","Fields","exportFields","Helper","createCodec","ascii","BASES","base16","src","_brrp__multiformats_scope_baseX","toHex","d","hex","byte","padStart","fromHex","hexes","aa","bb","coerce","o","isBinary","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","JSON","stringify","ComposedDecoder","decoders","left","right","Codec","bitsPerChar","end","bits","written","SyntaxError","pad","mask","base2","base8","base10","base16upper","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","byts","byt","base256emoji","MSBALL","INT","oldOffset","MSB$1","REST$1","_brrp_varint","encodeTo","sizeOffset","digestOffset","Digest","Hasher","then","sha","async","crypto","subtle","sha256","sha512","CID","version","asCID","_baseCache","Map","defineProperties","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","other","toStringV0","toStringV1","toJSON","Symbol","toStringTag","for","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","multibaseName","encodeCID","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","codeOffset","hashOffset","writable","configurable","enumerable","message","hashes","codecs","raw","json","MAX_SAFE_INTEGER","nameOrCode","validEncode","enc","isEncoded","encodingFromData"],"sourceRoot":""}