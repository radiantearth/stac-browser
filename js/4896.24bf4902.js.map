{"version":3,"file":"js/4896.24bf4902.js","mappings":"0KAOA,cAMEA,cAAe,gBAQfC,YAAa,cASbC,cAAe,gB,yDCpBjB,MAAMC,EACJ,+EAKIC,EACJ,8EAKIC,EACJ,yEAKIC,EAAc,CAClB,eAAkB,CAChBC,UAAW,OAEb,0BAA6B,CAC3BA,UAAW,OAEb,sBAAyB,CACvBA,UAAW,OAEb,qBAAwB,CACtBA,UAAW,OAEb,wBAA2B,CACzBA,UAAW,OAEb,aAAgB,CACdA,UAAW,OAEb,oBAAuB,CACrBA,UAAW,OAEb,mBAAsB,CACpBA,UAAW,OAEb,kBAAqB,CACnBA,UAAW,OAEb,kBAAqB,CACnBA,UAAW,OAEb,eAAkB,CAChBA,UAAW,OAEb,oBAAuB,CACrBA,UAAW,OAEb,kBAAqB,CACnBA,UAAW,OAEb,SAAY,CACVA,UAAW,OAEb,WAAc,CACZA,UAAW,QAOTC,EAAiB,CACrB,eAAkB,CAChBC,QAAS,EACTC,QAAS,GACTC,QAAQ,GAEV,aAAgB,CACdF,QAAS,EACTC,QAAS,GACTC,QAAQ,GAEV,kBAAqB,CACnBF,QAAS,EACTC,QAAS,GACTC,QAAQ,IAqCZ,MAAMC,UAAmB,aAIvB,WAAAC,CAAYC,GACV,MAAMC,EAAID,EAAQE,MAAMC,QAAQ,KAC1BC,GAAiB,GAANH,EAAUD,EAAQE,MAAQF,EAAQE,MAAMG,MAAM,EAAGJ,GAC5DK,EAAiBZ,EAAeU,IAAa,CACjD,QAAW,EACX,QAAW,GACX,QAAU,GAGNG,EAAcf,EAAYQ,EAAQE,OAClCM,EAAQR,EAAQS,OAAS,YAAcT,EAAQS,OAAS,GACxDZ,EAASS,EAAeT,QAAUG,EAAQH,OAAS,MAAQ,GAE3Da,OACYC,IAAhBX,EAAQU,IACJV,EAAQU,IACR,sCACAV,EAAQE,MACR,eACAL,EACA,IACAU,EAAYd,UACZe,EAEAI,EAAe,CAACvB,EAAoBC,EAAiB,eAEvDU,EAAQE,MAAMW,WAAW,YAC3BD,EAAaE,OAAO,EAAG,EAAGvB,GAG5BwB,MAAM,CACJH,aAAcA,EACdI,UAAWhB,EAAQgB,UACnBC,YAAa,YACbC,YAAalB,EAAQkB,YACrBtB,aACsBe,IAApBX,EAAQJ,QACJI,EAAQJ,QACRU,EAAeV,QACrBD,aACsBgB,IAApBX,EAAQL,QACJK,EAAQL,QACRW,EAAeX,QACrBwB,2BAA4BnB,EAAQmB,2BACpCC,iBAAkBpB,EAAQoB,iBAC1BC,WAAYrB,EAAQqB,WACpBX,IAAKA,EACLY,eAAgBzB,EAAS,EAAI,EAC7B0B,MAAOvB,EAAQuB,MACfC,WAAYxB,EAAQwB,YAExB,EAGF,c,wFC/KO,MAAMC,EACX,2GAqCF,MAAMC,UAAY,aAIhB,WAAA3B,CAAYC,GAGV,IAAIY,EAFJZ,EAAUA,GAAW,CAAC,EAIpBY,OAD2BD,IAAzBX,EAAQY,aACKZ,EAAQY,aAER,CAACa,GAGlB,MAAMR,OACoBN,IAAxBX,EAAQiB,YAA4BjB,EAAQiB,YAAc,YAEtDP,OACYC,IAAhBX,EAAQU,IACJV,EAAQU,IACR,iDAENK,MAAM,CACJH,aAAcA,EACde,yBAAyB,EACzBX,UAAWhB,EAAQgB,UACnBC,YAAaA,EACbC,YAAalB,EAAQkB,YACrBtB,aAA6Be,IAApBX,EAAQJ,QAAwBI,EAAQJ,QAAU,GAC3DuB,2BAA4BnB,EAAQmB,2BACpCC,iBAAkBpB,EAAQoB,iBAC1BC,WAAYrB,EAAQqB,WACpBX,IAAKA,EACLa,MAAOvB,EAAQuB,MACfC,WAAYxB,EAAQwB,YAExB,EAGF,c","sources":["webpack://@radiantearth/stac-browser/./node_modules/ol/source/TileEventType.js","webpack://@radiantearth/stac-browser/./node_modules/ol/source/StadiaMaps.js","webpack://@radiantearth/stac-browser/./node_modules/ol/source/OSM.js"],"sourcesContent":["/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @type {string}\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @type {string}\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @type {string}\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n  },\n  'stamen_toner': {\n    extension: 'png',\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n  },\n  'alidade_smooth': {\n    extension: 'png',\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n  },\n  'alidade_satellite': {\n    extension: 'png',\n  },\n  'outdoors': {\n    extension: 'png',\n  },\n  'osm_bright': {\n    extension: 'png',\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n"],"names":["TILELOADSTART","TILELOADEND","TILELOADERROR","STADIA_ATTRIBUTION","OMT_ATTRIBUTION","STAMEN_ATTRIBUTION","LayerConfig","extension","ProviderConfig","minZoom","maxZoom","retina","StadiaMaps","constructor","options","i","layer","indexOf","provider","slice","providerConfig","layerConfig","query","apiKey","url","undefined","attributions","startsWith","splice","super","cacheSize","crossOrigin","interpolate","reprojectionErrorThreshold","tileLoadFunction","transition","tilePixelRatio","wrapX","zDirection","ATTRIBUTION","OSM","attributionsCollapsible"],"sourceRoot":""}