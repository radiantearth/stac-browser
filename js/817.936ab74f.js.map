{"version":3,"file":"js/817.936ab74f.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./src/components/maps/MapSelect.vue","webpack://@radiantearth/stac-browser/./src/components/maps/UserLocationControl.vue","webpack://@radiantearth/stac-browser/src/components/maps/UserLocationControl.vue","webpack://@radiantearth/stac-browser/./src/components/maps/UserLocationControl.vue?5ceb","webpack://@radiantearth/stac-browser/./src/components/maps/UserLocationControl.vue?73c5","webpack://@radiantearth/stac-browser/./node_modules/ol/interaction/Extent.js","webpack://@radiantearth/stac-browser/./node_modules/@turf/helpers/dist/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/bignumber.js/bignumber.mjs","webpack://@radiantearth/stac-browser/./node_modules/splaytree-ts/dist/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/polyclip-ts/dist/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/@turf/clone/dist/esm/index.js","webpack://@radiantearth/stac-browser/./node_modules/@turf/mask/dist/esm/index.js","webpack://@radiantearth/stac-browser/src/components/maps/MapSelect.vue","webpack://@radiantearth/stac-browser/./src/components/maps/MapSelect.vue?9790","webpack://@radiantearth/stac-browser/./src/components/maps/MapSelect.vue?34e3"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"map-container\"},[_c('div',{ref:\"map\",staticClass:\"map\"},[_c('TextControl',{attrs:{\"text\":_vm.help,\"map\":_vm.map}}),_c('UserLocationControl',{attrs:{\"map\":_vm.map}}),_c('LayerControl',{attrs:{\"map\":_vm.map}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"ol-location ol-unselectable ol-control\",staticStyle:{\"pointer-events\":\"auto\"}},[_c('button',{attrs:{\"title\":_vm.$t('mapping.location.description')},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.request.apply(null, arguments)}}},[_c('b-icon-pin-map-fill')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"ol-location ol-unselectable ol-control\" style=\"pointer-events: auto;\">\n    <button @click.prevent.stop=\"request\" :title=\"$t('mapping.location.description')\">\n      <b-icon-pin-map-fill />\n    </button>\n  </div>\n</template>\n\n<script>\nimport Point from 'ol/geom/Point';\nimport ControlMixin from './ControlMixin';\nimport { fromLonLat } from 'ol/proj';\nimport { BIconPinMapFill } from 'bootstrap-vue';\n\nexport default {\n  name: 'UserLocationControl',\n  components: {\n    BIconPinMapFill\n  },\n  mixins: [\n    ControlMixin\n  ],\n  methods: {\n    request() {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            const view = this.map.getView();\n            const coords = fromLonLat([position.coords.longitude, position.coords.latitude], view.getProjection());\n            const point = new Point(coords);\n            view.fit(point, {maxZoom: 10});\n          },\n          error => this.$root.$emit('error', error, error.message),\n          {\n            maximumAge: Infinity\n          }\n        );\n      }\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.ol-location {\n  z-index: 1;\n  left: 0.5em;\n  top: calc(3.75em + 6px);\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserLocationControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserLocationControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./UserLocationControl.vue?vue&type=template&id=a2416cf4&scoped=true\"\nimport script from \"./UserLocationControl.vue?vue&type=script&lang=js\"\nexport * from \"./UserLocationControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./UserLocationControl.vue?vue&type=style&index=0&id=a2416cf4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a2416cf4\",\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {toUserExtent} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @typedef {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} PointerHandler\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {PointerHandler|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {PointerHandler|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","/*\r\n *      bignumber.js v9.3.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // The index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne + (id === 2 && e > ne);\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","// src/index.ts\nvar SplayTreeNode = class {\n  key;\n  left = null;\n  right = null;\n  constructor(key) {\n    this.key = key;\n  }\n};\nvar SplayTreeSetNode = class extends SplayTreeNode {\n  constructor(key) {\n    super(key);\n  }\n};\nvar SplayTreeMapNode = class _SplayTreeMapNode extends SplayTreeNode {\n  value;\n  constructor(key, value) {\n    super(key);\n    this.value = value;\n  }\n  replaceValue(value) {\n    const node = new _SplayTreeMapNode(this.key, value);\n    node.left = this.left;\n    node.right = this.right;\n    return node;\n  }\n};\nvar SplayTree = class {\n  size = 0;\n  modificationCount = 0;\n  splayCount = 0;\n  splay(key) {\n    const root = this.root;\n    if (root == null) {\n      this.compare(key, key);\n      return -1;\n    }\n    let right = null;\n    let newTreeRight = null;\n    let left = null;\n    let newTreeLeft = null;\n    let current = root;\n    const compare = this.compare;\n    let comp;\n    while (true) {\n      comp = compare(current.key, key);\n      if (comp > 0) {\n        let currentLeft = current.left;\n        if (currentLeft == null) break;\n        comp = compare(currentLeft.key, key);\n        if (comp > 0) {\n          current.left = currentLeft.right;\n          currentLeft.right = current;\n          current = currentLeft;\n          currentLeft = current.left;\n          if (currentLeft == null) break;\n        }\n        if (right == null) {\n          newTreeRight = current;\n        } else {\n          right.left = current;\n        }\n        right = current;\n        current = currentLeft;\n      } else if (comp < 0) {\n        let currentRight = current.right;\n        if (currentRight == null) break;\n        comp = compare(currentRight.key, key);\n        if (comp < 0) {\n          current.right = currentRight.left;\n          currentRight.left = current;\n          current = currentRight;\n          currentRight = current.right;\n          if (currentRight == null) break;\n        }\n        if (left == null) {\n          newTreeLeft = current;\n        } else {\n          left.right = current;\n        }\n        left = current;\n        current = currentRight;\n      } else {\n        break;\n      }\n    }\n    if (left != null) {\n      left.right = current.left;\n      current.left = newTreeLeft;\n    }\n    if (right != null) {\n      right.left = current.right;\n      current.right = newTreeRight;\n    }\n    if (this.root !== current) {\n      this.root = current;\n      this.splayCount++;\n    }\n    return comp;\n  }\n  splayMin(node) {\n    let current = node;\n    let nextLeft = current.left;\n    while (nextLeft != null) {\n      const left = nextLeft;\n      current.left = left.right;\n      left.right = current;\n      current = left;\n      nextLeft = current.left;\n    }\n    return current;\n  }\n  splayMax(node) {\n    let current = node;\n    let nextRight = current.right;\n    while (nextRight != null) {\n      const right = nextRight;\n      current.right = right.left;\n      right.left = current;\n      current = right;\n      nextRight = current.right;\n    }\n    return current;\n  }\n  _delete(key) {\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp != 0) return null;\n    let root = this.root;\n    const result = root;\n    const left = root.left;\n    this.size--;\n    if (left == null) {\n      this.root = root.right;\n    } else {\n      const right = root.right;\n      root = this.splayMax(left);\n      root.right = right;\n      this.root = root;\n    }\n    this.modificationCount++;\n    return result;\n  }\n  addNewRoot(node, comp) {\n    this.size++;\n    this.modificationCount++;\n    const root = this.root;\n    if (root == null) {\n      this.root = node;\n      return;\n    }\n    if (comp < 0) {\n      node.left = root;\n      node.right = root.right;\n      root.right = null;\n    } else {\n      node.right = root;\n      node.left = root.left;\n      root.left = null;\n    }\n    this.root = node;\n  }\n  _first() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMin(root);\n    return this.root;\n  }\n  _last() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMax(root);\n    return this.root;\n  }\n  clear() {\n    this.root = null;\n    this.size = 0;\n    this.modificationCount++;\n  }\n  has(key) {\n    return this.validKey(key) && this.splay(key) == 0;\n  }\n  defaultCompare() {\n    return (a, b) => a < b ? -1 : a > b ? 1 : 0;\n  }\n  wrap() {\n    return {\n      getRoot: () => {\n        return this.root;\n      },\n      setRoot: (root) => {\n        this.root = root;\n      },\n      getSize: () => {\n        return this.size;\n      },\n      getModificationCount: () => {\n        return this.modificationCount;\n      },\n      getSplayCount: () => {\n        return this.splayCount;\n      },\n      setSplayCount: (count) => {\n        this.splayCount = count;\n      },\n      splay: (key) => {\n        return this.splay(key);\n      },\n      has: (key) => {\n        return this.has(key);\n      }\n    };\n  }\n};\nvar SplayTreeMap = class extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? ((a) => a != null && a != void 0);\n  }\n  delete(key) {\n    if (!this.validKey(key)) return false;\n    return this._delete(key) != null;\n  }\n  forEach(f) {\n    const nodes = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value[1], result.value[0], this);\n    }\n  }\n  get(key) {\n    if (!this.validKey(key)) return void 0;\n    if (this.root != null) {\n      const comp = this.splay(key);\n      if (comp == 0) {\n        return this.root.value;\n      }\n    }\n    return void 0;\n  }\n  hasValue(value) {\n    const initialSplayCount = this.splayCount;\n    const visit = (node) => {\n      while (node != null) {\n        if (node.value == value) return true;\n        if (initialSplayCount != this.splayCount) {\n          throw \"Concurrent modification during iteration.\";\n        }\n        if (node.right != null && visit(node.right)) {\n          return true;\n        }\n        node = node.left;\n      }\n      return false;\n    };\n    return visit(this.root);\n  }\n  set(key, value) {\n    const comp = this.splay(key);\n    if (comp == 0) {\n      this.root = this.root.replaceValue(value);\n      this.splayCount += 1;\n      return this;\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return this;\n  }\n  setAll(other) {\n    other.forEach((value, key) => {\n      this.set(key, value);\n    });\n  }\n  setIfAbsent(key, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      return this.root.value;\n    }\n    const modificationCount = this.modificationCount;\n    const splayCount = this.splayCount;\n    const value = ifAbsent();\n    if (modificationCount != this.modificationCount) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (splayCount != this.splayCount) {\n      comp = this.splay(key);\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return value;\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return !this.isEmpty();\n  }\n  firstKey() {\n    if (this.root == null) return null;\n    return this._first().key;\n  }\n  lastKey() {\n    if (this.root == null) return null;\n    return this._last().key;\n  }\n  lastKeyBefore(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstKeyAfter(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  update(key, update, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = update(this.root.value);\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        this.splay(key);\n      }\n      this.root = this.root.replaceValue(newValue);\n      this.splayCount += 1;\n      return newValue;\n    }\n    if (ifAbsent != null) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = ifAbsent();\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        comp = this.splay(key);\n      }\n      this.addNewRoot(new SplayTreeMapNode(key, newValue), comp);\n      return newValue;\n    }\n    throw \"Invalid argument (key): Key not in map.\";\n  }\n  updateAll(update) {\n    const root = this.root;\n    if (root == null) return;\n    const iterator = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let node;\n    while (node = iterator.next(), !node.done) {\n      const newValue = update(...node.value);\n      iterator.replaceValue(newValue);\n    }\n  }\n  keys() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  values() {\n    return new SplayTreeValueIterableIterator(this.wrap());\n  }\n  entries() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeMapEntryIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Map]\";\n};\nvar SplayTreeSet = class _SplayTreeSet extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? ((v) => v != null && v != void 0);\n  }\n  delete(element) {\n    if (!this.validKey(element)) return false;\n    return this._delete(element) != null;\n  }\n  deleteAll(elements) {\n    for (const element of elements) {\n      this.delete(element);\n    }\n  }\n  forEach(f) {\n    const nodes = this[Symbol.iterator]();\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value, result.value, this);\n    }\n  }\n  add(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this;\n  }\n  addAndReturn(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this.root.key;\n  }\n  addAll(elements) {\n    for (const element of elements) {\n      this.add(element);\n    }\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return this.root != null;\n  }\n  single() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    if (this.size > 1) throw \"Bad state: Too many element\";\n    return this.root.key;\n  }\n  first() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._first().key;\n  }\n  last() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._last().key;\n  }\n  lastBefore(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstAfter(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  retainAll(elements) {\n    const retainSet = new _SplayTreeSet(this.compare, this.validKey);\n    const modificationCount = this.modificationCount;\n    for (const object of elements) {\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (this.validKey(object) && this.splay(object) == 0) {\n        retainSet.add(this.root.key);\n      }\n    }\n    if (retainSet.size != this.size) {\n      this.root = retainSet.root;\n      this.size = retainSet.size;\n      this.modificationCount++;\n    }\n  }\n  lookup(object) {\n    if (!this.validKey(object)) return null;\n    const comp = this.splay(object);\n    if (comp != 0) return null;\n    return this.root.key;\n  }\n  intersection(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  difference(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (!other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  union(other) {\n    const u = this.clone();\n    u.addAll(other);\n    return u;\n  }\n  clone() {\n    const set = new _SplayTreeSet(this.compare, this.validKey);\n    set.size = this.size;\n    set.root = this.copyNode(this.root);\n    return set;\n  }\n  copyNode(node) {\n    if (node == null) return null;\n    function copyChildren(node2, dest) {\n      let left;\n      let right;\n      do {\n        left = node2.left;\n        right = node2.right;\n        if (left != null) {\n          const newLeft = new SplayTreeSetNode(left.key);\n          dest.left = newLeft;\n          copyChildren(left, newLeft);\n        }\n        if (right != null) {\n          const newRight = new SplayTreeSetNode(right.key);\n          dest.right = newRight;\n          node2 = right;\n          dest = newRight;\n        }\n      } while (right != null);\n    }\n    const result = new SplayTreeSetNode(node.key);\n    copyChildren(node, result);\n    return result;\n  }\n  toSet() {\n    return this.clone();\n  }\n  entries() {\n    return new SplayTreeSetEntryIterableIterator(this.wrap());\n  }\n  keys() {\n    return this[Symbol.iterator]();\n  }\n  values() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Set]\";\n};\nvar SplayTreeIterableIterator = class {\n  tree;\n  path = new Array();\n  modificationCount = null;\n  splayCount;\n  constructor(tree) {\n    this.tree = tree;\n    this.splayCount = tree.getSplayCount();\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    if (this.moveNext()) return { done: false, value: this.current() };\n    return { done: true, value: null };\n  }\n  current() {\n    if (!this.path.length) return null;\n    const node = this.path[this.path.length - 1];\n    return this.getValue(node);\n  }\n  rebuildPath(key) {\n    this.path.splice(0, this.path.length);\n    this.tree.splay(key);\n    this.path.push(this.tree.getRoot());\n    this.splayCount = this.tree.getSplayCount();\n  }\n  findLeftMostDescendent(node) {\n    while (node != null) {\n      this.path.push(node);\n      node = node.left;\n    }\n  }\n  moveNext() {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      if (this.modificationCount == null) {\n        this.modificationCount = this.tree.getModificationCount();\n        let node2 = this.tree.getRoot();\n        while (node2 != null) {\n          this.path.push(node2);\n          node2 = node2.left;\n        }\n        return this.path.length > 0;\n      }\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (!this.path.length) return false;\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    let node = this.path[this.path.length - 1];\n    let next = node.right;\n    if (next != null) {\n      while (next != null) {\n        this.path.push(next);\n        next = next.left;\n      }\n      return true;\n    }\n    this.path.pop();\n    while (this.path.length && this.path[this.path.length - 1].right === node) {\n      node = this.path.pop();\n    }\n    return this.path.length > 0;\n  }\n};\nvar SplayTreeKeyIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return node.key;\n  }\n};\nvar SplayTreeSetEntryIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return [node.key, node.key];\n  }\n};\nvar SplayTreeValueIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return node.value;\n  }\n};\nvar SplayTreeMapEntryIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return [node.key, node.value];\n  }\n  replaceValue(value) {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    const last = this.path.pop();\n    const newLast = last.replaceValue(value);\n    if (!this.path.length) {\n      this.tree.setRoot(newLast);\n    } else {\n      const parent = this.path[this.path.length - 1];\n      if (last === parent.left) {\n        parent.left = newLast;\n      } else {\n        parent.right = newLast;\n      }\n    }\n    this.path.push(newLast);\n    const count = this.tree.getSplayCount() + 1;\n    this.tree.setSplayCount(count);\n    this.splayCount = count;\n  }\n};\nexport {\n  SplayTreeMap,\n  SplayTreeSet\n};\n//# sourceMappingURL=index.js.map","// src/geom-in.ts\nimport BigNumber2 from \"bignumber.js\";\n\n// src/constant.ts\nvar constant_default = (x) => {\n  return () => {\n    return x;\n  };\n};\n\n// src/compare.ts\nvar compare_default = (eps) => {\n  const almostEqual = eps ? (a, b) => b.minus(a).abs().isLessThanOrEqualTo(eps) : constant_default(false);\n  return (a, b) => {\n    if (almostEqual(a, b)) return 0;\n    return a.comparedTo(b);\n  };\n};\n\n// src/orient.ts\nfunction orient_default(eps) {\n  const almostCollinear = eps ? (area2, ax, ay, cx, cy) => area2.exponentiatedBy(2).isLessThanOrEqualTo(\n    cx.minus(ax).exponentiatedBy(2).plus(cy.minus(ay).exponentiatedBy(2)).times(eps)\n  ) : constant_default(false);\n  return (a, b, c) => {\n    const ax = a.x, ay = a.y, cx = c.x, cy = c.y;\n    const area2 = ay.minus(cy).times(b.x.minus(cx)).minus(ax.minus(cx).times(b.y.minus(cy)));\n    if (almostCollinear(area2, ax, ay, cx, cy)) return 0;\n    return area2.comparedTo(0);\n  };\n}\n\n// src/snap.ts\nimport BigNumber from \"bignumber.js\";\nimport { SplayTreeSet } from \"splaytree-ts\";\n\n// src/identity.ts\nvar identity_default = (x) => {\n  return x;\n};\n\n// src/snap.ts\nvar snap_default = (eps) => {\n  if (eps) {\n    const xTree = new SplayTreeSet(compare_default(eps));\n    const yTree = new SplayTreeSet(compare_default(eps));\n    const snapCoord = (coord, tree) => {\n      return tree.addAndReturn(coord);\n    };\n    const snap = (v) => {\n      return {\n        x: snapCoord(v.x, xTree),\n        y: snapCoord(v.y, yTree)\n      };\n    };\n    snap({ x: new BigNumber(0), y: new BigNumber(0) });\n    return snap;\n  }\n  return identity_default;\n};\n\n// src/precision.ts\nvar set = (eps) => {\n  return {\n    set: (eps2) => {\n      precision = set(eps2);\n    },\n    reset: () => set(eps),\n    compare: compare_default(eps),\n    snap: snap_default(eps),\n    orient: orient_default(eps)\n  };\n};\nvar precision = set();\n\n// src/bbox.ts\nvar isInBbox = (bbox, point) => {\n  return bbox.ll.x.isLessThanOrEqualTo(point.x) && point.x.isLessThanOrEqualTo(bbox.ur.x) && bbox.ll.y.isLessThanOrEqualTo(point.y) && point.y.isLessThanOrEqualTo(bbox.ur.y);\n};\nvar getBboxOverlap = (b1, b2) => {\n  if (b2.ur.x.isLessThan(b1.ll.x) || b1.ur.x.isLessThan(b2.ll.x) || b2.ur.y.isLessThan(b1.ll.y) || b1.ur.y.isLessThan(b2.ll.y))\n    return null;\n  const lowerX = b1.ll.x.isLessThan(b2.ll.x) ? b2.ll.x : b1.ll.x;\n  const upperX = b1.ur.x.isLessThan(b2.ur.x) ? b1.ur.x : b2.ur.x;\n  const lowerY = b1.ll.y.isLessThan(b2.ll.y) ? b2.ll.y : b1.ll.y;\n  const upperY = b1.ur.y.isLessThan(b2.ur.y) ? b1.ur.y : b2.ur.y;\n  return { ll: { x: lowerX, y: lowerY }, ur: { x: upperX, y: upperY } };\n};\n\n// src/operation.ts\nimport { SplayTreeSet as SplayTreeSet3 } from \"splaytree-ts\";\n\n// src/vector.ts\nvar crossProduct = (a, b) => a.x.times(b.y).minus(a.y.times(b.x));\nvar dotProduct = (a, b) => a.x.times(b.x).plus(a.y.times(b.y));\nvar length = (v) => dotProduct(v, v).sqrt();\nvar sineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n  const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n  return crossProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar cosineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n  const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n  return dotProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar horizontalIntersection = (pt, v, y) => {\n  if (v.y.isZero()) return null;\n  return { x: pt.x.plus(v.x.div(v.y).times(y.minus(pt.y))), y };\n};\nvar verticalIntersection = (pt, v, x) => {\n  if (v.x.isZero()) return null;\n  return { x, y: pt.y.plus(v.y.div(v.x).times(x.minus(pt.x))) };\n};\nvar intersection = (pt1, v1, pt2, v2) => {\n  if (v1.x.isZero()) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x.isZero()) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y.isZero()) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y.isZero()) return horizontalIntersection(pt1, v1, pt2.y);\n  const kross = crossProduct(v1, v2);\n  if (kross.isZero()) return null;\n  const ve = { x: pt2.x.minus(pt1.x), y: pt2.y.minus(pt1.y) };\n  const d1 = crossProduct(ve, v1).div(kross);\n  const d2 = crossProduct(ve, v2).div(kross);\n  const x1 = pt1.x.plus(d2.times(v1.x)), x2 = pt2.x.plus(d1.times(v2.x));\n  const y1 = pt1.y.plus(d2.times(v1.y)), y2 = pt2.y.plus(d1.times(v2.y));\n  const x = x1.plus(x2).div(2);\n  const y = y1.plus(y2).div(2);\n  return { x, y };\n};\n\n// src/sweep-event.ts\nvar SweepEvent = class _SweepEvent {\n  point;\n  isLeft;\n  segment;\n  otherSE;\n  consumedBy;\n  // for ordering sweep events in the sweep event queue\n  static compare(a, b) {\n    const ptCmp = _SweepEvent.comparePoints(a.point, b.point);\n    if (ptCmp !== 0) return ptCmp;\n    if (a.point !== b.point) a.link(b);\n    if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n    return Segment.compare(a.segment, b.segment);\n  }\n  // for ordering points in sweep line order\n  static comparePoints(aPt, bPt) {\n    if (aPt.x.isLessThan(bPt.x)) return -1;\n    if (aPt.x.isGreaterThan(bPt.x)) return 1;\n    if (aPt.y.isLessThan(bPt.y)) return -1;\n    if (aPt.y.isGreaterThan(bPt.y)) return 1;\n    return 0;\n  }\n  // Warning: 'point' input will be modified and re-used (for performance)\n  constructor(point, isLeft) {\n    if (point.events === void 0) point.events = [this];\n    else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n  }\n  link(other) {\n    if (other.point === this.point) {\n      throw new Error(\"Tried to link already linked events\");\n    }\n    const otherEvents = other.point.events;\n    for (let i = 0, iMax = otherEvents.length; i < iMax; i++) {\n      const evt = otherEvents[i];\n      this.point.events.push(evt);\n      evt.point = this.point;\n    }\n    this.checkForConsuming();\n  }\n  /* Do a pass over our linked events and check to see if any pair\n   * of segments match, and should be consumed. */\n  checkForConsuming() {\n    const numEvents = this.point.events.length;\n    for (let i = 0; i < numEvents; i++) {\n      const evt1 = this.point.events[i];\n      if (evt1.segment.consumedBy !== void 0) continue;\n      for (let j = i + 1; j < numEvents; j++) {\n        const evt2 = this.point.events[j];\n        if (evt2.consumedBy !== void 0) continue;\n        if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n        evt1.segment.consume(evt2.segment);\n      }\n    }\n  }\n  getAvailableLinkedEvents() {\n    const events = [];\n    for (let i = 0, iMax = this.point.events.length; i < iMax; i++) {\n      const evt = this.point.events[i];\n      if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n        events.push(evt);\n      }\n    }\n    return events;\n  }\n  /**\n   * Returns a comparator function for sorting linked events that will\n   * favor the event that will give us the smallest left-side angle.\n   * All ring construction starts as low as possible heading to the right,\n   * so by always turning left as sharp as possible we'll get polygons\n   * without uncessary loops & holes.\n   *\n   * The comparator function has a compute cache such that it avoids\n   * re-computing already-computed values.\n   */\n  getLeftmostComparator(baseEvent) {\n    const cache = /* @__PURE__ */ new Map();\n    const fillCache = (linkedEvent) => {\n      const nextEvent = linkedEvent.otherSE;\n      cache.set(linkedEvent, {\n        sine: sineOfAngle(this.point, baseEvent.point, nextEvent.point),\n        cosine: cosineOfAngle(this.point, baseEvent.point, nextEvent.point)\n      });\n    };\n    return (a, b) => {\n      if (!cache.has(a)) fillCache(a);\n      if (!cache.has(b)) fillCache(b);\n      const { sine: asine, cosine: acosine } = cache.get(a);\n      const { sine: bsine, cosine: bcosine } = cache.get(b);\n      if (asine.isGreaterThanOrEqualTo(0) && bsine.isGreaterThanOrEqualTo(0)) {\n        if (acosine.isLessThan(bcosine)) return 1;\n        if (acosine.isGreaterThan(bcosine)) return -1;\n        return 0;\n      }\n      if (asine.isLessThan(0) && bsine.isLessThan(0)) {\n        if (acosine.isLessThan(bcosine)) return -1;\n        if (acosine.isGreaterThan(bcosine)) return 1;\n        return 0;\n      }\n      if (bsine.isLessThan(asine)) return -1;\n      if (bsine.isGreaterThan(asine)) return 1;\n      return 0;\n    };\n  }\n};\n\n// src/geom-out.ts\nvar RingOut = class _RingOut {\n  events;\n  poly;\n  _isExteriorRing;\n  _enclosingRing;\n  /* Given the segments from the sweep line pass, compute & return a series\n   * of closed rings from all the segments marked to be part of the result */\n  static factory(allSegments) {\n    const ringsOut = [];\n    for (let i = 0, iMax = allSegments.length; i < iMax; i++) {\n      const segment = allSegments[i];\n      if (!segment.isInResult() || segment.ringOut) continue;\n      let prevEvent = null;\n      let event = segment.leftSE;\n      let nextEvent = segment.rightSE;\n      const events = [event];\n      const startingPoint = event.point;\n      const intersectionLEs = [];\n      while (true) {\n        prevEvent = event;\n        event = nextEvent;\n        events.push(event);\n        if (event.point === startingPoint) break;\n        while (true) {\n          const availableLEs = event.getAvailableLinkedEvents();\n          if (availableLEs.length === 0) {\n            const firstPt = events[0].point;\n            const lastPt = events[events.length - 1].point;\n            throw new Error(\n              `Unable to complete output ring starting at [${firstPt.x}, ${firstPt.y}]. Last matching segment found ends at [${lastPt.x}, ${lastPt.y}].`\n            );\n          }\n          if (availableLEs.length === 1) {\n            nextEvent = availableLEs[0].otherSE;\n            break;\n          }\n          let indexLE = null;\n          for (let j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n            if (intersectionLEs[j].point === event.point) {\n              indexLE = j;\n              break;\n            }\n          }\n          if (indexLE !== null) {\n            const intersectionLE = intersectionLEs.splice(indexLE)[0];\n            const ringEvents = events.splice(intersectionLE.index);\n            ringEvents.unshift(ringEvents[0].otherSE);\n            ringsOut.push(new _RingOut(ringEvents.reverse()));\n            continue;\n          }\n          intersectionLEs.push({\n            index: events.length,\n            point: event.point\n          });\n          const comparator = event.getLeftmostComparator(prevEvent);\n          nextEvent = availableLEs.sort(comparator)[0].otherSE;\n          break;\n        }\n      }\n      ringsOut.push(new _RingOut(events));\n    }\n    return ringsOut;\n  }\n  constructor(events) {\n    this.events = events;\n    for (let i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n    this.poly = null;\n  }\n  getGeom() {\n    let prevPt = this.events[0].point;\n    const points = [prevPt];\n    for (let i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n      const pt2 = this.events[i].point;\n      const nextPt2 = this.events[i + 1].point;\n      if (precision.orient(pt2, prevPt, nextPt2) === 0) continue;\n      points.push(pt2);\n      prevPt = pt2;\n    }\n    if (points.length === 1) return null;\n    const pt = points[0];\n    const nextPt = points[1];\n    if (precision.orient(pt, prevPt, nextPt) === 0) points.shift();\n    points.push(points[0]);\n    const step = this.isExteriorRing() ? 1 : -1;\n    const iStart = this.isExteriorRing() ? 0 : points.length - 1;\n    const iEnd = this.isExteriorRing() ? points.length : -1;\n    const orderedPoints = [];\n    for (let i = iStart; i != iEnd; i += step)\n      orderedPoints.push([points[i].x.toNumber(), points[i].y.toNumber()]);\n    return orderedPoints;\n  }\n  isExteriorRing() {\n    if (this._isExteriorRing === void 0) {\n      const enclosing = this.enclosingRing();\n      this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n    }\n    return this._isExteriorRing;\n  }\n  enclosingRing() {\n    if (this._enclosingRing === void 0) {\n      this._enclosingRing = this._calcEnclosingRing();\n    }\n    return this._enclosingRing;\n  }\n  /* Returns the ring that encloses this one, if any */\n  _calcEnclosingRing() {\n    let leftMostEvt = this.events[0];\n    for (let i = 1, iMax = this.events.length; i < iMax; i++) {\n      const evt = this.events[i];\n      if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n    }\n    let prevSeg = leftMostEvt.segment.prevInResult();\n    let prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    while (true) {\n      if (!prevSeg) return null;\n      if (!prevPrevSeg) return prevSeg.ringOut;\n      if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n        if (prevPrevSeg.ringOut?.enclosingRing() !== prevSeg.ringOut) {\n          return prevSeg.ringOut;\n        } else return prevSeg.ringOut?.enclosingRing();\n      }\n      prevSeg = prevPrevSeg.prevInResult();\n      prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    }\n  }\n};\nvar PolyOut = class {\n  exteriorRing;\n  interiorRings;\n  constructor(exteriorRing) {\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n  addInterior(ring) {\n    this.interiorRings.push(ring);\n    ring.poly = this;\n  }\n  getGeom() {\n    const geom0 = this.exteriorRing.getGeom();\n    if (geom0 === null) return null;\n    const geom = [geom0];\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringGeom = this.interiorRings[i].getGeom();\n      if (ringGeom === null) continue;\n      geom.push(ringGeom);\n    }\n    return geom;\n  }\n};\nvar MultiPolyOut = class {\n  rings;\n  polys;\n  constructor(rings) {\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n  getGeom() {\n    const geom = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polyGeom = this.polys[i].getGeom();\n      if (polyGeom === null) continue;\n      geom.push(polyGeom);\n    }\n    return geom;\n  }\n  _composePolys(rings) {\n    const polys = [];\n    for (let i = 0, iMax = rings.length; i < iMax; i++) {\n      const ring = rings[i];\n      if (ring.poly) continue;\n      if (ring.isExteriorRing()) polys.push(new PolyOut(ring));\n      else {\n        const enclosingRing = ring.enclosingRing();\n        if (!enclosingRing?.poly) polys.push(new PolyOut(enclosingRing));\n        enclosingRing?.poly?.addInterior(ring);\n      }\n    }\n    return polys;\n  }\n};\n\n// src/sweep-line.ts\nimport { SplayTreeSet as SplayTreeSet2 } from \"splaytree-ts\";\nvar SweepLine = class {\n  queue;\n  tree;\n  segments;\n  constructor(queue, comparator = Segment.compare) {\n    this.queue = queue;\n    this.tree = new SplayTreeSet2(comparator);\n    this.segments = [];\n  }\n  process(event) {\n    const segment = event.segment;\n    const newEvents = [];\n    if (event.consumedBy) {\n      if (event.isLeft) this.queue.delete(event.otherSE);\n      else this.tree.delete(segment);\n      return newEvents;\n    }\n    if (event.isLeft) this.tree.add(segment);\n    let prevSeg = segment;\n    let nextSeg = segment;\n    do {\n      prevSeg = this.tree.lastBefore(prevSeg);\n    } while (prevSeg != null && prevSeg.consumedBy != void 0);\n    do {\n      nextSeg = this.tree.firstAfter(nextSeg);\n    } while (nextSeg != null && nextSeg.consumedBy != void 0);\n    if (event.isLeft) {\n      let prevMySplitter = null;\n      if (prevSeg) {\n        const prevInter = prevSeg.getIntersection(segment);\n        if (prevInter !== null) {\n          if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n          if (!prevSeg.isAnEndpoint(prevInter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      let nextMySplitter = null;\n      if (nextSeg) {\n        const nextInter = nextSeg.getIntersection(segment);\n        if (nextInter !== null) {\n          if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n          if (!nextSeg.isAnEndpoint(nextInter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      if (prevMySplitter !== null || nextMySplitter !== null) {\n        let mySplitter = null;\n        if (prevMySplitter === null) mySplitter = nextMySplitter;\n        else if (nextMySplitter === null) mySplitter = prevMySplitter;\n        else {\n          const cmpSplitters = SweepEvent.comparePoints(\n            prevMySplitter,\n            nextMySplitter\n          );\n          mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n        }\n        this.queue.delete(segment.rightSE);\n        newEvents.push(segment.rightSE);\n        const newEventsFromSplit = segment.split(mySplitter);\n        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n          newEvents.push(newEventsFromSplit[i]);\n        }\n      }\n      if (newEvents.length > 0) {\n        this.tree.delete(segment);\n        newEvents.push(event);\n      } else {\n        this.segments.push(segment);\n        segment.prev = prevSeg;\n      }\n    } else {\n      if (prevSeg && nextSeg) {\n        const inter = prevSeg.getIntersection(nextSeg);\n        if (inter !== null) {\n          if (!prevSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n          if (!nextSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      this.tree.delete(segment);\n    }\n    return newEvents;\n  }\n  /* Safely split a segment that is currently in the datastructures\n   * IE - a segment other than the one that is currently being processed. */\n  _splitSafely(seg, pt) {\n    this.tree.delete(seg);\n    const rightSE = seg.rightSE;\n    this.queue.delete(rightSE);\n    const newEvents = seg.split(pt);\n    newEvents.push(rightSE);\n    if (seg.consumedBy === void 0) this.tree.add(seg);\n    return newEvents;\n  }\n};\n\n// src/operation.ts\nvar Operation = class {\n  type;\n  numMultiPolys;\n  run(type, geom, moreGeoms) {\n    operation.type = type;\n    const multipolys = [new MultiPolyIn(geom, true)];\n    for (let i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n      multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n    }\n    operation.numMultiPolys = multipolys.length;\n    if (operation.type === \"difference\") {\n      const subject = multipolys[0];\n      let i = 1;\n      while (i < multipolys.length) {\n        if (getBboxOverlap(multipolys[i].bbox, subject.bbox) !== null) i++;\n        else multipolys.splice(i, 1);\n      }\n    }\n    if (operation.type === \"intersection\") {\n      for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n        const mpA = multipolys[i];\n        for (let j = i + 1, jMax = multipolys.length; j < jMax; j++) {\n          if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n        }\n      }\n    }\n    const queue = new SplayTreeSet3(SweepEvent.compare);\n    for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n      const sweepEvents = multipolys[i].getSweepEvents();\n      for (let j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n        queue.add(sweepEvents[j]);\n      }\n    }\n    const sweepLine = new SweepLine(queue);\n    let evt = null;\n    if (queue.size != 0) {\n      evt = queue.first();\n      queue.delete(evt);\n    }\n    while (evt) {\n      const newEvents = sweepLine.process(evt);\n      for (let i = 0, iMax = newEvents.length; i < iMax; i++) {\n        const evt2 = newEvents[i];\n        if (evt2.consumedBy === void 0) queue.add(evt2);\n      }\n      if (queue.size != 0) {\n        evt = queue.first();\n        queue.delete(evt);\n      } else {\n        evt = null;\n      }\n    }\n    precision.reset();\n    const ringsOut = RingOut.factory(sweepLine.segments);\n    const result = new MultiPolyOut(ringsOut);\n    return result.getGeom();\n  }\n};\nvar operation = new Operation();\nvar operation_default = operation;\n\n// src/segment.ts\nvar segmentId = 0;\nvar Segment = class _Segment {\n  id;\n  leftSE;\n  rightSE;\n  rings;\n  windings;\n  ringOut;\n  consumedBy;\n  prev;\n  _prevInResult;\n  _beforeState;\n  _afterState;\n  _isInResult;\n  /* This compare() function is for ordering segments in the sweep\n   * line tree, and does so according to the following criteria:\n   *\n   * Consider the vertical line that lies an infinestimal step to the\n   * right of the right-more of the two left endpoints of the input\n   * segments. Imagine slowly moving a point up from negative infinity\n   * in the increasing y direction. Which of the two segments will that\n   * point intersect first? That segment comes 'before' the other one.\n   *\n   * If neither segment would be intersected by such a line, (if one\n   * or more of the segments are vertical) then the line to be considered\n   * is directly on the right-more of the two left inputs.\n   */\n  static compare(a, b) {\n    const alx = a.leftSE.point.x;\n    const blx = b.leftSE.point.x;\n    const arx = a.rightSE.point.x;\n    const brx = b.rightSE.point.x;\n    if (brx.isLessThan(alx)) return 1;\n    if (arx.isLessThan(blx)) return -1;\n    const aly = a.leftSE.point.y;\n    const bly = b.leftSE.point.y;\n    const ary = a.rightSE.point.y;\n    const bry = b.rightSE.point.y;\n    if (alx.isLessThan(blx)) {\n      if (bly.isLessThan(aly) && bly.isLessThan(ary)) return 1;\n      if (bly.isGreaterThan(aly) && bly.isGreaterThan(ary)) return -1;\n      const aCmpBLeft = a.comparePoint(b.leftSE.point);\n      if (aCmpBLeft < 0) return 1;\n      if (aCmpBLeft > 0) return -1;\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n      return -1;\n    }\n    if (alx.isGreaterThan(blx)) {\n      if (aly.isLessThan(bly) && aly.isLessThan(bry)) return -1;\n      if (aly.isGreaterThan(bly) && aly.isGreaterThan(bry)) return 1;\n      const bCmpALeft = b.comparePoint(a.leftSE.point);\n      if (bCmpALeft !== 0) return bCmpALeft;\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n      return 1;\n    }\n    if (aly.isLessThan(bly)) return -1;\n    if (aly.isGreaterThan(bly)) return 1;\n    if (arx.isLessThan(brx)) {\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n    }\n    if (arx.isGreaterThan(brx)) {\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n    }\n    if (!arx.eq(brx)) {\n      const ay = ary.minus(aly);\n      const ax = arx.minus(alx);\n      const by = bry.minus(bly);\n      const bx = brx.minus(blx);\n      if (ay.isGreaterThan(ax) && by.isLessThan(bx)) return 1;\n      if (ay.isLessThan(ax) && by.isGreaterThan(bx)) return -1;\n    }\n    if (arx.isGreaterThan(brx)) return 1;\n    if (arx.isLessThan(brx)) return -1;\n    if (ary.isLessThan(bry)) return -1;\n    if (ary.isGreaterThan(bry)) return 1;\n    if (a.id < b.id) return -1;\n    if (a.id > b.id) return 1;\n    return 0;\n  }\n  /* Warning: a reference to ringWindings input will be stored,\n   *  and possibly will be later modified */\n  constructor(leftSE, rightSE, rings, windings) {\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings;\n  }\n  static fromRing(pt1, pt2, ring) {\n    let leftPt, rightPt, winding;\n    const cmpPts = SweepEvent.comparePoints(pt1, pt2);\n    if (cmpPts < 0) {\n      leftPt = pt1;\n      rightPt = pt2;\n      winding = 1;\n    } else if (cmpPts > 0) {\n      leftPt = pt2;\n      rightPt = pt1;\n      winding = -1;\n    } else\n      throw new Error(\n        `Tried to create degenerate segment at [${pt1.x}, ${pt1.y}]`\n      );\n    const leftSE = new SweepEvent(leftPt, true);\n    const rightSE = new SweepEvent(rightPt, false);\n    return new _Segment(leftSE, rightSE, [ring], [winding]);\n  }\n  /* When a segment is split, the rightSE is replaced with a new sweep event */\n  replaceRightSE(newRightSE) {\n    this.rightSE = newRightSE;\n    this.rightSE.segment = this;\n    this.rightSE.otherSE = this.leftSE;\n    this.leftSE.otherSE = this.rightSE;\n  }\n  bbox() {\n    const y1 = this.leftSE.point.y;\n    const y2 = this.rightSE.point.y;\n    return {\n      ll: { x: this.leftSE.point.x, y: y1.isLessThan(y2) ? y1 : y2 },\n      ur: { x: this.rightSE.point.x, y: y1.isGreaterThan(y2) ? y1 : y2 }\n    };\n  }\n  /* A vector from the left point to the right */\n  vector() {\n    return {\n      x: this.rightSE.point.x.minus(this.leftSE.point.x),\n      y: this.rightSE.point.y.minus(this.leftSE.point.y)\n    };\n  }\n  isAnEndpoint(pt) {\n    return pt.x.eq(this.leftSE.point.x) && pt.y.eq(this.leftSE.point.y) || pt.x.eq(this.rightSE.point.x) && pt.y.eq(this.rightSE.point.y);\n  }\n  /* Compare this segment with a point.\n   *\n   * A point P is considered to be colinear to a segment if there\n   * exists a distance D such that if we travel along the segment\n   * from one * endpoint towards the other a distance D, we find\n   * ourselves at point P.\n   *\n   * Return value indicates:\n   *\n   *   1: point lies above the segment (to the left of vertical)\n   *   0: point is colinear to segment\n   *  -1: point lies below the segment (to the right of vertical)\n   */\n  comparePoint(point) {\n    return precision.orient(this.leftSE.point, point, this.rightSE.point);\n  }\n  /**\n   * Given another segment, returns the first non-trivial intersection\n   * between the two segments (in terms of sweep line ordering), if it exists.\n   *\n   * A 'non-trivial' intersection is one that will cause one or both of the\n   * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n   *\n   *   * endpoint of segA with endpoint of segB --> trivial\n   *   * endpoint of segA with point along segB --> non-trivial\n   *   * endpoint of segB with point along segA --> non-trivial\n   *   * point along segA with point along segB --> non-trivial\n   *\n   * If no non-trivial intersection exists, return null\n   * Else, return null.\n   */\n  getIntersection(other) {\n    const tBbox = this.bbox();\n    const oBbox = other.bbox();\n    const bboxOverlap = getBboxOverlap(tBbox, oBbox);\n    if (bboxOverlap === null) return null;\n    const tlp = this.leftSE.point;\n    const trp = this.rightSE.point;\n    const olp = other.leftSE.point;\n    const orp = other.rightSE.point;\n    const touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n    const touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n    const touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n    const touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n    if (touchesThisLSE && touchesOtherLSE) {\n      if (touchesThisRSE && !touchesOtherRSE) return trp;\n      if (!touchesThisRSE && touchesOtherRSE) return orp;\n      return null;\n    }\n    if (touchesThisLSE) {\n      if (touchesOtherRSE) {\n        if (tlp.x.eq(orp.x) && tlp.y.eq(orp.y)) return null;\n      }\n      return tlp;\n    }\n    if (touchesOtherLSE) {\n      if (touchesThisRSE) {\n        if (trp.x.eq(olp.x) && trp.y.eq(olp.y)) return null;\n      }\n      return olp;\n    }\n    if (touchesThisRSE && touchesOtherRSE) return null;\n    if (touchesThisRSE) return trp;\n    if (touchesOtherRSE) return orp;\n    const pt = intersection(tlp, this.vector(), olp, other.vector());\n    if (pt === null) return null;\n    if (!isInBbox(bboxOverlap, pt)) return null;\n    return precision.snap(pt);\n  }\n  /**\n   * Split the given segment into multiple segments on the given points.\n   *  * Each existing segment will retain its leftSE and a new rightSE will be\n   *    generated for it.\n   *  * A new segment will be generated which will adopt the original segment's\n   *    rightSE, and a new leftSE will be generated for it.\n   *  * If there are more than two points given to split on, new segments\n   *    in the middle will be generated with new leftSE and rightSE's.\n   *  * An array of the newly generated SweepEvents will be returned.\n   *\n   * Warning: input array of points is modified\n   */\n  split(point) {\n    const newEvents = [];\n    const alreadyLinked = point.events !== void 0;\n    const newLeftSE = new SweepEvent(point, true);\n    const newRightSE = new SweepEvent(point, false);\n    const oldRightSE = this.rightSE;\n    this.replaceRightSE(newRightSE);\n    newEvents.push(newRightSE);\n    newEvents.push(newLeftSE);\n    const newSeg = new _Segment(\n      newLeftSE,\n      oldRightSE,\n      this.rings.slice(),\n      this.windings.slice()\n    );\n    if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n      newSeg.swapEvents();\n    }\n    if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n      this.swapEvents();\n    }\n    if (alreadyLinked) {\n      newLeftSE.checkForConsuming();\n      newRightSE.checkForConsuming();\n    }\n    return newEvents;\n  }\n  /* Swap which event is left and right */\n  swapEvents() {\n    const tmpEvt = this.rightSE;\n    this.rightSE = this.leftSE;\n    this.leftSE = tmpEvt;\n    this.leftSE.isLeft = true;\n    this.rightSE.isLeft = false;\n    for (let i = 0, iMax = this.windings.length; i < iMax; i++) {\n      this.windings[i] *= -1;\n    }\n  }\n  /* Consume another segment. We take their rings under our wing\n   * and mark them as consumed. Use for perfectly overlapping segments */\n  consume(other) {\n    let consumer = this;\n    let consumee = other;\n    while (consumer.consumedBy) consumer = consumer.consumedBy;\n    while (consumee.consumedBy) consumee = consumee.consumedBy;\n    const cmp = _Segment.compare(consumer, consumee);\n    if (cmp === 0) return;\n    if (cmp > 0) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    if (consumer.prev === consumee) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    for (let i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n      const ring = consumee.rings[i];\n      const winding = consumee.windings[i];\n      const index = consumer.rings.indexOf(ring);\n      if (index === -1) {\n        consumer.rings.push(ring);\n        consumer.windings.push(winding);\n      } else consumer.windings[index] += winding;\n    }\n    consumee.rings = null;\n    consumee.windings = null;\n    consumee.consumedBy = consumer;\n    consumee.leftSE.consumedBy = consumer.leftSE;\n    consumee.rightSE.consumedBy = consumer.rightSE;\n  }\n  /* The first segment previous segment chain that is in the result */\n  prevInResult() {\n    if (this._prevInResult !== void 0) return this._prevInResult;\n    if (!this.prev) this._prevInResult = null;\n    else if (this.prev.isInResult()) this._prevInResult = this.prev;\n    else this._prevInResult = this.prev.prevInResult();\n    return this._prevInResult;\n  }\n  beforeState() {\n    if (this._beforeState !== void 0) return this._beforeState;\n    if (!this.prev)\n      this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };\n    else {\n      const seg = this.prev.consumedBy || this.prev;\n      this._beforeState = seg.afterState();\n    }\n    return this._beforeState;\n  }\n  afterState() {\n    if (this._afterState !== void 0) return this._afterState;\n    const beforeState = this.beforeState();\n    this._afterState = {\n      rings: beforeState.rings.slice(0),\n      windings: beforeState.windings.slice(0),\n      multiPolys: []\n    };\n    const ringsAfter = this._afterState.rings;\n    const windingsAfter = this._afterState.windings;\n    const mpsAfter = this._afterState.multiPolys;\n    for (let i = 0, iMax = this.rings.length; i < iMax; i++) {\n      const ring = this.rings[i];\n      const winding = this.windings[i];\n      const index = ringsAfter.indexOf(ring);\n      if (index === -1) {\n        ringsAfter.push(ring);\n        windingsAfter.push(winding);\n      } else windingsAfter[index] += winding;\n    }\n    const polysAfter = [];\n    const polysExclude = [];\n    for (let i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n      if (windingsAfter[i] === 0) continue;\n      const ring = ringsAfter[i];\n      const poly = ring.poly;\n      if (polysExclude.indexOf(poly) !== -1) continue;\n      if (ring.isExterior) polysAfter.push(poly);\n      else {\n        if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n        const index = polysAfter.indexOf(ring.poly);\n        if (index !== -1) polysAfter.splice(index, 1);\n      }\n    }\n    for (let i = 0, iMax = polysAfter.length; i < iMax; i++) {\n      const mp = polysAfter[i].multiPoly;\n      if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n    }\n    return this._afterState;\n  }\n  /* Is this segment part of the final result? */\n  isInResult() {\n    if (this.consumedBy) return false;\n    if (this._isInResult !== void 0) return this._isInResult;\n    const mpsBefore = this.beforeState().multiPolys;\n    const mpsAfter = this.afterState().multiPolys;\n    switch (operation_default.type) {\n      case \"union\": {\n        const noBefores = mpsBefore.length === 0;\n        const noAfters = mpsAfter.length === 0;\n        this._isInResult = noBefores !== noAfters;\n        break;\n      }\n      case \"intersection\": {\n        let least;\n        let most;\n        if (mpsBefore.length < mpsAfter.length) {\n          least = mpsBefore.length;\n          most = mpsAfter.length;\n        } else {\n          least = mpsAfter.length;\n          most = mpsBefore.length;\n        }\n        this._isInResult = most === operation_default.numMultiPolys && least < most;\n        break;\n      }\n      case \"xor\": {\n        const diff = Math.abs(mpsBefore.length - mpsAfter.length);\n        this._isInResult = diff % 2 === 1;\n        break;\n      }\n      case \"difference\": {\n        const isJustSubject = (mps) => mps.length === 1 && mps[0].isSubject;\n        this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n        break;\n      }\n    }\n    return this._isInResult;\n  }\n};\n\n// src/geom-in.ts\nvar RingIn = class {\n  poly;\n  isExterior;\n  segments;\n  bbox;\n  constructor(geomRing, poly, isExterior) {\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    if (typeof geomRing[0][0] !== \"number\" || typeof geomRing[0][1] !== \"number\") {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    const firstPoint = precision.snap({ x: new BigNumber2(geomRing[0][0]), y: new BigNumber2(geomRing[0][1]) });\n    this.bbox = {\n      ll: { x: firstPoint.x, y: firstPoint.y },\n      ur: { x: firstPoint.x, y: firstPoint.y }\n    };\n    let prevPoint = firstPoint;\n    for (let i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== \"number\" || typeof geomRing[i][1] !== \"number\") {\n        throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n      }\n      const point = precision.snap({ x: new BigNumber2(geomRing[i][0]), y: new BigNumber2(geomRing[i][1]) });\n      if (point.x.eq(prevPoint.x) && point.y.eq(prevPoint.y)) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = point.x;\n      if (point.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = point.y;\n      if (point.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = point.x;\n      if (point.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n    if (!firstPoint.x.eq(prevPoint.x) || !firstPoint.y.eq(prevPoint.y)) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.segments.length; i < iMax; i++) {\n      const segment = this.segments[i];\n      sweepEvents.push(segment.leftSE);\n      sweepEvents.push(segment.rightSE);\n    }\n    return sweepEvents;\n  }\n};\nvar PolyIn = class {\n  multiPoly;\n  exteriorRing;\n  interiorRings;\n  bbox;\n  constructor(geomPoly, multiPoly) {\n    if (!Array.isArray(geomPoly)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.bbox = {\n      ll: { x: this.exteriorRing.bbox.ll.x, y: this.exteriorRing.bbox.ll.y },\n      ur: { x: this.exteriorRing.bbox.ur.x, y: this.exteriorRing.bbox.ur.y }\n    };\n    this.interiorRings = [];\n    for (let i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      const ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n    this.multiPoly = multiPoly;\n  }\n  getSweepEvents() {\n    const sweepEvents = this.exteriorRing.getSweepEvents();\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringSweepEvents = this.interiorRings[i].getSweepEvents();\n      for (let j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(ringSweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\nvar MultiPolyIn = class {\n  isSubject;\n  polys;\n  bbox;\n  constructor(geom, isSubject) {\n    if (!Array.isArray(geom)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    try {\n      if (typeof geom[0][0][0] === \"number\") geom = [geom];\n    } catch (ex) {\n    }\n    this.polys = [];\n    this.bbox = {\n      ll: { x: new BigNumber2(Number.POSITIVE_INFINITY), y: new BigNumber2(Number.POSITIVE_INFINITY) },\n      ur: { x: new BigNumber2(Number.NEGATIVE_INFINITY), y: new BigNumber2(Number.NEGATIVE_INFINITY) }\n    };\n    for (let i = 0, iMax = geom.length; i < iMax; i++) {\n      const poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n    this.isSubject = isSubject;\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polySweepEvents = this.polys[i].getSweepEvents();\n      for (let j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(polySweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\n\n// src/index.ts\nvar union = (geom, ...moreGeoms) => operation_default.run(\"union\", geom, moreGeoms);\nvar intersection2 = (geom, ...moreGeoms) => operation_default.run(\"intersection\", geom, moreGeoms);\nvar xor = (geom, ...moreGeoms) => operation_default.run(\"xor\", geom, moreGeoms);\nvar difference = (geom, ...moreGeoms) => operation_default.run(\"difference\", geom, moreGeoms);\nvar setPrecision = precision.set;\nexport {\n  difference,\n  intersection2 as intersection,\n  setPrecision,\n  union,\n  xor\n};\n//# sourceMappingURL=index.js.map","// index.ts\nfunction clone(geojson) {\n  if (!geojson) {\n    throw new Error(\"geojson is required\");\n  }\n  switch (geojson.type) {\n    case \"Feature\":\n      return cloneFeature(geojson);\n    case \"FeatureCollection\":\n      return cloneFeatureCollection(geojson);\n    case \"Point\":\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiPoint\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n    case \"GeometryCollection\":\n      return cloneGeometry(geojson);\n    default:\n      throw new Error(\"unknown GeoJSON type\");\n  }\n}\nfunction cloneFeature(geojson) {\n  const cloned = { type: \"Feature\" };\n  Object.keys(geojson).forEach((key) => {\n    switch (key) {\n      case \"type\":\n      case \"properties\":\n      case \"geometry\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  cloned.properties = cloneProperties(geojson.properties);\n  if (geojson.geometry == null) {\n    cloned.geometry = null;\n  } else {\n    cloned.geometry = cloneGeometry(geojson.geometry);\n  }\n  return cloned;\n}\nfunction cloneProperties(properties) {\n  const cloned = {};\n  if (!properties) {\n    return cloned;\n  }\n  Object.keys(properties).forEach((key) => {\n    const value = properties[key];\n    if (typeof value === \"object\") {\n      if (value === null) {\n        cloned[key] = null;\n      } else if (Array.isArray(value)) {\n        cloned[key] = value.map((item) => {\n          return item;\n        });\n      } else {\n        cloned[key] = cloneProperties(value);\n      }\n    } else {\n      cloned[key] = value;\n    }\n  });\n  return cloned;\n}\nfunction cloneFeatureCollection(geojson) {\n  const cloned = { type: \"FeatureCollection\" };\n  Object.keys(geojson).forEach((key) => {\n    switch (key) {\n      case \"type\":\n      case \"features\":\n        return;\n      default:\n        cloned[key] = geojson[key];\n    }\n  });\n  cloned.features = geojson.features.map((feature) => {\n    return cloneFeature(feature);\n  });\n  return cloned;\n}\nfunction cloneGeometry(geometry) {\n  const geom = { type: geometry.type };\n  if (geometry.bbox) {\n    geom.bbox = geometry.bbox;\n  }\n  if (geometry.type === \"GeometryCollection\") {\n    geom.geometries = geometry.geometries.map((g) => {\n      return cloneGeometry(g);\n    });\n    return geom;\n  }\n  geom.coordinates = deepSlice(geometry.coordinates);\n  return geom;\n}\nfunction deepSlice(coords) {\n  const cloned = coords;\n  if (typeof cloned[0] !== \"object\") {\n    return cloned.slice();\n  }\n  return cloned.map((coord) => {\n    return deepSlice(coord);\n  });\n}\nvar turf_clone_default = clone;\nexport {\n  clone,\n  cloneProperties,\n  turf_clone_default as default\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { polygon as createPolygon, multiPolygon } from \"@turf/helpers\";\nimport * as polyclip from \"polyclip-ts\";\nimport { clone } from \"@turf/clone\";\nfunction mask(polygon, mask2, options) {\n  var _a;\n  const mutate = (_a = options == null ? void 0 : options.mutate) != null ? _a : false;\n  let maskTemplate = mask2;\n  if (mask2 && mutate === false) {\n    maskTemplate = clone(mask2);\n  }\n  const maskPolygon = createMask(maskTemplate);\n  let polygonOuters = null;\n  if (polygon.type === \"FeatureCollection\") {\n    polygonOuters = unionFc(polygon);\n  } else if (polygon.type === \"Feature\") {\n    polygonOuters = createGeomFromPolygonClippingOutput(\n      polyclip.union(polygon.geometry.coordinates)\n    );\n  } else {\n    polygonOuters = createGeomFromPolygonClippingOutput(\n      polyclip.union(polygon.coordinates)\n    );\n  }\n  polygonOuters.geometry.coordinates.forEach(function(contour) {\n    maskPolygon.geometry.coordinates.push(contour[0]);\n  });\n  return maskPolygon;\n}\nfunction unionFc(fc) {\n  const unioned = fc.features.length === 2 ? polyclip.union(\n    fc.features[0].geometry.coordinates,\n    fc.features[1].geometry.coordinates\n  ) : polyclip.union.apply(\n    polyclip,\n    fc.features.map(function(f) {\n      return f.geometry.coordinates;\n    })\n  );\n  return createGeomFromPolygonClippingOutput(unioned);\n}\nfunction createGeomFromPolygonClippingOutput(unioned) {\n  return multiPolygon(unioned);\n}\nfunction createMask(mask2) {\n  const world = [\n    [\n      [180, 90],\n      [-180, 90],\n      [-180, -90],\n      [180, -90],\n      [180, 90]\n    ]\n  ];\n  let coordinates = world;\n  if (mask2) {\n    if (mask2.type === \"Feature\") {\n      coordinates = mask2.geometry.coordinates;\n    } else {\n      coordinates = mask2.coordinates;\n    }\n  }\n  return createPolygon(coordinates);\n}\nvar turf_mask_default = mask;\nexport {\n  turf_mask_default as default,\n  mask\n};\n//# sourceMappingURL=index.js.map","<template>\n  <div class=\"map-container\">\n    <div ref=\"map\" class=\"map\">\n      <!-- this will be filled by OpenLayers -->\n      <TextControl :text=\"help\" :map=\"map\" />\n      <UserLocationControl :map=\"map\" />\n      <LayerControl :map=\"map\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MapMixin from './MapMixin.js';\nimport LayerControl from './LayerControl.vue';\nimport TextControl from './TextControl.vue';\nimport UserLocationControl from './UserLocationControl.vue';\nimport {shiftKeyOnly} from 'ol/events/condition.js';\nimport ExtentInteraction from 'ol/interaction/Extent';\nimport { containsXY } from 'ol/extent';\nimport { transformExtent } from 'ol/proj';\nimport Style, { createDefaultStyle } from 'ol/style/Style';\nimport VectorSource from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Fill from 'ol/style/Fill';\nimport VectorLayer from 'ol/layer/Vector';\nimport { toGeoJSON } from 'stac-js/src/geo.js';\nimport mask from '@turf/mask';\n\nexport default {\n  name: 'MapSelect',\n  components: {\n    LayerControl,\n    TextControl,\n    UserLocationControl\n  },\n  mixins: [\n    MapMixin\n  ],\n  props: {\n    stac: {\n      type: Object,\n      default: null\n    },\n    value: {\n      type: Array,\n      default: null\n    }\n  },\n  data() {\n    return {\n      crs: 'EPSG:4326',\n      extent: this.value,\n      dragging: false\n    };\n  },\n  computed: {\n    projectedExtent() {\n      if (this.extent) {\n        return transformExtent(this.extent, this.crs, this.map.getView().getProjection());\n      }\n      return null;\n    },\n    help() {\n      return this.extent ? this.$t('mapping.bboxSelect.remove') : this.$t('mapping.bboxSelect.add');\n    }\n  },\n  watch: {\n    async stac() {\n      await this.initMap();\n    }\n  },\n  created() {\n    // This recreates the component so that it picks up the new translations\n    this.$root.$on('uiLanguageChanged', () => {\n      // todo: update the language resources\n    });\n  },\n  async mounted() {\n    await this.initMap();\n  },\n  methods: {\n    async initMap() {\n      this.map = null;\n\n      await this.createMap(this.$refs.map, this.stac, true);\n\n      // Add extent interaction for bbox selection\n      const condition = (event) => {\n        if (event.type === 'singleclick') {\n          if (!this.extent) {\n            let pixelSize = this.map.getSize().map(xy => xy * 0.2);\n            let extent = this.map.getView().calculateExtent(pixelSize);\n            let size = [\n              extent[2] - extent[0],\n              extent[3] - extent[1]\n            ];\n            let mouseExtent = [\n              event.coordinate[0] - size[0],\n              event.coordinate[1] - size[1],\n              event.coordinate[0] + size[0],\n              event.coordinate[1] + size[1],\n            ];\n            this.interaction.setExtent(mouseExtent);\n            return false;\n          }\n          else if (containsXY(this.projectedExtent, ...event.coordinate)) {\n            this.interaction.setExtent(null);\n            this.interaction.vertexOverlay_.getSource().clear();\n            this.interaction.vertexFeature_ = null;\n          }\n        }\n        else if (this.interaction.handlingDownUpSequence || this.interaction.snapToVertex_(event.pixel, event.map)) {\n          return true;\n        }\n        return shiftKeyOnly(event);\n      };\n      this.interaction = new ExtentInteraction({\n        extent: this.projectedExtent,\n        condition,\n        boxStyle: createDefaultStyle()\n      });\n      this.interaction.on('extentchanged', this.update);\n      this.map.addInteraction(this.interaction);\n  \n      if (this.stac) {\n        this.addMask(this.stac);\n      }\n\n      let extent;\n      if (this.projectedExtent) {\n        extent = this.projectedExtent;\n      }\n      else if (this.stac) {\n        const bbox = this.stac.getBoundingBox();\n        if (bbox) {\n          extent = transformExtent(bbox, this.crs, this.map.getView().getProjection());\n        }\n      }\n      if (extent) {\n        this.map.getView().fit(extent, { padding: [50,50,50,50] });\n      }\n    },\n    addMask(stac) {\n      // Darken areas outside of the available area\n      if (!stac || typeof stac.toGeoJSON !== 'function') {\n        return;\n      }\n\n      const geojson = stac.toGeoJSON();\n      if (!geojson) {\n        return;\n      }\n\n      // Create a mask for the available area\n      const world = toGeoJSON([-180, -90, 180, 90]);\n      const masked = mask(geojson, world);\n\n      // Parse the GeoJSON\n      const features = new GeoJSON().readFeatures(masked, {\n        featureProjection: this.map.getView().getProjection(),\n      });\n\n      /// Add the mask layer, make it half-transparent\n      const maskLayer = new VectorLayer({\n        source: new VectorSource({ features }),\n        style: new Style({\n          fill: new Fill({\n            color: 'rgba(0, 0, 0, 0.5)',\n          }),\n        }),\n      });\n      this.map.addLayer(maskLayer);\n    },\n    fixX(x) {\n      return (x + 180) % 360 - 180;\n    },\n    fixY(y) {\n      return Math.max(-90, Math.min(90, y));\n    },\n    update(event) {\n      if (event.extent) {\n        this.extent = transformExtent(event.extent, this.map.getView().getProjection(), this.crs);\n        const extent = [\n          this.fixX(this.extent[0]),\n          this.fixY(this.extent[1]),\n          this.fixX(this.extent[2]),\n          this.fixY(this.extent[3])\n        ];\n        this.$emit('input', extent);\n      }\n      else {\n        this.extent = null;\n        this.$emit('input', null);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../../../node_modules/ol/ol.css\";\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapSelect.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapSelect.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MapSelect.vue?vue&type=template&id=0c1c4ba4\"\nimport script from \"./MapSelect.vue?vue&type=script&lang=js\"\nexport * from \"./MapSelect.vue?vue&type=script&lang=js\"\nimport style0 from \"./MapSelect.vue?vue&type=style&index=0&id=0c1c4ba4&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","help","map","staticRenderFns","staticStyle","$t","on","$event","preventDefault","stopPropagation","request","apply","arguments","name","components","BIconPinMapFill","mixins","ControlMixin","methods","navigator","geolocation","getCurrentPosition","position","view","getView","coords","fromLonLat","longitude","latitude","getProjection","point","Point","fit","maxZoom","error","$root","$emit","message","maximumAge","Infinity","component","ExtentEventType","EXTENTCHANGED","ExtentEvent","Event","constructor","extent","super","Extent","Pointer","options","once","un","condition_","condition","extent_","pointerHandler_","pixelTolerance_","undefined","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","Vector","source","useSpatialIndex","wrapX","style","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","updateWhileInteracting","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","snapToVertex_","pixel","pixelCoordinate","getCoordinateFromPixelInternal","sortByDistance","a","b","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","coordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","Math","sqrt","min","handlePointerMove_","mapBrowserEvent","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","setGeometry","Feature","getSource","addFeature","vertexFeature","geometry","getGeometry","setCoordinates","handleEvent","originalEvent","type","MapBrowserEventType","POINTERMOVE","handlingDownUpSequence","handleDownEvent","getOpposingPoint","x_","y_","x","y","getPointHandler","getEdgeHandler","handleDragEvent","handleUpEvent","setMap","getExtent","getMap","dispatchEvent","feature","resolution","fixedPoint","fixedP1","fixedP2","earthRadius","PI","geom","properties","feat","id","bbox","polygon","coordinates","ring","length","Error","j","multiPolygon","isNumeric","mathceil","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","BigNumber","prototype","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","c","caseChanged","e","i","isNum","len","str","_isBigNumber","s","slice","String","test","charCodeAt","indexOf","replace","search","substring","intCheck","round","DEBUG","charAt","toUpperCase","toLowerCase","push","format","n","rm","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","args","k","compare","normalise","pop","sd","r","d","ni","rd","xc","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","call","maximum","max","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","concat","multiply","base","m","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","isOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","gt","isGreaterThanOrEqualTo","gte","isLessThan","lt","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","Symbol","toStringTag","for","z","l","zs","SplayTreeNode","key","left","right","SplayTreeSetNode","SplayTreeMapNode","_SplayTreeMapNode","value","replaceValue","node","SplayTree","size","modificationCount","splayCount","splay","root","newTreeRight","newTreeLeft","current","comp","currentLeft","currentRight","splayMin","nextLeft","splayMax","nextRight","_delete","result","addNewRoot","_first","_last","clear","has","validKey","defaultCompare","wrap","getRoot","setRoot","getSize","getModificationCount","getSplayCount","setSplayCount","count","SplayTreeSet","iterator","_SplayTreeSet","isValidKey","element","deleteAll","elements","delete","forEach","f","nodes","next","done","add","addAndReturn","addAll","isEmpty","isNotEmpty","single","first","last","lastBefore","nodeRight","firstAfter","nodeLeft","retainAll","retainSet","object","lookup","intersection","other","difference","union","u","copyNode","copyChildren","node2","dest","newLeft","newRight","toSet","entries","SplayTreeSetEntryIterableIterator","keys","values","SplayTreeKeyIterableIterator","SplayTreeIterableIterator","tree","path","Array","moveNext","getValue","rebuildPath","findLeftMostDescendent","SplayTreeValueIterableIterator","SplayTreeMapEntryIterableIterator","newLast","parent","constant_default","compare_default","eps","almostEqual","orient_default","almostCollinear","area2","ax","ay","cx","cy","identity_default","snap_default","xTree","yTree","snapCoord","coord","snap","eps2","reset","orient","isInBbox","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","lowerY","upperY","crossProduct","dotProduct","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","pt","verticalIntersection","pt1","v1","pt2","v2","kross","ve","x1","x2","y1","y2","SweepEvent","_SweepEvent","isLeft","segment","otherSE","consumedBy","ptCmp","comparePoints","link","Segment","aPt","bPt","events","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","evt2","consume","getAvailableLinkedEvents","ringOut","isInResult","getLeftmostComparator","baseEvent","cache","Map","fillCache","linkedEvent","nextEvent","sine","cosine","asine","acosine","get","bsine","bcosine","RingOut","_RingOut","poly","_isExteriorRing","_enclosingRing","factory","allSegments","ringsOut","prevEvent","event","leftSE","rightSE","startingPoint","intersectionLEs","availableLEs","firstPt","lastPt","indexLE","jMax","intersectionLE","ringEvents","index","unshift","comparator","getGeom","prevPt","points","nextPt2","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","enclosing","enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevInResult","prevPrevSeg","PolyOut","exteriorRing","interiorRings","addInterior","geom0","ringGeom","MultiPolyOut","rings","polys","_composePolys","polyGeom","SweepLine","queue","process","newEvents","nextSeg","prevMySplitter","prevInter","getIntersection","isAnEndpoint","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","mySplitter","cmpSplitters","prev","inter","seg","Operation","numMultiPolys","run","moreGeoms","operation","multipolys","MultiPolyIn","subject","mpA","sweepEvents","getSweepEvents","sweepLine","operation_default","segmentId","_Segment","windings","_prevInResult","_beforeState","_afterState","_isInResult","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","by","bx","fromRing","leftPt","rightPt","winding","cmpPts","replaceRightSE","newRightSE","vector","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","alreadyLinked","newLeftSE","oldRightSE","newSeg","swapEvents","tmpEvt","consumer","consumee","tmp","beforeState","afterState","multiPolys","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","isExterior","mp","multiPoly","mpsBefore","noBefores","noAfters","least","most","diff","isJustSubject","mps","isSubject","RingIn","geomRing","isArray","firstPoint","prevPoint","PolyIn","geomPoly","ringSweepEvents","ex","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","intersection2","xor","setPrecision","geojson","cloneFeature","cloneFeatureCollection","cloneGeometry","cloned","Object","cloneProperties","item","features","geometries","g","deepSlice","mask","mask2","_a","mutate","maskTemplate","maskPolygon","createMask","polygonOuters","unionFc","createGeomFromPolygonClippingOutput","contour","fc","unioned","world","turf_mask_default","LayerControl","TextControl","UserLocationControl","MapMixin","props","stac","default","data","crs","dragging","computed","projectedExtent","transformExtent","watch","initMap","created","$on","mounted","createMap","$refs","pixelSize","xy","calculateExtent","mouseExtent","interaction","containsXY","shiftKeyOnly","ExtentInteraction","createDefaultStyle","update","addInteraction","addMask","getBoundingBox","padding","toGeoJSON","masked","GeoJSON","readFeatures","featureProjection","maskLayer","VectorLayer","VectorSource","Style","fill","Fill","color","addLayer","fixX","fixY"],"sourceRoot":""}