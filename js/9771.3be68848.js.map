{"version":3,"file":"js/9771.3be68848.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/bootstrap-vue/esm/utils/css-escape.js","webpack://@radiantearth/stac-browser/./node_modules/bootstrap-vue/esm/components/form/form-text.js","webpack://@radiantearth/stac-browser/./node_modules/bootstrap-vue/esm/components/form/form-invalid-feedback.js","webpack://@radiantearth/stac-browser/./node_modules/bootstrap-vue/esm/components/form/form-valid-feedback.js","webpack://@radiantearth/stac-browser/./node_modules/bootstrap-vue/esm/components/form-group/form-group.js"],"sourcesContent":["import { toString } from './string';\n\nvar escapeChar = function escapeChar(value) {\n  return '\\\\' + value;\n}; // The `cssEscape()` util is based on this `CSS.escape()` polyfill:\n// https://github.com/mathiasbynens/CSS.escape\n\n\nexport var cssEscape = function cssEscape(value) {\n  value = toString(value);\n  var length = value.length;\n  var firstCharCode = value.charCodeAt(0);\n  return value.split('').reduce(function (result, char, index) {\n    var charCode = value.charCodeAt(index); // If the character is NULL (U+0000), use (U+FFFD) as replacement\n\n    if (charCode === 0x0000) {\n      return result + \"\\uFFFD\";\n    } // If the character ...\n\n\n    if ( // ... is U+007F OR\n    charCode === 0x007f || // ... is in the range [\\1-\\1F] (U+0001 to U+001F) OR ...\n    charCode >= 0x0001 && charCode <= 0x001f || // ... is the first character and is in the range [0-9] (U+0030 to U+0039) OR ...\n    index === 0 && charCode >= 0x0030 && charCode <= 0x0039 || // ... is the second character and is in the range [0-9] (U+0030 to U+0039)\n    // and the first character is a `-` (U+002D) ...\n    index === 1 && charCode >= 0x0030 && charCode <= 0x0039 && firstCharCode === 0x002d) {\n      // ... https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n      return result + escapeChar(\"\".concat(charCode.toString(16), \" \"));\n    } // If the character ...\n\n\n    if ( // ... is the first character AND ...\n    index === 0 && // ... is a `-` (U+002D) AND ...\n    charCode === 0x002d && // ... there is no second character ...\n    length === 1) {\n      // ... use the escaped character\n      return result + escapeChar(char);\n    } // If the character ...\n\n\n    if ( // ... is greater than or equal to U+0080 OR ...\n    charCode >= 0x0080 || // ... is `-` (U+002D) OR ...\n    charCode === 0x002d || // ... is `_` (U+005F) OR ...\n    charCode === 0x005f || // ... is in the range [0-9] (U+0030 to U+0039) OR ...\n    charCode >= 0x0030 && charCode <= 0x0039 || // ... is in the range [A-Z] (U+0041 to U+005A) OR ...\n    charCode >= 0x0041 && charCode <= 0x005a || // ... is in the range [a-z] (U+0061 to U+007A) ...\n    charCode >= 0x0061 && charCode <= 0x007a) {\n      // ... use the character itself\n      return result + char;\n    } // Otherwise use the escaped character\n    // See: https://drafts.csswg.org/cssom/#escape-a-character\n\n\n    return result + escapeChar(char);\n  }, '');\n};","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { NAME_FORM_TEXT } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  id: makeProp(PROP_TYPE_STRING),\n  inline: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'small'),\n  textVariant: makeProp(PROP_TYPE_STRING, 'muted')\n}, NAME_FORM_TEXT); // --- Main component ---\n// @vue/component\n\nexport var BFormText = /*#__PURE__*/extend({\n  name: NAME_FORM_TEXT,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h(props.tag, mergeData(data, {\n      class: _defineProperty({\n        'form-text': !props.inline\n      }, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        id: props.id\n      }\n    }), children);\n  }\n});","import { extend, mergeData } from '../../vue';\nimport { NAME_FORM_INVALID_FEEDBACK } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  ariaLive: makeProp(PROP_TYPE_STRING),\n  forceShow: makeProp(PROP_TYPE_BOOLEAN, false),\n  id: makeProp(PROP_TYPE_STRING),\n  role: makeProp(PROP_TYPE_STRING),\n  // Tri-state prop: `true`, `false`, or `null`\n  state: makeProp(PROP_TYPE_BOOLEAN, null),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  tooltip: makeProp(PROP_TYPE_BOOLEAN, false)\n}, NAME_FORM_INVALID_FEEDBACK); // --- Main component ---\n// @vue/component\n\nexport var BFormInvalidFeedback = /*#__PURE__*/extend({\n  name: NAME_FORM_INVALID_FEEDBACK,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var tooltip = props.tooltip,\n        ariaLive = props.ariaLive;\n    var show = props.forceShow === true || props.state === false;\n    return h(props.tag, mergeData(data, {\n      class: {\n        'd-block': show,\n        'invalid-feedback': !tooltip,\n        'invalid-tooltip': tooltip\n      },\n      attrs: {\n        id: props.id || null,\n        role: props.role || null,\n        'aria-live': ariaLive || null,\n        'aria-atomic': ariaLive ? 'true' : null\n      }\n    }), children);\n  }\n});","import { extend, mergeData } from '../../vue';\nimport { NAME_FORM_VALID_FEEDBACK } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  ariaLive: makeProp(PROP_TYPE_STRING),\n  forceShow: makeProp(PROP_TYPE_BOOLEAN, false),\n  id: makeProp(PROP_TYPE_STRING),\n  role: makeProp(PROP_TYPE_STRING),\n  // Tri-state prop: `true`, `false`, or `null`\n  state: makeProp(PROP_TYPE_BOOLEAN, null),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  tooltip: makeProp(PROP_TYPE_BOOLEAN, false)\n}, NAME_FORM_VALID_FEEDBACK); // --- Main component ---\n// @vue/component\n\nexport var BFormValidFeedback = /*#__PURE__*/extend({\n  name: NAME_FORM_VALID_FEEDBACK,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var tooltip = props.tooltip,\n        ariaLive = props.ariaLive;\n    var show = props.forceShow === true || props.state === true;\n    return h(props.tag, mergeData(data, {\n      class: {\n        'd-block': show,\n        'valid-feedback': !tooltip,\n        'valid-tooltip': tooltip\n      },\n      attrs: {\n        id: props.id || null,\n        role: props.role || null,\n        'aria-live': ariaLive || null,\n        'aria-atomic': ariaLive ? 'true' : null\n      }\n    }), children);\n  }\n});","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NAME_FORM_GROUP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACE_SPLIT } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_DESCRIPTION, SLOT_NAME_INVALID_FEEDBACK, SLOT_NAME_LABEL, SLOT_NAME_VALID_FEEDBACK } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { cssEscape } from '../../utils/css-escape';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr, attemptFocus } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isBoolean } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // --- Constants ---\n\nvar INPUTS = ['input', 'select', 'textarea']; // Selector for finding first input in the form group\n\nvar INPUT_SELECTOR = INPUTS.map(function (v) {\n  return \"\".concat(v, \":not([disabled])\");\n}).join(); // A list of interactive elements (tag names) inside `<b-form-group>`'s legend\n\nvar LEGEND_INTERACTIVE_ELEMENTS = [].concat(INPUTS, ['a', 'button', 'label']); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formStateProps), getBreakpointsUpCached().reduce(function (props, breakpoint) {\n    // i.e. 'content-cols', 'content-cols-sm', 'content-cols-md', ...\n    props[suffixPropName(breakpoint, 'contentCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING); // i.e. 'label-align', 'label-align-sm', 'label-align-md', ...\n\n    props[suffixPropName(breakpoint, 'labelAlign')] = makeProp(PROP_TYPE_STRING); // i.e. 'label-cols', 'label-cols-sm', 'label-cols-md', ...\n\n    props[suffixPropName(breakpoint, 'labelCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null))), {}, {\n    description: makeProp(PROP_TYPE_STRING),\n    disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n    feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n    invalidFeedback: makeProp(PROP_TYPE_STRING),\n    label: makeProp(PROP_TYPE_STRING),\n    labelClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n    labelFor: makeProp(PROP_TYPE_STRING),\n    labelSize: makeProp(PROP_TYPE_STRING),\n    labelSrOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n    tooltip: makeProp(PROP_TYPE_BOOLEAN, false),\n    validFeedback: makeProp(PROP_TYPE_STRING),\n    validated: makeProp(PROP_TYPE_BOOLEAN, false)\n  })), NAME_FORM_GROUP);\n}; // --- Main component ---\n// We do not use `extend()` here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BFormGroup = {\n  name: NAME_FORM_GROUP,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  data: function data() {\n    return {\n      ariaDescribedby: null\n    };\n  },\n  computed: {\n    contentColProps: function contentColProps() {\n      return this.getColProps(this.$props, 'content');\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      return this.getAlignClasses(this.$props, 'label');\n    },\n    labelColProps: function labelColProps() {\n      return this.getColProps(this.$props, 'label');\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the form group will be rendered horizontal\n      // based on the existence of 'content-col' or 'label-col' props\n      return keys(this.contentColProps).length > 0 || keys(this.labelColProps).length > 0;\n    }\n  },\n  watch: {\n    ariaDescribedby: function ariaDescribedby(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.updateAriaDescribedby(newValue, oldValue);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // Set `aria-describedby` on the input specified by `labelFor`\n      // We do this in a `$nextTick()` to ensure the children have finished rendering\n      _this.updateAriaDescribedby(_this.ariaDescribedby);\n    });\n  },\n  methods: {\n    getAlignClasses: function getAlignClasses(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Align\"))] || null;\n\n        if (propValue) {\n          result.push(['text', breakpoint, propValue].filter(identity).join('-'));\n        }\n\n        return result;\n      }, []);\n    },\n    getColProps: function getColProps(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Cols\"))]; // Handle case where the prop's value is an empty string,\n        // which represents `true`\n\n        propValue = propValue === '' ? true : propValue || false;\n\n        if (!isBoolean(propValue) && propValue !== 'auto') {\n          // Convert to column size to number\n          propValue = toInteger(propValue, 0); // Ensure column size is greater than `0`\n\n          propValue = propValue > 0 ? propValue : false;\n        } // Add the prop to the list of props to give to `<b-col>`\n        // If breakpoint is '' (`${prefix}Cols` is `true`), then we use\n        // the 'col' prop to make equal width at 'xs'\n\n\n        if (propValue) {\n          result[breakpoint || (isBoolean(propValue) ? 'col' : 'cols')] = propValue;\n        }\n\n        return result;\n      }, {});\n    },\n    // Sets the `aria-describedby` attribute on the input if `labelFor` is set\n    // Optionally accepts a string of IDs to remove as the second parameter\n    // Preserves any `aria-describedby` value(s) user may have on input\n    updateAriaDescribedby: function updateAriaDescribedby(newValue, oldValue) {\n      var labelFor = this.labelFor;\n\n      if (IS_BROWSER && labelFor) {\n        // We need to escape `labelFor` since it can be user-provided\n        var $input = select(\"#\".concat(cssEscape(labelFor)), this.$refs.content);\n\n        if ($input) {\n          var attr = 'aria-describedby';\n          var newIds = (newValue || '').split(RX_SPACE_SPLIT);\n          var oldIds = (oldValue || '').split(RX_SPACE_SPLIT); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          var ids = (getAttr($input, attr) || '').split(RX_SPACE_SPLIT).filter(function (id) {\n            return !arrayIncludes(oldIds, id);\n          }).concat(newIds).filter(function (id, index, ids) {\n            return ids.indexOf(id) === index;\n          }).filter(identity).join(' ').trim();\n\n          if (ids) {\n            setAttr($input, attr, ids);\n          } else {\n            removeAttr($input, attr);\n          }\n        }\n      }\n    },\n    onLegendClick: function onLegendClick(event) {\n      // Don't do anything if `labelFor` is set\n\n      /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n      if (this.labelFor) {\n        return;\n      }\n\n      var target = event.target;\n      var tagName = target ? target.tagName : ''; // If clicked an interactive element inside legend,\n      // we just let the default happen\n\n      /* istanbul ignore next */\n\n      if (LEGEND_INTERACTIVE_ELEMENTS.indexOf(tagName) !== -1) {\n        return;\n      } // If only a single input, focus it, emulating label behaviour\n\n\n      var inputs = selectAll(INPUT_SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs.length === 1) {\n        attemptFocus(inputs[0]);\n      }\n    }\n  },\n  render: function render(h) {\n    var state = this.computedState,\n        feedbackAriaLive = this.feedbackAriaLive,\n        isHorizontal = this.isHorizontal,\n        labelFor = this.labelFor,\n        normalizeSlot = this.normalizeSlot,\n        safeId = this.safeId,\n        tooltip = this.tooltip;\n    var id = safeId();\n    var isFieldset = !labelFor;\n    var $label = h();\n    var labelContent = normalizeSlot(SLOT_NAME_LABEL) || this.label;\n    var labelId = labelContent ? safeId('_BV_label_') : null;\n\n    if (labelContent || isHorizontal) {\n      var labelSize = this.labelSize,\n          labelColProps = this.labelColProps;\n      var labelTag = isFieldset ? 'legend' : 'label';\n\n      if (this.labelSrOnly) {\n        if (labelContent) {\n          $label = h(labelTag, {\n            class: 'sr-only',\n            attrs: {\n              id: labelId,\n              for: labelFor || null\n            }\n          }, [labelContent]);\n        }\n\n        $label = h(isHorizontal ? BCol : 'div', {\n          props: isHorizontal ? labelColProps : {}\n        }, [$label]);\n      } else {\n        $label = h(isHorizontal ? BCol : labelTag, {\n          on: isFieldset ? {\n            click: this.onLegendClick\n          } : {},\n          props: isHorizontal ? _objectSpread(_objectSpread({}, labelColProps), {}, {\n            tag: labelTag\n          }) : {},\n          attrs: {\n            id: labelId,\n            for: labelFor || null,\n            // We add a `tabindex` to legend so that screen readers\n            // will properly read the `aria-labelledby` in IE\n            tabindex: isFieldset ? '-1' : null\n          },\n          class: [// Hide the focus ring on the legend\n          isFieldset ? 'bv-no-focus-ring' : '', // When horizontal or if a legend is rendered, add 'col-form-label' class\n          // for correct sizing as Bootstrap has inconsistent font styling for\n          // legend in non-horizontal form groups\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isFieldset ? 'col-form-label' : '', // Emulate label padding top of `0` on legend when not horizontal\n          !isHorizontal && isFieldset ? 'pt-0' : '', // If not horizontal and not a legend, we add 'd-block' class to label\n          // so that label-align works\n          !isHorizontal && !isFieldset ? 'd-block' : '', labelSize ? \"col-form-label-\".concat(labelSize) : '', this.labelAlignClasses, this.labelClass]\n        }, [labelContent]);\n      }\n    }\n\n    var $invalidFeedback = h();\n    var invalidFeedbackContent = normalizeSlot(SLOT_NAME_INVALID_FEEDBACK) || this.invalidFeedback;\n    var invalidFeedbackId = invalidFeedbackContent ? safeId('_BV_feedback_invalid_') : null;\n\n    if (invalidFeedbackContent) {\n      $invalidFeedback = h(BFormInvalidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: invalidFeedbackId,\n          // If state is explicitly `false`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: invalidFeedbackContent ? '-1' : null\n        }\n      }, [invalidFeedbackContent]);\n    }\n\n    var $validFeedback = h();\n    var validFeedbackContent = normalizeSlot(SLOT_NAME_VALID_FEEDBACK) || this.validFeedback;\n    var validFeedbackId = validFeedbackContent ? safeId('_BV_feedback_valid_') : null;\n\n    if (validFeedbackContent) {\n      $validFeedback = h(BFormValidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: validFeedbackId,\n          // If state is explicitly `true`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: validFeedbackContent ? '-1' : null\n        }\n      }, [validFeedbackContent]);\n    }\n\n    var $description = h();\n    var descriptionContent = normalizeSlot(SLOT_NAME_DESCRIPTION) || this.description;\n    var descriptionId = descriptionContent ? safeId('_BV_description_') : null;\n\n    if (descriptionContent) {\n      $description = h(BFormText, {\n        attrs: {\n          id: descriptionId,\n          tabindex: '-1'\n        }\n      }, [descriptionContent]);\n    } // Update `ariaDescribedby`\n    // Screen readers will read out any content linked to by `aria-describedby`\n    // even if the content is hidden with `display: none;`, hence we only include\n    // feedback IDs if the form group's state is explicitly valid or invalid\n\n\n    var ariaDescribedby = this.ariaDescribedby = [descriptionId, state === false ? invalidFeedbackId : null, state === true ? validFeedbackId : null].filter(identity).join(' ') || null;\n    var $content = h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? this.contentColProps : {},\n      ref: 'content'\n    }, [normalizeSlot(SLOT_NAME_DEFAULT, {\n      ariaDescribedby: ariaDescribedby,\n      descriptionId: descriptionId,\n      id: id,\n      labelId: labelId\n    }) || h(), $invalidFeedback, $validFeedback, $description]); // Return it wrapped in a form group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', {\n      staticClass: 'form-group',\n      class: [{\n        'was-validated': this.validated\n      }, this.stateClass],\n      attrs: {\n        id: id,\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedAriaInvalid,\n        // Only apply `aria-labelledby` if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? labelId : null\n      }\n    }, isHorizontal && isFieldset ? [h(BFormRow, [$label, $content])] : [$label, $content]);\n  }\n};"],"names":["escapeChar","value","cssEscape","length","firstCharCode","charCodeAt","split","reduce","result","char","index","charCode","concat","toString","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","props","id","inline","tag","textVariant","BFormText","name","functional","render","h","_ref","data","children","class","attrs","ariaLive","forceShow","role","state","tooltip","BFormInvalidFeedback","show","BFormValidFeedback","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","INPUTS","INPUT_SELECTOR","map","v","join","LEGEND_INTERACTIVE_ELEMENTS","generateProps","breakpoint","description","disabled","feedbackAriaLive","invalidFeedback","label","labelClass","labelFor","labelSize","labelSrOnly","validFeedback","validated","BFormGroup","mixins","this","ariaDescribedby","computed","contentColProps","getColProps","$props","labelAlignClasses","getAlignClasses","labelColProps","isHorizontal","watch","newValue","oldValue","updateAriaDescribedby","mounted","_this","$nextTick","methods","prefix","propValue","identity","$input","$refs","content","attr","newIds","oldIds","ids","array","indexOf","trim","onLegendClick","event","tagName","inputs","computedState","normalizeSlot","safeId","isFieldset","$label","labelContent","labelId","labelTag","for","on","click","tabindex","$invalidFeedback","invalidFeedbackContent","invalidFeedbackId","$validFeedback","validFeedbackContent","validFeedbackId","$description","descriptionContent","descriptionId","$content","ref","staticClass","stateClass","computedAriaInvalid"],"sourceRoot":""}