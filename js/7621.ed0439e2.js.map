{"version":3,"file":"js/7621.ed0439e2.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/ol/structs/LRUCache.js","webpack://@radiantearth/stac-browser/./node_modules/ol/DataTile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/tilecoord.js","webpack://@radiantearth/stac-browser/./node_modules/ol/TileRange.js"],"sourcesContent":["/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n"],"names":["LRUCache","constructor","highWaterMark","this","undefined","count_","entries_","oldest_","newest_","deleteOldest","entry","pop","dispose","canExpireCache","getCount","expireCache","keep","clear","containsKey","key","hasOwnProperty","forEach","f","value_","key_","newer","get","options","older","remove","getKeys","keys","Array","i","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","value","set","setSize","size","asImageLike","data","Image","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","disposedError","Error","sharedContext","toArray","image","width","height","willReadFrequently","canvas","clearRect","drawImage","getImageData","defaultSize","DataTile","state","IDLE","super","tileCoord","transition","interpolate","loader_","loader","data_","error_","size_","controller_","controller","getSize","imageData","getData","getError","load","ERROR","LOADING","changed","self","then","LOADED","catch","error","disposeInternal","abort","createOrUpdate","z","x","y","getKeyZXY","getKey","hash","hashZXY","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","TileRange","minX","maxX","minY","maxY","contains","containsTileRange","equals","extend","getHeight","getWidth","intersects"],"sourceRoot":""}