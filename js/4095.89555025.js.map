{"version":3,"file":"js/4095.89555025.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/ol/structs/LRUCache.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/BaseTile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/DataTile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/layer/Tile.js","webpack://@radiantearth/stac-browser/./node_modules/ol/tilecoord.js","webpack://@radiantearth/stac-browser/./node_modules/ol/TileRange.js"],"sourcesContent":["/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n"],"names":["LRUCache","constructor","highWaterMark","this","undefined","count_","entries_","oldest_","newest_","deleteOldest","entry","pop","dispose","canExpireCache","getCount","expireCache","keep","clear","containsKey","key","hasOwnProperty","forEach","f","value_","key_","newer","get","options","older","remove","getKeys","keys","Array","i","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","value","set","setSize","size","BaseTileLayer","baseOptions","Object","assign","cacheSize","preload","useInterimTilesOnError","super","on","once","un","cacheSize_","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","getData","pixel","asImageLike","data","Image","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","disposedError","Error","sharedContext","toArray","image","width","height","willReadFrequently","canvas","clearRect","drawImage","getImageData","defaultSize","DataTile","state","IDLE","tileCoord","transition","interpolate","loader_","loader","data_","error_","size_","controller_","controller","getSize","imageData","getError","load","ERROR","LOADING","changed","self","then","LOADED","catch","error","disposeInternal","abort","TileLayer","createRenderer","createOrUpdate","z","x","y","getKeyZXY","getKey","hash","hashZXY","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","TileRange","minX","maxX","minY","maxY","contains","containsTileRange","equals","extend","getHeight","getWidth","intersects"],"sourceRoot":""}