{"version":3,"file":"js/5591.347e9dae.js","mappings":"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E9sC,EACA,SACA,cACAgH,EACAu9B,EACAnqB,KAIRq3B,EAAQqC,WACNhH,GACE9sC,EACA,QACA,eACAgH,EACAu9B,EACAnqB,IAGJq3B,EAAQsC,UACN,GACEjH,GACE9sC,EACA,SACA,cACAgH,EACAu9B,EACAnqB,KAINqJ,EAAMuwB,SAASvC,GACf97B,EAAO8N,EAAMmtB,UACbntB,EAAMwwB,aAAQtiD,GACd8xB,EAAMqtB,UAAUr1B,GAChBq2B,GAAW,EACXJ,GAAY,EAEhB,MACEA,GAAY,CAEhB,CACF,CACF,CAEA,GAAY,GAAR57C,GAA4B,WAAfkK,EAAMlK,KAAmB,GACtCu6C,EACF5sB,EAAQ8rB,EAAOc,GAEZ5sB,GACAA,EAAM3uB,aACP2uB,EAAMitB,YACNjtB,EAAMktB,cAENltB,EAAQ,IAAIotB,GAAA,GACZtB,EAAOc,GAAgB5sB,GAEzB,MAAMywB,EACJ,kBAAmB54C,EACfwxC,GACE9sC,EACA,QACA,gBACAgH,EACAu9B,EACAnqB,GAEF,EACA+5B,EAAoB3G,GACxBV,GACE9sC,EACA,QACA,sBACAgH,EACAu9B,EACAnqB,GAEF0yB,GACE9sC,EACA,QACA,wBACAgH,EACAu9B,EACAnqB,IAIEg6B,EAAkBtH,GACtB9sC,EACA,QACA,mBACAgH,EACAu9B,EACAnqB,GAEIi6B,EAAc7G,GAClBV,GACE9sC,EACA,QACA,eACAgH,EACAu9B,EACAnqB,GAEF0yB,GACE9sC,EACA,QACA,iBACAgH,EACAu9B,EACAnqB,IAGEk6B,EAAoBxH,GACxB9sC,EACA,QACA,sBACAgH,EACAu9B,EACAnqB,GAEIm6B,EACJL,EACA,IACAC,EACA,IACAE,EACA,IACAC,EACA,IACAF,EAAgB,GAChB,IACAA,EAAgB,GAElB3C,EAAUzC,EAAeuF,GACpB9C,IACHA,EAAU,IAAI+C,GAAA,EAAO,CACnBC,OAAQP,EACRd,aAAc,CAACgB,EAAgB,IAAKA,EAAgB,IACpD7D,OACE4D,GAAqBG,EAAoB,EACrC,IAAIjF,GAAA,EAAO,CACTryC,MAAOs3C,EACP51C,MAAOy1C,S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","sources":["webpack://@radiantearth/stac-browser/./node_modules/ol/source/TileEventType.js","webpack://@radiantearth/stac-browser/./node_modules/ol/source/TileImage.js","webpack://@radiantearth/stac-browser/./node_modules/ol/source/UrlTile.js","webpack://@radiantearth/stac-browser/./node_modules/@maplibre/maplibre-gl-style-spec/dist/index.mjs","webpack://@radiantearth/stac-browser/./node_modules/mapbox-to-css-font/index.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/mapbox.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/util.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/text.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/stylefunction.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/shaders.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/apply.js","webpack://@radiantearth/stac-browser/./node_modules/ol-mapbox-style/src/MapboxVectorLayer.js"],"sourcesContent":["/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","var $version = 8;\nvar $root = {\n\tversion: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: [\n\t\t\t8\n\t\t]\n\t},\n\tname: {\n\t\ttype: \"string\"\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tcenter: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\"\n\t},\n\tcenterAltitude: {\n\t\ttype: \"number\"\n\t},\n\tzoom: {\n\t\ttype: \"number\"\n\t},\n\tbearing: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\"\n\t},\n\tpitch: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\troll: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"degrees\"\n\t},\n\tstate: {\n\t\ttype: \"state\",\n\t\t\"default\": {\n\t\t}\n\t},\n\tlight: {\n\t\ttype: \"light\"\n\t},\n\tsky: {\n\t\ttype: \"sky\"\n\t},\n\tprojection: {\n\t\ttype: \"projection\"\n\t},\n\tterrain: {\n\t\ttype: \"terrain\"\n\t},\n\tsources: {\n\t\trequired: true,\n\t\ttype: \"sources\"\n\t},\n\tsprite: {\n\t\ttype: \"sprite\"\n\t},\n\tglyphs: {\n\t\ttype: \"string\"\n\t},\n\ttransition: {\n\t\ttype: \"transition\"\n\t},\n\tlayers: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"layer\"\n\t}\n};\nvar sources = {\n\t\"*\": {\n\t\ttype: \"source\"\n\t}\n};\nvar source = [\n\t\"source_vector\",\n\t\"source_raster\",\n\t\"source_raster_dem\",\n\t\"source_geojson\",\n\t\"source_video\",\n\t\"source_image\"\n];\nvar source_vector = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvector: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\traster: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tscheme: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\txyz: {\n\t\t\t},\n\t\t\ttms: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"xyz\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_raster_dem = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\t\"raster-dem\": {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\ttype: \"string\"\n\t},\n\ttiles: {\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tbounds: {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t-180,\n\t\t\t-85.051129,\n\t\t\t180,\n\t\t\t85.051129\n\t\t]\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 22\n\t},\n\ttileSize: {\n\t\ttype: \"number\",\n\t\t\"default\": 512,\n\t\tunits: \"pixels\"\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tencoding: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tterrarium: {\n\t\t\t},\n\t\t\tmapbox: {\n\t\t\t},\n\t\t\tcustom: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"mapbox\"\n\t},\n\tredFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tblueFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tgreenFactor: {\n\t\ttype: \"number\",\n\t\t\"default\": 1\n\t},\n\tbaseShift: {\n\t\ttype: \"number\",\n\t\t\"default\": 0\n\t},\n\tvolatile: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\t\"*\": {\n\t\ttype: \"*\"\n\t}\n};\nvar source_geojson = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tgeojson: {\n\t\t\t}\n\t\t}\n\t},\n\tdata: {\n\t\trequired: true,\n\t\ttype: \"*\"\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\t\"default\": 18\n\t},\n\tattribution: {\n\t\ttype: \"string\"\n\t},\n\tbuffer: {\n\t\ttype: \"number\",\n\t\t\"default\": 128,\n\t\tmaximum: 512,\n\t\tminimum: 0\n\t},\n\tfilter: {\n\t\ttype: \"*\"\n\t},\n\ttolerance: {\n\t\ttype: \"number\",\n\t\t\"default\": 0.375\n\t},\n\tcluster: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tclusterRadius: {\n\t\ttype: \"number\",\n\t\t\"default\": 50,\n\t\tminimum: 0\n\t},\n\tclusterMaxZoom: {\n\t\ttype: \"number\"\n\t},\n\tclusterMinPoints: {\n\t\ttype: \"number\"\n\t},\n\tclusterProperties: {\n\t\ttype: \"*\"\n\t},\n\tlineMetrics: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tgenerateId: {\n\t\ttype: \"boolean\",\n\t\t\"default\": false\n\t},\n\tpromoteId: {\n\t\ttype: \"promoteId\"\n\t}\n};\nvar source_video = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvideo: {\n\t\t\t}\n\t\t}\n\t},\n\turls: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tvalue: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar source_image = {\n\ttype: {\n\t\trequired: true,\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\timage: {\n\t\t\t}\n\t\t}\n\t},\n\turl: {\n\t\trequired: true,\n\t\ttype: \"string\"\n\t},\n\tcoordinates: {\n\t\trequired: true,\n\t\ttype: \"array\",\n\t\tlength: 4,\n\t\tvalue: {\n\t\t\ttype: \"array\",\n\t\t\tlength: 2,\n\t\t\tvalue: \"number\"\n\t\t}\n\t}\n};\nvar layer = {\n\tid: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tfill: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\tsymbol: {\n\t\t\t},\n\t\t\tcircle: {\n\t\t\t},\n\t\t\theatmap: {\n\t\t\t},\n\t\t\t\"fill-extrusion\": {\n\t\t\t},\n\t\t\traster: {\n\t\t\t},\n\t\t\thillshade: {\n\t\t\t},\n\t\t\t\"color-relief\": {\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t}\n\t\t},\n\t\trequired: true\n\t},\n\tmetadata: {\n\t\ttype: \"*\"\n\t},\n\tsource: {\n\t\ttype: \"string\"\n\t},\n\t\"source-layer\": {\n\t\ttype: \"string\"\n\t},\n\tminzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tmaxzoom: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\tmaximum: 24\n\t},\n\tfilter: {\n\t\ttype: \"filter\"\n\t},\n\tlayout: {\n\t\ttype: \"layout\"\n\t},\n\tpaint: {\n\t\ttype: \"paint\"\n\t}\n};\nvar layout = [\n\t\"layout_fill\",\n\t\"layout_line\",\n\t\"layout_circle\",\n\t\"layout_heatmap\",\n\t\"layout_fill-extrusion\",\n\t\"layout_symbol\",\n\t\"layout_raster\",\n\t\"layout_hillshade\",\n\t\"layout_color-relief\",\n\t\"layout_background\"\n];\nvar layout_background = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_fill = {\n\t\"fill-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_circle = {\n\t\"circle-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_heatmap = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_line = {\n\t\"line-cap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbutt: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tsquare: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"butt\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-join\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tbevel: {\n\t\t\t},\n\t\t\tround: {\n\t\t\t},\n\t\t\tmiter: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"miter\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-miter-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"miter\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-round-limit\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.05,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"line-join\": \"round\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_symbol = {\n\t\"symbol-placement\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tpoint: {\n\t\t\t},\n\t\t\tline: {\n\t\t\t},\n\t\t\t\"line-center\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"point\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 250,\n\t\tminimum: 1,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"symbol-placement\": \"line\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-avoid-edges\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"symbol-sort-key\": {\n\t\ttype: \"number\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"symbol-z-order\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\t\"viewport-y\": {\n\t\t\t},\n\t\t\tsource: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"!\": \"icon-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tunits: \"factor of the original icon size\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-text-fit\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\twidth: {\n\t\t\t},\n\t\t\theight: {\n\t\t\t},\n\t\t\tboth: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-text-fit-padding\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 4,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"icon-text-fit\": [\n\t\t\t\t\t\"both\",\n\t\t\t\t\t\"width\",\n\t\t\t\t\t\"height\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-image\": {\n\t\ttype: \"resolvedImage\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-padding\": {\n\t\ttype: \"padding\",\n\t\t\"default\": [\n\t\t\t2\n\t\t],\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t{\n\t\t\t\t\"icon-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotation-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t},\n\t\t\t\"viewport-glyph\": {\n\t\t\t},\n\t\t\tauto: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"auto\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-field\": {\n\t\ttype: \"formatted\",\n\t\t\"default\": \"\",\n\t\ttokens: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-font\": {\n\t\ttype: \"array\",\n\t\tvalue: \"string\",\n\t\t\"default\": [\n\t\t\t\"Open Sans Regular\",\n\t\t\t\"Arial Unicode MS Regular\"\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-size\": {\n\t\ttype: \"number\",\n\t\t\"default\": 16,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 10,\n\t\tminimum: 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-line-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1.2,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-letter-spacing\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tunits: \"ems\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-justify\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tauto: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-radial-offset\": {\n\t\ttype: \"number\",\n\t\tunits: \"ems\",\n\t\t\"default\": 0,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\t\"property-type\": \"data-driven\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t}\n\t},\n\t\"text-variable-anchor\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-variable-anchor-offset\": {\n\t\ttype: \"variableAnchorOffsetCollection\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tcenter: {\n\t\t\t},\n\t\t\tleft: {\n\t\t\t},\n\t\t\tright: {\n\t\t\t},\n\t\t\ttop: {\n\t\t\t},\n\t\t\tbottom: {\n\t\t\t},\n\t\t\t\"top-left\": {\n\t\t\t},\n\t\t\t\"top-right\": {\n\t\t\t},\n\t\t\t\"bottom-left\": {\n\t\t\t},\n\t\t\t\"bottom-right\": {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"center\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-variable-anchor\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-max-angle\": {\n\t\ttype: \"number\",\n\t\t\"default\": 45,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-writing-mode\": {\n\t\ttype: \"array\",\n\t\tvalue: \"enum\",\n\t\tvalues: {\n\t\t\thorizontal: {\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"point\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\tunits: \"degrees\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-padding\": {\n\t\ttype: \"number\",\n\t\t\"default\": 2,\n\t\tminimum: 0,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-keep-upright\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"text-rotation-alignment\": \"map\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"symbol-placement\": [\n\t\t\t\t\t\"line\",\n\t\t\t\t\t\"line-center\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-transform\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnone: {\n\t\t\t},\n\t\t\tuppercase: {\n\t\t\t},\n\t\t\tlowercase: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"none\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-offset\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tunits: \"ems\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-radial-offset\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-allow-overlap\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t{\n\t\t\t\t\"!\": \"text-overlap\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-overlap\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tnever: {\n\t\t\t},\n\t\t\talways: {\n\t\t\t},\n\t\t\tcooperative: {\n\t\t\t}\n\t\t},\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-ignore-placement\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-optional\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": false,\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_raster = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar layout_hillshade = {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n};\nvar filter = {\n\ttype: \"array\",\n\tvalue: \"*\"\n};\nvar filter_operator = {\n\ttype: \"enum\",\n\tvalues: {\n\t\t\"==\": {\n\t\t},\n\t\t\"!=\": {\n\t\t},\n\t\t\">\": {\n\t\t},\n\t\t\">=\": {\n\t\t},\n\t\t\"<\": {\n\t\t},\n\t\t\"<=\": {\n\t\t},\n\t\t\"in\": {\n\t\t},\n\t\t\"!in\": {\n\t\t},\n\t\tall: {\n\t\t},\n\t\tany: {\n\t\t},\n\t\tnone: {\n\t\t},\n\t\thas: {\n\t\t},\n\t\t\"!has\": {\n\t\t}\n\t}\n};\nvar geometry_type = {\n\ttype: \"enum\",\n\tvalues: {\n\t\tPoint: {\n\t\t},\n\t\tLineString: {\n\t\t},\n\t\tPolygon: {\n\t\t}\n\t}\n};\nvar function_stop = {\n\ttype: \"array\",\n\tminimum: 0,\n\tmaximum: 24,\n\tvalue: [\n\t\t\"number\",\n\t\t\"color\"\n\t],\n\tlength: 2\n};\nvar expression$1 = {\n\ttype: \"array\",\n\tvalue: \"*\",\n\tminimum: 1\n};\nvar light = {\n\tanchor: {\n\t\ttype: \"enum\",\n\t\t\"default\": \"viewport\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tposition: {\n\t\ttype: \"array\",\n\t\t\"default\": [\n\t\t\t1.15,\n\t\t\t210,\n\t\t\t30\n\t\t],\n\t\tlength: 3,\n\t\tvalue: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t},\n\tcolor: {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\tintensity: {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar sky = {\n\t\"sky-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#88C6FC\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-color\": {\n\t\ttype: \"color\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": \"#ffffff\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"fog-ground-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"horizon-fog-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"sky-horizon-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t},\n\t\"atmosphere-blend\": {\n\t\ttype: \"number\",\n\t\t\"property-type\": \"data-constant\",\n\t\t\"default\": 0.8,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\ttransition: true\n\t}\n};\nvar terrain = {\n\tsource: {\n\t\ttype: \"string\",\n\t\trequired: true\n\t},\n\texaggeration: {\n\t\ttype: \"number\",\n\t\tminimum: 0,\n\t\t\"default\": 1\n\t}\n};\nvar projection = {\n\ttype: {\n\t\ttype: \"projectionDefinition\",\n\t\t\"default\": \"mercator\",\n\t\t\"property-type\": \"data-constant\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t}\n\t}\n};\nvar paint = [\n\t\"paint_fill\",\n\t\"paint_line\",\n\t\"paint_circle\",\n\t\"paint_heatmap\",\n\t\"paint_fill-extrusion\",\n\t\"paint_symbol\",\n\t\"paint_raster\",\n\t\"paint_hillshade\",\n\t\"paint_color-relief\",\n\t\"paint_background\"\n];\nvar paint_fill = {\n\t\"fill-antialias\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-outline-color\": {\n\t\ttype: \"color\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"fill-antialias\": true\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t}\n};\nvar paint_line = {\n\t\"line-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"line-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"line-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-gap-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-offset\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"line-dasharray\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"line widths\",\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"line-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"line-gradient\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"line-dasharray\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"!\": \"line-pattern\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tsource: \"geojson\",\n\t\t\t\thas: {\n\t\t\t\t\tlineMetrics: true\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"line-progress\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n};\nvar paint_circle = {\n\t\"circle-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 5,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"circle-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-scale\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-pitch-alignment\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"circle-stroke-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"circle-stroke-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t}\n};\nvar paint_heatmap = {\n\t\"heatmap-radius\": {\n\t\ttype: \"number\",\n\t\t\"default\": 30,\n\t\tminimum: 1,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-weight\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"heatmap-intensity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"heatmap-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": [\n\t\t\t\"interpolate\",\n\t\t\t[\n\t\t\t\t\"linear\"\n\t\t\t],\n\t\t\t[\n\t\t\t\t\"heatmap-density\"\n\t\t\t],\n\t\t\t0,\n\t\t\t\"rgba(0, 0, 255, 0)\",\n\t\t\t0.1,\n\t\t\t\"royalblue\",\n\t\t\t0.3,\n\t\t\t\"cyan\",\n\t\t\t0.5,\n\t\t\t\"lime\",\n\t\t\t0.7,\n\t\t\t\"yellow\",\n\t\t\t1,\n\t\t\t\"red\"\n\t\t],\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"heatmap-density\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t},\n\t\"heatmap-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_symbol = {\n\t\"icon-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"icon-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"icon-image\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"icon-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"icon-image\",\n\t\t\t\"icon-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\toverridable: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"rgba(0, 0, 0, 0)\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-width\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-halo-blur\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"text-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\trequires: [\n\t\t\t\"text-field\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"text-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"text-field\",\n\t\t\t\"text-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_raster = {\n\t\"raster-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-hue-rotate\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tperiod: 360,\n\t\ttransition: true,\n\t\tunits: \"degrees\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-min\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-brightness-max\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-saturation\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-contrast\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: -1,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-resampling\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tlinear: {\n\t\t\t},\n\t\t\tnearest: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"linear\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"raster-fade-duration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\ttransition: false,\n\t\tunits: \"milliseconds\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_hillshade = {\n\t\"hillshade-illumination-direction\": {\n\t\ttype: \"numberArray\",\n\t\t\"default\": 335,\n\t\tminimum: 0,\n\t\tmaximum: 359,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-altitude\": {\n\t\ttype: \"numberArray\",\n\t\t\"default\": 45,\n\t\tminimum: 0,\n\t\tmaximum: 90,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-illumination-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"viewport\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-exaggeration\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0.5,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-shadow-color\": {\n\t\ttype: \"colorArray\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-highlight-color\": {\n\t\ttype: \"colorArray\",\n\t\t\"default\": \"#FFFFFF\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-accent-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"hillshade-method\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tstandard: {\n\t\t\t},\n\t\t\tbasic: {\n\t\t\t},\n\t\t\tcombined: {\n\t\t\t},\n\t\t\tigor: {\n\t\t\t},\n\t\t\tmultidirectional: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"standard\",\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar paint_background = {\n\t\"background-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"background-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"background-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded\"\n\t},\n\t\"background-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n};\nvar transition = {\n\tduration: {\n\t\ttype: \"number\",\n\t\t\"default\": 300,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t},\n\tdelay: {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"milliseconds\"\n\t}\n};\nvar promoteId = {\n\t\"*\": {\n\t\ttype: \"string\"\n\t}\n};\nvar v8Spec = {\n\t$version: $version,\n\t$root: $root,\n\tsources: sources,\n\tsource: source,\n\tsource_vector: source_vector,\n\tsource_raster: source_raster,\n\tsource_raster_dem: source_raster_dem,\n\tsource_geojson: source_geojson,\n\tsource_video: source_video,\n\tsource_image: source_image,\n\tlayer: layer,\n\tlayout: layout,\n\tlayout_background: layout_background,\n\tlayout_fill: layout_fill,\n\tlayout_circle: layout_circle,\n\tlayout_heatmap: layout_heatmap,\n\t\"layout_fill-extrusion\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tlayout_line: layout_line,\n\tlayout_symbol: layout_symbol,\n\tlayout_raster: layout_raster,\n\tlayout_hillshade: layout_hillshade,\n\t\"layout_color-relief\": {\n\tvisibility: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tvisible: {\n\t\t\t},\n\t\t\tnone: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"visible\",\n\t\t\"property-type\": \"constant\"\n\t}\n},\n\tfilter: filter,\n\tfilter_operator: filter_operator,\n\tgeometry_type: geometry_type,\n\t\"function\": {\n\texpression: {\n\t\ttype: \"expression\"\n\t},\n\tstops: {\n\t\ttype: \"array\",\n\t\tvalue: \"function_stop\"\n\t},\n\tbase: {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0\n\t},\n\tproperty: {\n\t\ttype: \"string\",\n\t\t\"default\": \"$zoom\"\n\t},\n\ttype: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tidentity: {\n\t\t\t},\n\t\t\texponential: {\n\t\t\t},\n\t\t\tinterval: {\n\t\t\t},\n\t\t\tcategorical: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"exponential\"\n\t},\n\tcolorSpace: {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\trgb: {\n\t\t\t},\n\t\t\tlab: {\n\t\t\t},\n\t\t\thcl: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"rgb\"\n\t},\n\t\"default\": {\n\t\ttype: \"*\",\n\t\trequired: false\n\t}\n},\n\tfunction_stop: function_stop,\n\texpression: expression$1,\n\tlight: light,\n\tsky: sky,\n\tterrain: terrain,\n\tprojection: projection,\n\tpaint: paint,\n\tpaint_fill: paint_fill,\n\t\"paint_fill-extrusion\": {\n\t\"fill-extrusion-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-color\": {\n\t\ttype: \"color\",\n\t\t\"default\": \"#000000\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t{\n\t\t\t\t\"!\": \"fill-extrusion-pattern\"\n\t\t\t}\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-translate\": {\n\t\ttype: \"array\",\n\t\tvalue: \"number\",\n\t\tlength: 2,\n\t\t\"default\": [\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\ttransition: true,\n\t\tunits: \"pixels\",\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-translate-anchor\": {\n\t\ttype: \"enum\",\n\t\tvalues: {\n\t\t\tmap: {\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t}\n\t\t},\n\t\t\"default\": \"map\",\n\t\trequires: [\n\t\t\t\"fill-extrusion-translate\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"fill-extrusion-pattern\": {\n\t\ttype: \"resolvedImage\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"cross-faded-data-driven\"\n\t},\n\t\"fill-extrusion-height\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-base\": {\n\t\ttype: \"number\",\n\t\t\"default\": 0,\n\t\tminimum: 0,\n\t\tunits: \"meters\",\n\t\ttransition: true,\n\t\trequires: [\n\t\t\t\"fill-extrusion-height\"\n\t\t],\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\",\n\t\t\t\t\"feature\",\n\t\t\t\t\"feature-state\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-driven\"\n\t},\n\t\"fill-extrusion-vertical-gradient\": {\n\t\ttype: \"boolean\",\n\t\t\"default\": true,\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: false,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t}\n},\n\tpaint_line: paint_line,\n\tpaint_circle: paint_circle,\n\tpaint_heatmap: paint_heatmap,\n\tpaint_symbol: paint_symbol,\n\tpaint_raster: paint_raster,\n\tpaint_hillshade: paint_hillshade,\n\t\"paint_color-relief\": {\n\t\"color-relief-opacity\": {\n\t\ttype: \"number\",\n\t\t\"default\": 1,\n\t\tminimum: 0,\n\t\tmaximum: 1,\n\t\ttransition: true,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"zoom\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"data-constant\"\n\t},\n\t\"color-relief-color\": {\n\t\ttype: \"color\",\n\t\ttransition: false,\n\t\texpression: {\n\t\t\tinterpolated: true,\n\t\t\tparameters: [\n\t\t\t\t\"elevation\"\n\t\t\t]\n\t\t},\n\t\t\"property-type\": \"color-ramp\"\n\t}\n},\n\tpaint_background: paint_background,\n\ttransition: transition,\n\t\"property-type\": {\n\t\"data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"cross-faded-data-driven\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"color-ramp\": {\n\t\ttype: \"property-type\"\n\t},\n\t\"data-constant\": {\n\t\ttype: \"property-type\"\n\t},\n\tconstant: {\n\t\ttype: \"property-type\"\n\t}\n},\n\tpromoteId: promoteId\n};\n\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a, b) {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object'))\n            return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length)\n            return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand(commands, command) {\n    commands.push(command);\n}\nfunction addSource(sourceId, after, commands) {\n    addCommand(commands, { command: 'addSource', args: [sourceId, after[sourceId]] });\n}\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    addCommand(commands, { command: 'removeSource', args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop))\n            continue;\n        if (prop !== 'data' && !deepEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n    let sourceId;\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId))\n            continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        }\n        else if (!deepEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, { command: 'setGeoJSONSourceData', args: [sourceId, after[sourceId].data] });\n            }\n            else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop))\n            continue;\n        if (!deepEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n    let layerId;\n    let beforeLayer;\n    let afterLayer;\n    let insertBeforeLayerId;\n    let prop;\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n        if (tracker[tracker.length - 1 - i] === layerId)\n            continue;\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        }\n        else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, { command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || deepEqual(beforeLayer, afterLayer))\n            continue;\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!deepEqual(beforeLayer.source, afterLayer.source) || !deepEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !deepEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, { command: 'removeLayer', args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, { command: 'addLayer', args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!deepEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, { command: 'setFilter', args: [layerId, afterLayer.filter] });\n        }\n        if (!deepEqual(beforeLayer.minzoom, afterLayer.minzoom) || !deepEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, { command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop))\n                continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom')\n                continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            }\n            else if (!deepEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, { command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diff(before, after) {\n    if (!before)\n        return [{ command: 'setStyle', args: [after] }];\n    let commands = [];\n    try {\n        // Handle changes to top-level properties\n        if (!deepEqual(before.version, after.version)) {\n            return [{ command: 'setStyle', args: [after] }];\n        }\n        if (!deepEqual(before.center, after.center)) {\n            commands.push({ command: 'setCenter', args: [after.center] });\n        }\n        if (!deepEqual(before.state, after.state)) {\n            commands.push({ command: 'setGlobalState', args: [after.state] });\n        }\n        if (!deepEqual(before.centerAltitude, after.centerAltitude)) {\n            commands.push({ command: 'setCenterAltitude', args: [after.centerAltitude] });\n        }\n        if (!deepEqual(before.zoom, after.zoom)) {\n            commands.push({ command: 'setZoom', args: [after.zoom] });\n        }\n        if (!deepEqual(before.bearing, after.bearing)) {\n            commands.push({ command: 'setBearing', args: [after.bearing] });\n        }\n        if (!deepEqual(before.pitch, after.pitch)) {\n            commands.push({ command: 'setPitch', args: [after.pitch] });\n        }\n        if (!deepEqual(before.roll, after.roll)) {\n            commands.push({ command: 'setRoll', args: [after.roll] });\n        }\n        if (!deepEqual(before.sprite, after.sprite)) {\n            commands.push({ command: 'setSprite', args: [after.sprite] });\n        }\n        if (!deepEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: 'setGlyphs', args: [after.glyphs] });\n        }\n        if (!deepEqual(before.transition, after.transition)) {\n            commands.push({ command: 'setTransition', args: [after.transition] });\n        }\n        if (!deepEqual(before.light, after.light)) {\n            commands.push({ command: 'setLight', args: [after.light] });\n        }\n        if (!deepEqual(before.terrain, after.terrain)) {\n            commands.push({ command: 'setTerrain', args: [after.terrain] });\n        }\n        if (!deepEqual(before.sky, after.sky)) {\n            commands.push({ command: 'setSky', args: [after.sky] });\n        }\n        if (!deepEqual(before.projection, after.projection)) {\n            commands.push({ command: 'setProjection', args: [after.projection] });\n        }\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({ command: 'removeLayer', args: [layer.id] });\n                }\n                else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n    }\n    catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: 'setStyle', args: [after] }];\n    }\n    return commands;\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier)\n            this.identifier = identifier;\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\nclass ParsingError {\n    constructor(error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n\nfunction extendBy(output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n\nclass ExpressionParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${name} not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ProjectionDefinitionType = { kind: 'projectionDefinition' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst PaddingType = { kind: 'padding' };\nconst ColorArrayType = { kind: 'colorArray' };\nconst NumberArrayType = { kind: 'numberArray' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nconst VariableAnchorOffsetCollectionType = { kind: 'variableAnchorOffsetCollection' };\nfunction array(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction typeToString(type) {\n    if (type.kind === 'array') {\n        const itemType = typeToString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    }\n    else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ProjectionDefinitionType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    NumberArrayType,\n    ColorArrayType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    }\n    else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    }\n    else if (expected.kind === t.kind) {\n        return null;\n    }\n    else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${typeToString(expected)} but found ${typeToString(t)} instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        }\n        else if (t === 'array') {\n            return Array.isArray(provided);\n        }\n        else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        }\n        else {\n            return t === typeof provided;\n        }\n    });\n}\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nfunction verifyType(provided, sample) {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422, Yn = 1, Zn = 0.82521, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI;\nfunction constrainAngle(angle) {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nfunction rgbToLab([r, g, b, alpha]) {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    }\n    else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\nfunction rgb2xyz(x) {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\nfunction xyz2lab(t) {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction labToRgb([l, a, b, alpha]) {\n    let y = (l + 16) / 116, x = isNaN(a) ? y : y + a / 500, z = isNaN(b) ? y : y - b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\nfunction xyz2rgb(x) {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\nfunction lab2xyz(t) {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\nfunction rgbToHcl(rgbColor) {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\nfunction hclToRgb([h, c, l, alpha]) {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nfunction hslToRgb([h, s, l, alpha]) {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n    return [f(0), f(8), f(4), alpha];\n}\n\n// polyfill for Object.hasOwn\nconst hasOwnProperty = Object.hasOwn ||\n    function hasOwnProperty(object, key) {\n        return Object.prototype.hasOwnProperty.call(object, key);\n    };\nfunction getOwn(object, key) {\n    return hasOwnProperty(object, key) ? object[key] : undefined;\n}\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nfunction parseCssColor(input) {\n    input = input.toLowerCase().trim();\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = getOwn(namedColors, input);\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n            r, // <numeric>\n            rp, // %         (optional)\n            f1, // ,         (optional)\n            g, // <numeric>\n            gp, // %         (optional)\n            f2, // ,         (optional)\n            b, // <numeric>\n            bp, // %         (optional)\n            f3, // ,|/       (optional)\n            a, // <numeric> (optional)\n            ap, // %         (optional)\n            ] = rgbMatch;\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,') {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue = (valFormat === '%%%') ? 100 :\n                    (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [_, // eslint-disable-line @typescript-eslint/no-unused-vars\n        h, // <numeric>\n        f1, // ,         (optional)\n        s, // <numeric>\n        f2, // ,         (optional)\n        l, // <numeric>\n        f3, // ,|/       (optional)\n        a, // <numeric> (optional)\n        ap, // %         (optional)\n        ] = hslMatch;\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,') {\n            const hsla = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\nfunction parseHex(hex) {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\nfunction parseAlpha(a, asPercentage) {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\nfunction clamp(n, min, max) {\n    return Math.min(Math.max(min, n), max);\n}\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array) {\n    return !array.some(Number.isNaN);\n}\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n\nfunction interpolateNumber(from, to, t) {\n    return from + t * (to - from);\n}\nfunction interpolateArray(from, to, t) {\n    return from.map((d, i) => {\n        return interpolateNumber(d, to[i], t);\n    });\n}\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nfunction isSupportedInterpolationColorSpace(colorSpace) {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r, g, b, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return;\n        }\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb() {\n        const { r, g, b, a } = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl() {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab() {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    overwriteGetter(getterKey, lazyValue) {\n        Object.defineProperty(this, getterKey, { value: lazyValue });\n        return lazyValue;\n    }\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        switch (spaceKey) {\n            case 'rgb': {\n                const [r, g, b, alpha] = interpolateArray(from.rgb, to.rgb, t);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'hcl': {\n                const [hue0, chroma0, light0, alphaF] = from.hcl;\n                const [hue1, chroma1, light1, alphaT] = to.hcl;\n                // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n                let hue, chroma;\n                if (!isNaN(hue0) && !isNaN(hue1)) {\n                    let dh = hue1 - hue0;\n                    if (hue1 > hue0 && dh > 180) {\n                        dh -= 360;\n                    }\n                    else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                        dh += 360;\n                    }\n                    hue = hue0 + t * dh;\n                }\n                else if (!isNaN(hue0)) {\n                    hue = hue0;\n                    if (light1 === 1 || light1 === 0)\n                        chroma = chroma0;\n                }\n                else if (!isNaN(hue1)) {\n                    hue = hue1;\n                    if (light0 === 1 || light0 === 0)\n                        chroma = chroma1;\n                }\n                else {\n                    hue = NaN;\n                }\n                const [r, g, b, alpha] = hclToRgb([\n                    hue,\n                    chroma !== null && chroma !== void 0 ? chroma : interpolateNumber(chroma0, chroma1, t),\n                    interpolateNumber(light0, light1, t),\n                    interpolateNumber(alphaF, alphaT, t),\n                ]);\n                return new Color(r, g, b, alpha, false);\n            }\n            case 'lab': {\n                const [r, g, b, alpha] = labToRgb(interpolateArray(from.lab, to.lab, t));\n                return new Color(r, g, b, alpha, false);\n            }\n        }\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], { sensitivity: this.sensitivity, usage: 'search' });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n\nconst VERTICAL_ALIGN_OPTIONS = ['bottom', 'center', 'top'];\nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor, verticalAlign) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n        this.verticalAlign = verticalAlign;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n            (section.image && section.image.name.length !== 0));\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        }\n        else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n\n/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input) {\n        if (input instanceof Padding) {\n            return input;\n        }\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n        return new Padding(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new Padding(interpolateArray(from.values, to.values, t));\n    }\n}\n\n/**\n * An array of numbers. Create instances from\n * bare arrays or numeric values using the static method `NumberArray.parse`.\n * @private\n */\nclass NumberArray {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * Numeric NumberArray values\n     * @param input A NumberArray value\n     * @returns A `NumberArray` instance, or `undefined` if the input is not a valid NumberArray value.\n     */\n    static parse(input) {\n        if (input instanceof NumberArray) {\n            return input;\n        }\n        // Backwards compatibility (e.g. hillshade-illumination-direction): bare number is treated the same as array with single value.\n        if (typeof input === 'number') {\n            return new NumberArray([input]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n        return new NumberArray(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        return new NumberArray(interpolateArray(from.values, to.values, t));\n    }\n}\n\n/**\n * An array of colors. Create instances from\n * bare arrays or strings using the static method `ColorArray.parse`.\n * @private\n */\nclass ColorArray {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    /**\n     * ColorArray values\n     * @param input A ColorArray value\n     * @returns A `ColorArray` instance, or `undefined` if the input is not a valid ColorArray value.\n     */\n    static parse(input) {\n        if (input instanceof ColorArray) {\n            return input;\n        }\n        // Backwards compatibility (e.g. hillshade-shadow-color): bare Color is treated the same as array with single value.\n        if (typeof input === 'string') {\n            const parsed_val = Color.parse(input);\n            if (!parsed_val) {\n                return undefined;\n            }\n            return new ColorArray([parsed_val]);\n        }\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n        const colors = [];\n        for (const val of input) {\n            if (typeof val !== 'string') {\n                return undefined;\n            }\n            const parsed_val = Color.parse(val);\n            if (!parsed_val) {\n                return undefined;\n            }\n            colors.push(parsed_val);\n        }\n        return new ColorArray(colors);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t, spaceKey = 'rgb') {\n        const colors = [];\n        if (from.values.length != to.values.length) {\n            throw new Error(`colorArray: Arrays have mismatched length (${from.values.length} vs. ${to.values.length}), cannot interpolate.`);\n        }\n        for (let i = 0; i < from.values.length; i++) {\n            colors.push(Color.interpolate(from.values[i], to.values[i], t, spaceKey));\n        }\n        return new ColorArray(colors);\n    }\n}\n\nclass RuntimeError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'RuntimeError';\n    }\n    toJSON() {\n        return this.message;\n    }\n}\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    constructor(values) {\n        this.values = values.slice();\n    }\n    static parse(input) {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n        return new VariableAnchorOffsetCollection(input);\n    }\n    toString() {\n        return JSON.stringify(this.values);\n    }\n    static interpolate(from, to, t) {\n        const fromValues = from.values;\n        const toValues = to.values;\n        if (fromValues.length !== toValues.length) {\n            throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n        }\n        const output = [];\n        for (let i = 0; i < fromValues.length; i += 2) {\n            // Anchor entries must match\n            if (fromValues[i] !== toValues[i]) {\n                throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n            }\n            output.push(fromValues[i]);\n            // Interpolate the offset values for each anchor\n            const [fx, fy] = fromValues[i + 1];\n            const [tx, ty] = toValues[i + 1];\n            output.push([interpolateNumber(fx, tx, t), interpolateNumber(fy, ty, t)]);\n        }\n        return new VariableAnchorOffsetCollection(output);\n    }\n}\n\nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null; // treat empty values as no image\n        return new ResolvedImage({ name, available: false });\n    }\n}\n\nclass ProjectionDefinition {\n    constructor(from, to, transition) {\n        this.from = from;\n        this.to = to;\n        this.transition = transition;\n    }\n    static interpolate(from, to, t) {\n        return new ProjectionDefinition(from, to, t);\n    }\n    static parse(input) {\n        if (input instanceof ProjectionDefinition) {\n            return input;\n        }\n        if (Array.isArray(input) && input.length === 3 && typeof input[0] === 'string' && typeof input[1] === 'string' && typeof input[2] === 'number') {\n            return new ProjectionDefinition(input[0], input[1], input[2]);\n        }\n        if (typeof input === 'object' && typeof input.from === 'string' && typeof input.to === 'string' && typeof input.transition === 'number') {\n            return new ProjectionDefinition(input.from, input.to, input.transition);\n        }\n        if (typeof input === 'string') {\n            return new ProjectionDefinition(input, input, 1);\n        }\n        return undefined;\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1))) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof ProjectionDefinition ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof NumberArray ||\n        mixed instanceof ColorArray ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    }\n    else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    }\n    else if (typeof value === 'string') {\n        return StringType;\n    }\n    else if (typeof value === 'boolean') {\n        return BooleanType;\n    }\n    else if (typeof value === 'number') {\n        return NumberType;\n    }\n    else if (value instanceof Color) {\n        return ColorType;\n    }\n    else if (value instanceof ProjectionDefinition) {\n        return ProjectionDefinitionType;\n    }\n    else if (value instanceof Collator) {\n        return CollatorType;\n    }\n    else if (value instanceof Formatted) {\n        return FormattedType;\n    }\n    else if (value instanceof Padding) {\n        return PaddingType;\n    }\n    else if (value instanceof NumberArray) {\n        return NumberArrayType;\n    }\n    else if (value instanceof ColorArray) {\n        return ColorArrayType;\n    }\n    else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    }\n    else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    }\n    else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            }\n            else if (itemType === t) {\n                continue;\n            }\n            else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array(itemType || ValueType, length);\n    }\n    else {\n        return ObjectType;\n    }\n}\nfunction valueToString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    }\n    else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    }\n    else if (value instanceof Color || value instanceof ProjectionDefinition || value instanceof Formatted || value instanceof Padding || value instanceof NumberArray || value instanceof ColorArray || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    }\n    else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (!isValue(args[1]))\n            return context.error('invalid value');\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nconst types$1 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$1) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$1[type];\n                i++;\n            }\n            else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array(itemType, N);\n        }\n        else {\n            if (!types$1[name])\n                throw new Error(`Types doesn't contain name = ${name}`);\n            type = types$1[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            }\n            else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${typeToString(this.type)}, but found ${typeToString(typeOf(value))} instead.`);\n            }\n        }\n        throw new Error();\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.');\n        const name = args[0];\n        if (!types[name])\n            throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.');\n        const type = types[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    }\n                    else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c)\n                            return c;\n                    }\n                    else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rgba value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        }\n                        else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'numberArray': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const val = NumberArray.parse(input);\n                    if (val) {\n                        return val;\n                    }\n                }\n                throw new RuntimeError(`Could not parse numberArray from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'colorArray': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const val = ColorArray.parse(input);\n                    if (val) {\n                        return val;\n                    }\n                }\n                throw new RuntimeError(`Could not parse colorArray from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null)\n                        return 0;\n                    const num = Number(value);\n                    if (isNaN(num))\n                        continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'projectionDefinition':\n                return this.args[0].evaluate(ctx);\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = new Map();\n        this.availableImages = null;\n        this.canonical = null;\n    }\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache.get(input);\n        if (!cached) {\n            cached = Color.parse(input);\n            this._parseColorCache.set(input, cached);\n        }\n        return cached;\n    }\n}\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    constructor(registry, isConstantFunc, path = [], expectedType, scope = new Scope(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            }\n            else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            }\n            else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].');\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    }\n                    else if (('projectionDefinition' === expected.kind && ['string', 'array'].includes(actual.kind)) ||\n                        ((['color', 'formatted', 'resolvedImage'].includes(expected.kind)) && ['value', 'string'].includes(actual.kind)) ||\n                        ((['padding', 'numberArray'].includes(expected.kind)) && ['value', 'number', 'array'].includes(actual.kind)) ||\n                        ('colorArray' === expected.kind && ['value', 'string', 'array'].includes(actual.kind)) ||\n                        ('variableAnchorOffsetCollection' === expected.kind && ['value', 'array'].includes(actual.kind))) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    }\n                    else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    }\n                    catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.');\n        }\n        else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.');\n        }\n        else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, this._isConstant, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\n\nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([name, value]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.');\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!haystack)\n            return false;\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(needle.type)} instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        }\n        else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${typeToString(typeOf(needle))} instead.`);\n        }\n        let fromIndex;\n        if (this.fromIndex) {\n            fromIndex = this.fromIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(haystack, ['string'])) {\n            const rawIndex = haystack.indexOf(needle, fromIndex);\n            if (rawIndex === -1) {\n                return -1;\n            }\n            else {\n                // The index may be affected by surrogate pairs, so get the length of the preceding substring.\n                return [...haystack.slice(0, rawIndex)].length;\n            }\n        }\n        else if (isValidNativeType(haystack, ['array'])) {\n            return haystack.indexOf(needle, fromIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${typeToString(typeOf(haystack))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.');\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.');\n                }\n                else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n                }\n                else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.');\n                }\n                else if (!inputType) {\n                    inputType = typeOf(label);\n                }\n                else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.');\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([test, result]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (!outputType)\n            throw new Error('Can\\'t infer output type');\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${typeToString(input.type)} instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        }\n        else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        let endIndex;\n        if (this.endIndex) {\n            endIndex = this.endIndex.evaluate(ctx);\n        }\n        if (isValidNativeType(input, ['string'])) {\n            // Indices may be affected by surrogate pairs.\n            return [...input].slice(beginIndex, endIndex).join('');\n        }\n        else if (isValidNativeType(input, ['array'])) {\n            return input.slice(beginIndex, endIndex);\n        }\n        else {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        }\n        else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        }\n        else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar unitbezier;\nvar hasRequiredUnitbezier;\n\nfunction requireUnitbezier () {\n\tif (hasRequiredUnitbezier) return unitbezier;\n\thasRequiredUnitbezier = 1;\n\n\tunitbezier = UnitBezier;\n\n\tfunction UnitBezier(p1x, p1y, p2x, p2y) {\n\t    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n\t    this.cx = 3.0 * p1x;\n\t    this.bx = 3.0 * (p2x - p1x) - this.cx;\n\t    this.ax = 1.0 - this.cx - this.bx;\n\n\t    this.cy = 3.0 * p1y;\n\t    this.by = 3.0 * (p2y - p1y) - this.cy;\n\t    this.ay = 1.0 - this.cy - this.by;\n\n\t    this.p1x = p1x;\n\t    this.p1y = p1y;\n\t    this.p2x = p2x;\n\t    this.p2y = p2y;\n\t}\n\n\tUnitBezier.prototype = {\n\t    sampleCurveX: function (t) {\n\t        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n\t        return ((this.ax * t + this.bx) * t + this.cx) * t;\n\t    },\n\n\t    sampleCurveY: function (t) {\n\t        return ((this.ay * t + this.by) * t + this.cy) * t;\n\t    },\n\n\t    sampleCurveDerivativeX: function (t) {\n\t        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n\t    },\n\n\t    solveCurveX: function (x, epsilon) {\n\t        if (epsilon === undefined) epsilon = 1e-6;\n\n\t        if (x < 0.0) return 0.0;\n\t        if (x > 1.0) return 1.0;\n\n\t        var t = x;\n\n\t        // First try a few iterations of Newton's method - normally very fast.\n\t        for (var i = 0; i < 8; i++) {\n\t            var x2 = this.sampleCurveX(t) - x;\n\t            if (Math.abs(x2) < epsilon) return t;\n\n\t            var d2 = this.sampleCurveDerivativeX(t);\n\t            if (Math.abs(d2) < 1e-6) break;\n\n\t            t = t - x2 / d2;\n\t        }\n\n\t        // Fall back to the bisection method for reliability.\n\t        var t0 = 0.0;\n\t        var t1 = 1.0;\n\t        t = x;\n\n\t        for (i = 0; i < 20; i++) {\n\t            x2 = this.sampleCurveX(t);\n\t            if (Math.abs(x2 - x) < epsilon) break;\n\n\t            if (x > x2) {\n\t                t0 = t;\n\t            } else {\n\t                t1 = t;\n\t            }\n\n\t            t = (t1 - t0) * 0.5 + t0;\n\t        }\n\n\t        return t;\n\t    },\n\n\t    solve: function (x, epsilon) {\n\t        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n\t    }\n\t};\n\treturn unitbezier;\n}\n\nvar unitbezierExports = requireUnitbezier();\nvar UnitBezier = /*@__PURE__*/getDefaultExportFromCjs(unitbezierExports);\n\nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        }\n        else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        }\n        else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        }\n        else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        }\n        else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        }\n        else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.');\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if ((operator === 'interpolate-hcl' || operator === 'interpolate-lab') && context.expectedType != ColorArrayType) {\n            outputType = ColorType;\n        }\n        else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ProjectionDefinitionType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, NumberArrayType) &&\n            !verifyType(outputType, ColorArrayType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))) {\n            return context.error(`Type ${typeToString(outputType)} is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        switch (this.operator) {\n            case 'interpolate':\n                switch (this.type.kind) {\n                    case 'number':\n                        return interpolateNumber(outputLower, outputUpper, t);\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t);\n                    case 'padding':\n                        return Padding.interpolate(outputLower, outputUpper, t);\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t);\n                    case 'numberArray':\n                        return NumberArray.interpolate(outputLower, outputUpper, t);\n                    case 'variableAnchorOffsetCollection':\n                        return VariableAnchorOffsetCollection.interpolate(outputLower, outputUpper, t);\n                    case 'array':\n                        return interpolateArray(outputLower, outputUpper, t);\n                    case 'projectionDefinition':\n                        return ProjectionDefinition.interpolate(outputLower, outputUpper, t);\n                }\n            case 'interpolate-hcl':\n                switch (this.type.kind) {\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t, 'hcl');\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t, 'hcl');\n                }\n            case 'interpolate-lab':\n                switch (this.type.kind) {\n                    case 'color':\n                        return Color.interpolate(outputLower, outputUpper, t, 'lab');\n                    case 'colorArray':\n                        return ColorArray.interpolate(outputLower, outputUpper, t, 'lab');\n                }\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nconst interpolateFactory = {\n    color: Color.interpolate,\n    number: interpolateNumber,\n    padding: Padding.interpolate,\n    numberArray: NumberArray.interpolate,\n    colorArray: ColorArray.interpolate,\n    variableAnchorOffsetCollection: VariableAnchorOffsetCollection.interpolate,\n    array: interpolateArray\n};\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType)\n            throw new Error('No output type');\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    }\n    else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.');\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${typeToString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${typeToString(rhs.type)}'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${typeToString(lhs.type)}' and '${typeToString(rhs.type)}'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                }\n                else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value') {\n                    return context.error('Cannot use collator to compare non-string types.');\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error('Expected one argument.');\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.');\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n\nclass NumberFormat {\n    constructor(number, locale, currency, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.');\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.');\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency ? 'currency' : 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.');\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error('First argument must be an image or text section.');\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                let verticalAlign = null;\n                if (arg['vertical-align']) {\n                    if (typeof arg['vertical-align'] === 'string' && !VERTICAL_ALIGN_OPTIONS.includes(arg['vertical-align'])) {\n                        return context.error(`'vertical-align' must be one of: 'bottom', 'center', 'top' but found '${arg['vertical-align']}' instead.`);\n                    }\n                    verticalAlign = context.parse(arg['vertical-align'], 1, StringType);\n                    if (!verticalAlign)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n                lastExpression.verticalAlign = verticalAlign;\n            }\n            else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.');\n                nextTokenMayBeObject = true;\n                sections.push({ content, scale: null, font: null, textColor: null, verticalAlign: null });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n            }\n            return new FormattedSection(valueToString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null, section.verticalAlign ? section.verticalAlign.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n            if (section.verticalAlign) {\n                fn(section.verticalAlign);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n\nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.');\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error('No image name provided.');\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n\nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${typeToString(input.type)} instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            // The length may be affected by surrogate pairs.\n            return [...input].length;\n        }\n        else if (Array.isArray(input)) {\n            return input.length;\n        }\n        else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${typeToString(typeOf(input))} instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst EXTENT = 8192;\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\nfunction getLngLatFromTileCoord(coord, canonical) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction lngFromMercatorXfromLng(mercatorX) {\n    return mercatorX * 360 - 180;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\nfunction latFromMercatorY(mercatorY) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\nfunction pointOnBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction segmentIntersectSegment(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings, trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1]))\n                return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon))\n            return true;\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 = (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0))\n        return true;\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const canonical = ctx.canonicalID();\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords = [];\n                for (const polygon of geojson.features) {\n                    const { type, coordinates } = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n            }\n            else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            }\n            else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nfunction quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nfunction classifyRings(rings, maxRings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0)\n            continue;\n        ring.area = Math.abs(area);\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [ring];\n        }\n        else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon)\n        polygons.push(polygon);\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings)\n                continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n    return polygons;\n}\nfunction compareAreas(a, b) {\n    return b.area - a.area;\n}\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring) {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\n// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\nclass CheapRuler {\n    constructor(lat) {\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat; // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridional radius of curvature\n    }\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX, minY, minI, minT;\n        for (let i = 0; i < line.length - 1; i++) {\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n                }\n                else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n    wrap(deg) {\n        while (deg < -180)\n            deg += 360;\n        while (deg > 180)\n            deg -= 360;\n        return deg;\n    }\n}\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\nfunction compareDistPair(a, b) {\n    return b[0] - a[0];\n}\nfunction getRangeSize(range) {\n    return range[1] - range[0] + 1;\n}\nfunction isRangeSafe(range, threshold) {\n    return range[1] >= range[0] && range[1] < threshold;\n}\nfunction splitRange(range, isLine) {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\nfunction getBBox(coords, range) {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\nfunction getPolygonBBox(polygon) {\n    const bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\nfunction isValidBBox(bbox) {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1, bbox2, ruler) {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\nfunction pointToLineDistance(point, line, ruler) {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\nfunction segmentToSegmentDistance(p1, p2, q1, q2, ruler) {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\nfunction lineToLineDistance(line1, range1, line2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\nfunction pointsToPointsDistance(points1, range1, points2, range2, ruler) {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction pointToPolygonDistance(point, polygon, ruler) {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineToPolygonDistance(line, range, polygon, ruler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\nfunction polygonIntersect(poly1, poly2) {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction polygonToPolygonDistance(polygon1, polygon2, ruler, currentMiniDist = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    }\n    else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\nfunction updateQueue(distQueue, miniDist, ruler, points, polyBBox, rangeA) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\nfunction updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, range1, range2) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points, isLine, polygon, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const range = distPair[1];\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        }\n        else {\n            const newRangesA = splitRange(range, isLine);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointSetToPointSetDistance(pointSet1, isLine1, pointSet2, isLine2, ruler, currentMiniDist = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n    const distQueue = new TinyQueue([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n            else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            }\n            else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        }\n        else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\nfunction pointToGeometryDistance(ctx, geometries) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction lineStringToGeometryDistance(ctx, geometries) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates, true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates, ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\nfunction polygonToGeometryDistance(ctx, geometries) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical));\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates, true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates, ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\nfunction toSimpleGeometry(geometry) {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\nclass Distance {\n    constructor(geojson, geometries) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            }\n            else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            }\n            else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.');\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            }\n            else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n    eachChild() { }\n    outputDefined() {\n        return true;\n    }\n}\n\nclass GlobalState {\n    constructor(key) {\n        this.type = ValueType;\n        this.key = key;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n        }\n        const key = args[1];\n        if (key === undefined || key === null) {\n            return context.error('Global state property must be defined.');\n        }\n        if (typeof key !== 'string') {\n            return context.error(`Global state property must be string, but found ${typeof args[1]} instead.`);\n        }\n        return new GlobalState(key);\n    }\n    evaluate(ctx) {\n        var _a;\n        const globalState = (_a = ctx.globals) === null || _a === void 0 ? void 0 : _a.globalState;\n        if (!globalState || Object.keys(globalState).length === 0)\n            return null;\n        return getOwn(globalState, this.key);\n    }\n    eachChild() { }\n    outputDefined() {\n        return false;\n    }\n}\n\nconst expressions$1 = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance,\n    'global-state': GlobalState\n};\n\nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => (!Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        }\n        else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(typeToString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression.register(expressions$1, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'elevation': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.elevation || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(typeToString).join(', ')})`;\n    }\n    else {\n        return `(${typeToString(signature.type)}...)`;\n    }\n}\nfunction isExpressionConstant(expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    }\n    else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    }\n    else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n    else if (expression instanceof Within) {\n        return false;\n    }\n    else if (expression instanceof Distance) {\n        return false;\n    }\n    else if (expression instanceof GlobalState) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        }\n        else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'elevation', 'line-progress', 'accumulated', 'is-supported-script']);\n}\nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'feature-state') {\n            return false;\n        }\n        else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        }\n        else if (e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id') {\n            return false;\n        }\n        else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\nfunction success(value) {\n    return { result: 'success', value };\n}\nfunction error(value) {\n    return { result: 'error', value };\n}\n\nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    }\n    else if (val instanceof String) {\n        return 'string';\n    }\n    else if (val instanceof Boolean) {\n        return 'boolean';\n    }\n    else if (Array.isArray(val)) {\n        return 'array';\n    }\n    else if (val === null) {\n        return 'null';\n    }\n    else {\n        return typeof val;\n    }\n}\n\nfunction isFunction$1(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value) && typeOf(value) === ObjectType;\n}\nfunction identityFunction(x) {\n    return x;\n}\nfunction getParseFunction(propertySpec) {\n    switch (propertySpec.type) {\n        case 'color':\n            return Color.parse;\n        case 'padding':\n            return Padding.parse;\n        case 'numberArray':\n            return NumberArray.parse;\n        case 'colorArray':\n            return ColorArray.parse;\n        default:\n            return null;\n    }\n}\nfunction getInnerFunction(type) {\n    switch (type) {\n        case 'exponential':\n            return evaluateExponentialFunction;\n        case 'interval':\n            return evaluateIntervalFunction;\n        case 'categorical':\n            return evaluateCategoricalFunction;\n        case 'identity':\n            return evaluateIdentityFunction;\n        default:\n            throw new Error(`Unknown function type \"${type}\"`);\n    }\n}\nfunction createFunction(parameters, propertySpec) {\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n    const parseFn = getParseFunction(propertySpec);\n    if (parseFn) {\n        parameters = extendBy({}, parameters);\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        }\n        else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n    const innerFun = getInnerFunction(type);\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'categorical') {\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n    }\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n        const interpolationType = { name: 'linear' };\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({ zoom }, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    }\n    else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            { name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1 } : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({ zoom }) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    }\n    else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce$1(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\nfunction coalesce$1(a, b, c) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n    if (c !== undefined)\n        return c;\n}\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce$1(evaluated, parameters.default, propertySpec.default);\n}\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    return parameters.stops[index][1];\n}\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n    // Edge cases\n    if (getType(input) !== 'number')\n        return coalesce$1(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1)\n        return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0])\n        return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0])\n        return parameters.stops[n - 1][1];\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(input, base, parameters.stops[index][0], parameters.stops[index + 1][0]);\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolateFactory[propertySpec.type] || identityFunction;\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        case 'colorArray':\n            input = ColorArray.parse(input);\n            break;\n        case 'numberArray':\n            input = NumberArray.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce$1(input, parameters.default, propertySpec.default);\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    }\n    else if (base === 1) {\n        return progress / difference;\n    }\n    else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        }\n        catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in expressions$1;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext(expressions$1, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n        this.globalStateRefs = findGlobalStateRefs(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.globalStateRefs = findGlobalStateRefs(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isZoomExpression(expression) {\n    return expression._styleExpression !== undefined;\n}\nfunction createPropertyExpression(expressionInput, propertySpec) {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    }\n    else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    }\n    else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            new ZoomConstantExpression('constant', expression.value) :\n            new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstantResult ?\n        new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) :\n        new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nclass StylePropertyFunction {\n    constructor(parameters, specification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extendBy(this, createFunction(this._parameters, this._specification));\n    }\n    static deserialize(serialized) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n    static serialize(input) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\nfunction normalizePropertyExpression(value, specification) {\n    if (isFunction$1(value)) {\n        return new StylePropertyFunction(value, specification);\n    }\n    else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n    }\n    else {\n        let constant = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        }\n        else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value);\n        }\n        else if (specification.type === 'numberArray' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = NumberArray.parse(value);\n        }\n        else if (specification.type === 'colorArray' && (typeof value === 'string' || Array.isArray(value))) {\n            constant = ColorArray.parse(value);\n        }\n        else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value);\n        }\n        else if (specification.type === 'projectionDefinition' && typeof value === 'string') {\n            constant = ProjectionDefinition.parse(value);\n        }\n        return {\n            globalStateRefs: new Set(),\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n    }\n    else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    }\n    else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        }\n        else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        }\n        else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction findGlobalStateRefs(expression, results = new Set()) {\n    if (expression instanceof GlobalState) {\n        results.add(expression.key);\n    }\n    expression.eachChild(childExpression => {\n        findGlobalStateRefs(childExpression, results);\n    });\n    return results;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        numberArray: NumberArrayType,\n        colorArray: ColorArrayType,\n        projectionDefinition: ProjectionDefinitionType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && isFunction$1(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    }\n    switch (spec.type) {\n        case 'color':\n            return Color.parse(spec.default) || null;\n        case 'padding':\n            return Padding.parse(spec.default) || null;\n        case 'numberArray':\n            return NumberArray.parse(spec.default) || null;\n        case 'colorArray':\n            return ColorArray.parse(spec.default) || null;\n        case 'variableAnchorOffsetCollection':\n            return VariableAnchorOffsetCollection.parse(spec.default) || null;\n        case 'projectionDefinition':\n            return ProjectionDefinition.parse(spec.default) || null;\n        default:\n            return (spec.default === undefined ? null : spec.default);\n    }\n}\n\nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return true;\n    }\n}\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction featureFilter(filter) {\n    if (filter === null || filter === undefined) {\n        return { filter: () => true, needGeometry: false, getGlobalStateRefs: () => new Set() };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter$1(filter);\n    }\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    }\n    else {\n        const needGeometry = geometryNeeded(filter);\n        return {\n            filter: (globalProperties, feature, canonical) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry,\n            getGlobalStateRefs: () => findGlobalStateRefs(compiled.value.expression)\n        };\n    }\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within' || filter[0] === 'distance')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter$1(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return (op !== 'any');\n    const converted = op === '==' ? convertComparisonOp$1(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp$1(filter[1], filter[2], '==')) :\n            op === '<' ||\n                op === '>' ||\n                op === '<=' ||\n                op === '>=' ? convertComparisonOp$1(filter[1], filter[2], op) :\n                op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                    op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter$1)) :\n                        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter$1).map(convertNegation)) :\n                            op === 'in' ? convertInOp$1(filter[1], filter.slice(2)) :\n                                op === '!in' ? convertNegation(convertInOp$1(filter[1], filter.slice(2))) :\n                                    op === 'has' ? convertHasOp$1(filter[1]) :\n                                        op === '!has' ? convertNegation(convertHasOp$1(filter[1])) :\n                                            true;\n    return converted;\n}\nfunction convertComparisonOp$1(property, value, op) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter$1));\n}\nfunction convertInOp$1(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            }\n            else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\nfunction convertHasOp$1(property) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\nfunction convertNegation(filter) {\n    return ['!', filter];\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evaluation error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction convertFilter(filter, expectedTypes = {}) {\n    if (isExpressionFilter(filter))\n        return filter;\n    if (!filter)\n        return true;\n    const legacyFilter = filter;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1)\n        return (legacyOp !== 'any');\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false];\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0)\n        return true;\n    if (conditions.length === 1)\n        return conditions[0];\n    return ['all', ...conditions];\n}\nfunction convertComparisonOp(property, value, op, expectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    if (expectedTypes && value !== null) {\n        const type = typeof value;\n        expectedTypes[property] = type;\n    }\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    }\n    else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n    return [op, get, value];\n}\nfunction convertInOp(property, values, negate = false) {\n    if (values.length === 0)\n        return negate;\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    }\n    else if (property === '$id') {\n        get = ['id'];\n    }\n    else {\n        get = ['get', property];\n    }\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v])];\n    }\n    else {\n        return ['any', ...values.map(v => ['==', get, v])];\n    }\n}\nfunction convertHasOp(property) {\n    if (property === '$type') {\n        return true;\n    }\n    else if (property === '$id') {\n        return ['!=', ['id'], null];\n    }\n    else {\n        return ['has', property];\n    }\n}\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    }\n    else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    }\n    else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = ['get', parameters.property];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    }\n    else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    }\n    else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    }\n    else {\n        const expression = ['step', ['zoom']];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    }\n    else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    }\n    else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    }\n    else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n    }\n    else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    }\n    else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push(['get', match[1]]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    }\n    else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n    return result;\n}\n\nfunction getPropertyReference(propertyName) {\n    for (let i = 0; i < v8Spec.layout.length; i++) {\n        for (const key in v8Spec[v8Spec.layout[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.layout[i]][key];\n        }\n    }\n    for (let i = 0; i < v8Spec.paint.length; i++) {\n        for (const key in v8Spec[v8Spec.paint[i]]) {\n            if (key === propertyName)\n                return v8Spec[v8Spec.paint[i]][key];\n        }\n    }\n    return null;\n}\nfunction eachSource(style, callback) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\nfunction eachLayer(style, callback) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\nfunction eachProperty(style, options, callback) {\n    function inner(layer, propertyType) {\n        const properties = layer[propertyType];\n        if (!properties)\n            return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n\nfunction stringify$1(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify$1(val)},`;\n        }\n        return `${str}]`;\n    }\n    const keys = Object.keys(obj).sort();\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify$1(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify$1(layer[k])}`;\n    }\n    return key;\n}\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n    for (let i = 0; i < layers.length; i++) {\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n    const result = [];\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n    return result;\n}\n\nfunction emptyStyle() {\n    const style = {};\n    const version = v8Spec['$version'];\n    for (const styleKey in v8Spec['$root']) {\n        const specification = v8Spec['$root'][styleKey];\n        if (specification.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            }\n            else {\n                if (specification.type === 'array') {\n                    value = [];\n                }\n                else {\n                    value = {};\n                }\n            }\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n    return style;\n}\n\nfunction validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    }\n    else {\n        return [];\n    }\n}\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    }\n    else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nfunction validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors = [];\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        // objectKey comes from the user controlled style input, so elementSpecKey may be e.g. \"__proto__\"\n        const elementSpec = getOwn(elementSpecs, elementSpecKey) || elementSpecs['*'];\n        let validateElement;\n        if (getOwn(elementValidators, elementSpecKey)) {\n            validateElement = elementValidators[elementSpecKey];\n        }\n        else if (getOwn(elementSpecs, elementSpecKey)) {\n            validateElement = validateSpec;\n        }\n        else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        }\n        else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n        else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n    return errors;\n}\n\nfunction validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n\nfunction validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n    return [];\n}\n\nfunction validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        }\n        else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n    return errors;\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n        let errors = [];\n        const value = options.value;\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n        return errors;\n    }\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        }\n        else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n        const reportValue = options.value !== null ? options.value : stop;\n        if (!stopKeyType) {\n            stopKeyType = type;\n        }\n        else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        }\n        else {\n            previousStopDomainValue = value;\n        }\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        }\n        else {\n            stopDomainValues[value] = true;\n        }\n        return [];\n    }\n    function validateFunctionDefault(options) {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n\nfunction validateExpression(options) {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n    const expressionObj = expression.value.expression || expression.value._styleExpression.expression;\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n    return [];\n}\n\nfunction validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n    return [];\n}\n\nfunction validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n\nfunction validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extendBy({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    }\n    else {\n        return validateNonExpressionFilter(options);\n    }\n}\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n    const styleSpec = options.styleSpec;\n    let type;\n    let errors = [];\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                }\n                else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            }\n            else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n\nfunction validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n    if (!layerSpec)\n        return [];\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(key, value, `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n    const errors = [];\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction$1(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n\nfunction validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n\nfunction validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n\nfunction validateLayer(options) {\n    let errors = [];\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    if (getType(layer) !== 'object') {\n        return [new ValidationError(key, layer, `object expected, ${getType(layer)} found`)];\n    }\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n        let parent;\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref)\n                parent = layer;\n        });\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        }\n        else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        }\n        else {\n            type = unbundle(parent.type);\n        }\n    }\n    else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        }\n        else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            }\n            else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType !== 'raster-dem' && type === 'color-relief') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            }\n            else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            }\n            else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            }\n            else if (sourceType === 'raster-dem' && (type !== 'hillshade' && type !== 'color-relief')) {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\' or \\'color-relief\\'.'));\n            }\n            else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extendBy({ layerType: type }, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n    return errors;\n}\n\nfunction validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n    return [];\n}\n\nfunction validateRasterDEMSource(options) {\n    var _a;\n    const sourceName = (_a = options.sourceName) !== null && _a !== void 0 ? _a : '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        }\n        else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n    return errors;\n}\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\nfunction validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n    const type = unbundle(value.type);\n    let errors;\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: { values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image'] }});\n    }\n}\nfunction validatePromoteId({ key, value }) {\n    if (getType(value) === 'string') {\n        return validateString({ key, value });\n    }\n    else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({ key: `${key}.${prop}`, value: value[prop] }));\n        }\n        return errors;\n    }\n}\n\nfunction validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateSky(options) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateTerrain(options) {\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n    let errors = [];\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    }\n    else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateFormatted(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validateImage(options) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n    return validateExpression(options);\n}\n\nfunction validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateNumberArray(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        const arrayElementSpec = {\n            type: 'number'\n        };\n        if (value.length < 1) {\n            return [new ValidationError(key, value, 'array length at least 1 expected, length 0 found')];\n        }\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    }\n    else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n\nfunction validateColorArray(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    if (type === 'array') {\n        if (value.length < 1) {\n            return [new ValidationError(key, value, 'array length at least 1 expected, length 0 found')];\n        }\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(validateColor({\n                key: `${key}[${i}]`,\n                value: value[i]}));\n        }\n        return errors;\n    }\n    else {\n        return validateColor({\n            key,\n            value});\n    }\n}\n\nfunction validateVariableAnchorOffsetCollection(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n    let errors = [];\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n    return errors;\n}\n\nfunction validateSprite(options) {\n    let errors = [];\n    const sprite = options.value;\n    const key = options.key;\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n    }\n    else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id))\n                errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url))\n                errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n        return errors;\n    }\n}\n\nfunction validateProjection(options) {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n    const rootType = getType(projection);\n    if (projection === undefined) {\n        return [];\n    }\n    else if (rootType !== 'object') {\n        return [new ValidationError('projection', projection, `object expected, ${rootType} found`)];\n    }\n    let errors = [];\n    for (const key in projection) {\n        if (projectionSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n        else {\n            errors = errors.concat([new ValidationError(key, projection[key], `unknown property \"${key}\"`)]);\n        }\n    }\n    return errors;\n}\n\nfunction validateProjectionDefinition(options) {\n    const key = options.key;\n    let value = options.value;\n    value = value instanceof String ? value.valueOf() : value;\n    const type = getType(value);\n    if (type === 'array' && !isProjectionDefinitionValue(value) && !isPropertyValueSpecification(value)) {\n        return [new ValidationError(key, value, `projection expected, invalid array ${JSON.stringify(value)} found`)];\n    }\n    else if (!['array', 'string'].includes(type)) {\n        return [new ValidationError(key, value, `projection expected, invalid type \"${type}\" found`)];\n    }\n    return [];\n}\nfunction isPropertyValueSpecification(value) {\n    if (['interpolate', 'step', 'literal'].includes(value[0])) {\n        return true;\n    }\n    return false;\n}\nfunction isProjectionDefinitionValue(value) {\n    return Array.isArray(value) &&\n        value.length === 3 &&\n        typeof value[0] === 'string' &&\n        typeof value[1] === 'string' &&\n        typeof value[2] === 'number';\n}\n\nfunction isObjectLiteral(anything) {\n    return Boolean(anything) && anything.constructor === Object;\n}\n\nfunction validateState(options) {\n    if (!isObjectLiteral(options.value)) {\n        return [\n            new ValidationError(options.key, options.value, `object expected, ${getType(options.value)} found`),\n        ];\n    }\n    return [];\n}\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'projection': validateProjection,\n    'projectionDefinition': validateProjectionDefinition,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'numberArray': validateNumberArray,\n    'colorArray': validateColorArray,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n    'state': validateState\n};\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nfunction validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n    if (valueSpec.expression && isFunction$1(unbundle(value))) {\n        return validateFunction(options);\n    }\n    else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n    }\n    else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n    }\n    else {\n        const valid = validateObject(extendBy({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n\nfunction validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n    const errors = validateString(options);\n    if (errors.length)\n        return errors;\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n    return errors;\n}\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = v8Spec) {\n    let errors = [];\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants']}));\n    }\n    return sortErrors(errors);\n}\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.state = wrapCleanErrors(injectValidateSpec(validateState));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\nfunction injectValidateSpec(validator) {\n    return function (options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\nfunction wrapCleanErrors(inner) {\n    return function (...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nfunction stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, v8Spec.$root);\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, v8Spec.layer));\n    }\n    return stringify(style, { indent: space });\n}\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    }\n    else {\n        return value;\n    }\n}\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from];\n    delete obj[from];\n}\nfunction migrateV8(style) {\n    style.version = 8;\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n    // Inline Constants\n    eachProperty(style, { paint: true, layout: true }, (property) => {\n        const value = resolveConstant(style, property.value);\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n        property.set(value);\n    });\n    delete style['constants'];\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n            if (paint['icon-size']) {\n                if (!layer.layout)\n                    layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n        }\n        else if (typeof font === 'string') {\n            return splitAndTrim(font);\n        }\n        else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n        }\n        else {\n            throw new Error('unexpected font value');\n        }\n    }\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n    return style;\n}\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nfunction expressions(style) {\n    const converted = [];\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n    eachProperty(style, { paint: true, layout: true }, ({ path, value, reference, set }) => {\n        if (isExpression(value))\n            return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        }\n        else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n    return style;\n}\n\n/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nfunction migrateColors(colorToMigrate) {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate) {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * const migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nfunction migrate(style) {\n    let migrated = false;\n    if (style.version === 7) {\n        style = migrateV8(style);\n        migrated = true;\n    }\n    if (style.version === 8) {\n        migrated = !!expressions(style);\n        migrated = true;\n    }\n    eachProperty(style, { paint: true, layout: true }, ({ value, reference, set }) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n    return style;\n}\n\nconst v8 = v8Spec;\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction: isFunction$1\n};\nconst visit = { eachLayer, eachProperty, eachSource };\n\nexport { Color, ColorArray, ColorType, CompoundExpression, EvaluationContext, FormatExpression, Formatted, FormattedSection, FormattedType, Interpolate, Literal, NullType, NumberArray, Padding, ParsingError, ProjectionDefinition, ProjectionDefinitionType, ResolvedImage, Step, StyleExpression, StylePropertyFunction, ValidationError, VariableAnchorOffsetCollection, ZoomConstantExpression, ZoomDependentExpression, classifyRings, convertFilter, convertFunction, createExpression, createFunction, createPropertyExpression, derefLayers, diff, emptyStyle, expression, expressions$1 as expressions, featureFilter, format, styleFunction as function, groupByLayout, interpolateFactory as interpolates, isExpression, isFunction$1 as isFunction, isZoomExpression, v8Spec as latest, migrate, normalizePropertyExpression, supportsPropertyExpression, typeToString as toString, typeOf, v8, validate, validateStyleMin, visit };\n//# sourceMappingURL=index.mjs.map\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 200,\n  'extra-light': 200,\n  light: 300,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  'extra-bold': 800,\n  'ultra-bold': 800,\n  heavy: 900,\n  black: 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900,\n  'ultra-black': 950,\n  'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\n/**\n * @param {string|Array<string>} fonts Mapbox GL Style fontstack or single font, e.g. `['Open Sans Regular', 'Arial Unicode MS Regular']` or `'Open Sans Regular'`.\n * @param {number} size Font size in pixels.\n * @param {string|number} [lineHeight] Line height as css line-height.\n * @returns {string} CSS font definition, e.g. `'normal 400 16px/1.2 \"Open Sans\"'`.\n */\nexport default function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        haveStyle = true;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n        haveStyle = true;\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n        haveWeight = true;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans')\n        .replace('DIN Pro', 'Barlow')\n        .replace('Arial Unicode MS', 'Arial');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * @typedef {Object} Sprite\n * @property {string} id Id of the sprite source.\n * @property {string} url URL to the sprite source.\n */\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Normalizes legacy string-based or new-style array based sprite definitions into array-based.\n * @param {string|Array<Sprite>} sprite the sprite source.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {Array<Sprite>} An array of sprite definitions with normalized URLs.\n * @private\n */\nexport function normalizeSpriteDefinition(sprite, token, styleUrl) {\n  if (typeof sprite === 'string') {\n    return [\n      {\n        'id': 'default',\n        'url': normalizeSpriteUrl(sprite, token, styleUrl),\n      },\n    ];\n  }\n\n  for (const spriteObj of sprite) {\n    spriteObj.url = normalizeSpriteUrl(spriteObj.url, token, styleUrl);\n  }\n\n  return sprite;\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\nconst mapboxSubdomains = ['a', 'b', 'c', 'd'];\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl || location.href);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return [decodeURI(urlObject.href)];\n    }\n    if (!urlObject.searchParams.has(tokenParam)) {\n      urlObject.searchParams.set(tokenParam, token);\n    }\n    return [decodeURI(urlObject.href)];\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return [\n      `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`,\n    ];\n  }\n  return mapboxSubdomains.map(\n    (sub) =>\n      `https://${sub}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`,\n  );\n}\n","import {VectorTile} from 'ol';\nimport TileState from 'ol/TileState.js';\nimport {toPromise} from 'ol/functions.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nexport const emptyObj = Object.freeze({});\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nexport function getResolutionForZoom(zoom, resolutions) {\n  const base = Math.floor(zoom);\n  const factor = Math.pow(2, zoom - base);\n  return resolutions[base] / factor;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options] Options.\n * @param {{url?: string}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.url = pendingRequests[url][0].url;\n    }\n    return pendingRequests[url][1];\n  }\n  const transformedRequest = options.transformRequest\n    ? options.transformRequest(url, resourceType) || url\n    : url;\n  const handleError = function (error) {\n    delete pendingRequests[url];\n    return Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const handleResponse = function (response) {\n    delete pendingRequests[url];\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Error fetching source ' + url));\n  };\n  const pendingRequest = toPromise(() => transformedRequest)\n    .then((transformedRequest) => {\n      if (transformedRequest instanceof Response) {\n        if (metadata) {\n          metadata.url = transformedRequest.url;\n        }\n        return handleResponse(transformedRequest);\n      }\n      if (!(transformedRequest instanceof Request)) {\n        transformedRequest = new Request(transformedRequest);\n      }\n      if (!transformedRequest.headers.get('Accept')) {\n        transformedRequest.headers.set('Accept', 'application/json');\n      }\n      if (metadata) {\n        metadata.url = transformedRequest.url;\n      }\n      return fetch(transformedRequest).then(handleResponse).catch(handleError);\n    })\n    .catch(handleError);\n  pendingRequests[url] = [transformedRequest, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    let tileLoadFunction;\n    if (options.transformRequest) {\n      tileLoadFunction = (tile, src) => {\n        const transformedRequest = options.transformRequest\n          ? options.transformRequest(src, 'Tiles') || src\n          : src;\n        if (tile instanceof VectorTile) {\n          tile.setLoader((extent, resolution, projection) => {\n            const handleResponse = function (response) {\n              response.arrayBuffer().then((data) => {\n                const format = tile.getFormat();\n                const features = format.readFeatures(data, {\n                  extent: extent,\n                  featureProjection: projection,\n                });\n                // @ts-ignore\n                tile.setFeatures(features);\n              });\n            };\n            toPromise(() => transformedRequest)\n              .then((transformedRequest) => {\n                if (transformedRequest instanceof Response) {\n                  return handleResponse(transformedRequest);\n                }\n                fetch(transformedRequest)\n                  .then(handleResponse)\n                  .catch((e) => tile.setState(TileState.ERROR));\n              })\n              .catch((e) => tile.setState(TileState.ERROR));\n          });\n        } else {\n          const img = tile.getImage();\n          toPromise(() => transformedRequest)\n            .then((transformedRequest) => {\n              if (typeof transformedRequest === 'string') {\n                img.src = transformedRequest;\n                return;\n              }\n              const handleResponse = (response) =>\n                response.blob().then((blob) => {\n                  const url = URL.createObjectURL(blob);\n                  img.addEventListener('load', () => URL.revokeObjectURL(url));\n                  img.addEventListener('error', () => URL.revokeObjectURL(url));\n                  img.src = url;\n                });\n              if (transformedRequest instanceof Response) {\n                return handleResponse(transformedRequest);\n              }\n              fetch(transformedRequest)\n                .then(handleResponse)\n                .catch((e) => tile.setState(TileState.ERROR));\n            })\n            .catch((e) => tile.setState(TileState.ERROR));\n        }\n      };\n    }\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href,\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve({\n          tileJson: Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          }),\n          tileLoadFunction,\n        });\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl[0],\n          options,\n          metadata,\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              metadata.url,\n            )[0];\n          });\n          return Promise.resolve({tileJson, tileLoadFunction});\n        });\n      }\n    } else if (glSource.tiles) {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href,\n          )[0];\n        }),\n      });\n      promise = Promise.resolve({\n        tileJson: Object.assign({}, glSource),\n        tileLoadFunction,\n      });\n    } else {\n      promise = Promise.reject(new Error('source has no `tiles` nor `url`'));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor,\n) {\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI,\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = createCanvas(area.width, area.height);\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height,\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1),\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\ncheckedFonts.on('propertychange', () => {\n  for (const key in measureCache) {\n    delete measureCache[key];\n  }\n});\n\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst webSafeFonts = [\n  'Arial',\n  'Courier New',\n  'Times New Roman',\n  'Verdana',\n  'sans-serif',\n  'serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n];\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css',\n) {\n  let fontDescriptions;\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    const font = fonts[i];\n    if (font in processedFontFamilies) {\n      continue;\n    }\n    processedFontFamilies[font] = true;\n    const cssFont = mb2css(font, 16);\n    const parts = cssFont.split(' ');\n    if (!fontDescriptions) {\n      fontDescriptions = [];\n    }\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  if (!fontDescriptions) {\n    return fonts;\n  }\n\n  (async () => {\n    await document.fonts.ready;\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n      const fontDescription = fontDescriptions[i];\n      const family = fontDescription[0];\n      if (webSafeFonts.includes(family)) {\n        continue;\n      }\n      const weight = fontDescription[1];\n      const style = fontDescription[2];\n      const loaded = await document.fonts.load(\n        `${style} ${weight} 16px \"${family}\"`,\n      );\n      if (\n        !loaded.some(\n          (f) =>\n            f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase() ===\n              family.toLowerCase() &&\n            f.weight == weight &&\n            f.style === style,\n        )\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', weight)\n          .replace(\n            '{-fontstyle}',\n            style.replace('normal', '').replace(/(.+)/, '-$1'),\n          )\n          .replace('{fontstyle}', style);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  })();\n\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {\n  Color,\n  CompoundExpression,\n  convertFunction,\n  createPropertyExpression,\n  derefLayers,\n  expressions,\n  featureFilter as createFilter,\n  isExpression,\n  isFunction,\n  v8 as spec,\n} from '@maplibre/maplibre-gl-style-spec';\nimport mb2css from 'mapbox-to-css-font';\nimport Map from 'ol/Map.js';\nimport {distance} from 'ol/coordinate.js';\nimport {getCenter} from 'ol/extent.js';\nimport {toPromise} from 'ol/functions.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  emptyObj,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\n\n/** @typedef {string|Request|Response|Promise<string|Request|Response>|Object<string, string|Request|Response|Promise<string|Request|Response>>} SpriteImageUrl */\n\n/**\n * @typedef {Object} SpriteImage\n * @property {HTMLImageElement|HTMLCanvasElement} image Image\n * @property {Array<number>} size Size\n * @property {boolean} [unSDFed] Image has been unSDFed\n */\n\n/** @typedef {Object<string, SpriteImage>} SpriteImages */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec,\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', '),\n    );\n  }\n  return compiledExpression.value;\n};\n\n// Shared camera object for global expression evaluation context\nexport const cameraObj = {zoom: 0, distanceFromCenter: 0};\n\n// Add unsupported expressions to the MapLibre GL Style spec\nCompoundExpression.register(expressions, {\n  ...CompoundExpression.definitions,\n  'pitch': [{kind: 'number'}, [], (ctx) => cameraObj.pitch || 90],\n  'distance-from-center': [\n    {kind: 'number'},\n    [],\n    (ctx) => cameraObj.distanceFromCenter || 0,\n  ],\n});\n\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  feature,\n  functionCache,\n  featureState,\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); // eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  return functions[property](cameraObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, feature, prefix, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    `${prefix}-allow-overlap`,\n    feature,\n    functionCache,\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    `${prefix}-ignore-placement`,\n    feature,\n    functionCache,\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); // eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    try {\n      filterCache[layerId] = createFilter(filter).filter;\n    } catch (e) {\n      console.warn('Filter will evaluate to false: ' + e.message); // eslint-disable-line no-console\n      filterCache[layerId] = function () {\n        return false;\n      };\n    }\n  }\n  return filterCache[layerId](cameraObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\n/**\n * @private\n * @param {string} icon Icon identifier (with prefix if not 'default')\n * @param {SpriteImages} spriteImages Sprite images.\n * @return {SpriteImage} Image.\n */\nexport function getSpriteImageForIcon(icon, spriteImages) {\n  let prefix = icon.split(':')[0];\n  if (prefix === icon) {\n    prefix = 'default';\n  }\n  return spriteImages[prefix];\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {SpriteImageUrl} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object. If multiple `sprite`s\n * are defined in the style object, this has to be an object with the sprite id as key and the\n * sprite image URL as value.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined,\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  /** @type {SpriteImages} */\n  const spriteImages = {};\n\n  if (\n    typeof spriteImageUrl === 'string' ||\n    spriteImageUrl instanceof Request ||\n    spriteImageUrl instanceof Response ||\n    spriteImageUrl instanceof Promise\n  ) {\n    spriteImageUrl = {'default': spriteImageUrl};\n  }\n\n  for (const prefix in spriteImageUrl) {\n    const imageUrl = spriteImageUrl[prefix];\n    toPromise(() => imageUrl).then(async (imageUrl) => {\n      let blobUrl;\n      if (typeof Image !== 'undefined') {\n        const img = new Image();\n        if (typeof imageUrl === 'string') {\n          img.crossOrigin = 'anonymous';\n          img.src = imageUrl;\n        } else {\n          let response;\n          if (imageUrl instanceof Request) {\n            response = await fetch(imageUrl);\n          } else if (imageUrl instanceof Response) {\n            response = imageUrl;\n          }\n          const blob = await response.blob();\n          blobUrl = URL.createObjectURL(blob);\n          img.src = blobUrl;\n        }\n        img.addEventListener('load', function load() {\n          img.removeEventListener('load', load);\n          spriteImages[prefix] = {\n            image: img,\n            size: [img.width, img.height],\n          };\n          olLayer.changed();\n          if (blobUrl) {\n            URL.revokeObjectURL(blobUrl);\n          }\n        });\n        img.addEventListener('error', function error() {\n          URL.revokeObjectURL(blobUrl);\n          img.removeEventListener('error', error);\n        });\n      } else if (\n        typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope // eslint-disable-line\n      ) {\n        const worker = /** @type {*} */ (self);\n        // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n        worker.postMessage({\n          action: 'loadImage',\n          src: imageUrl,\n        });\n        worker.addEventListener('message', function handler(event) {\n          if (\n            event.data.action === 'imageLoaded' &&\n            event.data.src === imageUrl\n          ) {\n            spriteImages[prefix] = {\n              image: event.data.image,\n              size: [event.data.image.width, event.data.image.height],\n            };\n          }\n        });\n      }\n    });\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      (Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1)\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`,\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`,\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties['mvt:layer']];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    cameraObj.zoom = zoom;\n    cameraObj.distanceFromCenter = 0;\n    const featureGeometry = feature.getGeometry();\n    const type = types[featureGeometry.getType()];\n    const map = olLayer.get('map');\n    if (map && map instanceof Map && type === 1) {\n      const size = map.getSize();\n      if (size) {\n        const mapCenter = map.getView().getCenter();\n        const featureCenter = getCenter(featureGeometry.getExtent());\n        cameraObj.distanceFromCenter =\n          distance(mapCenter, featureCenter) / resolution / size[1];\n      }\n    }\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              f,\n              functionCache,\n              featureState,\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n              if (spriteData && spriteData[icon] && spriteImage) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage.image,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n                opacity,\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          if (!('line-pattern' in paint)) {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'line-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              getValue(\n                layer,\n                'paint',\n                'line-opacity',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n          } else {\n            color = undefined;\n          }\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                f,\n                functionCache,\n                featureState,\n              ),\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    f,\n                    functionCache,\n                    featureState,\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null,\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            const spriteImage = getSpriteImageForIcon(icon, spriteImages);\n            if (\n              (spriteData && spriteData[icon] && spriteImage) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                f,\n                functionCache,\n                featureState,\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2),\n                    ),\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        2,\n                        {},\n                        undefined,\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      f,\n                      functionCache,\n                      featureState,\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const maxX = Math.max(x1, x2);\n                        const xM = midpoint[0];\n                        const yM = midpoint[1];\n                        const dotProduct =\n                          (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                        if (\n                          Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                          xM <= maxX &&\n                          xM >= minX //midpoint is on the segment and not outside it\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    f,\n                    functionCache,\n                    featureState,\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getDeclutterMode(\n                      layer,\n                      f,\n                      'icon',\n                      functionCache,\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        f,\n                        functionCache,\n                        featureState,\n                      ).slice(0);\n                      displacement[0] *= iconSize;\n                      displacement[1] *= -iconSize;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                        scale: iconSize,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(\n                              spriteImage.image,\n                              spriteImageData,\n                              iconColor || [0, 0, 0, 1],\n                            ),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor,\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage.image,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor,\n                          );\n                        }\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImage.unSDFed) {\n                            const spriteImageUnSDFed = drawSDF(\n                              spriteImage.image,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImage.size[0],\n                                height: spriteImage.size[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1},\n                            );\n                            spriteImage.image = spriteImageUnSDFed;\n                            spriteImage.unSDFed = true;\n                          }\n                        }\n                        img = spriteImage.image;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        // @ts-ignore\n                        imgSize: spriteImage.size,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          f,\n                          functionCache,\n                          featureState,\n                        ),\n                      ),\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      f,\n                      functionCache,\n                      featureState,\n                    ),\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        f,\n                        functionCache,\n                        featureState,\n                      )\n                    ],\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  f,\n                  functionCache,\n                  featureState,\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n\n          const circleTranslate = getValue(\n            layer,\n            'paint',\n            'circle-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth +\n            '.' +\n            circleTranslate[0] +\n            '.' +\n            circleTranslate[1];\n\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              displacement: [circleTranslate[0], -circleTranslate[1]],\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              f,\n              functionCache,\n              featureState,\n            ),\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            f,\n            functionCache,\n            featureState,\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            f,\n            functionCache,\n            featureState,\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata\n                    ? glStyle.metadata['ol:webfonts']\n                    : undefined,\n                )\n              : fontArray,\n            textSize,\n            textLineHeight,\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            f,\n            functionCache,\n            featureState,\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight,\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return acc;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing,\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            f,\n            functionCache,\n            featureState,\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          const declutterMode = getDeclutterMode(\n            layer,\n            f,\n            'text',\n            functionCache,\n          );\n          if (!style.getText()) {\n            style.setText(text);\n          }\n          text = style.getText();\n          if (\n            !text ||\n            ('getDeclutterMode' in text &&\n              text.getDeclutterMode() !== declutterMode)\n          ) {\n            text = new Text({\n              padding: [2, 2, 2, 2],\n              // @ts-ignore\n              declutterMode: declutterMode,\n            });\n            style.setText(text);\n          }\n          const textTransform = getValue(\n            layer,\n            'layout',\n            'text-transform',\n            f,\n            functionCache,\n            featureState,\n          );\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n              ? applyLetterSpacing(label, letterSpacing)\n              : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                f,\n                functionCache,\n                featureState,\n              ),\n            ),\n          );\n          if (typeof text.setKeepUpright === 'function') {\n            const keepUpright = getValue(\n              layer,\n              'layout',\n              'text-keep-upright',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setKeepUpright(keepUpright);\n          }\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            f,\n            functionCache,\n            featureState,\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  f,\n                  functionCache,\n                  featureState,\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            f,\n            functionCache,\n            featureState,\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            f,\n            functionCache,\n            featureState,\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              f,\n              functionCache,\n              featureState,\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  f,\n                  functionCache,\n                  featureState,\n                ),\n              ) *\n                label.length) /\n                wrappedLabel.length,\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            f,\n            functionCache,\n            featureState,\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0],\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1],\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                f,\n                functionCache,\n                featureState,\n              ),\n              opacity,\n            ),\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              f,\n              functionCache,\n              featureState,\n            ),\n            opacity,\n          );\n          if (haloColor && textHaloWidth > 0) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize,\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            f,\n            functionCache,\n            featureState,\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport {derefLayers} from '@maplibre/maplibre-gl-style-spec';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport {getCenter, getTopLeft} from 'ol/extent.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport MVT from 'ol/format/MVT.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {METERS_PER_UNIT} from 'ol/proj/Units.js';\nimport {\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getPointResolution,\n  getUserProjection,\n} from 'ol/proj.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteDefinition,\n  normalizeStyleUrl,\n} from './mapbox.js';\nimport {hillshade} from './shaders.js';\nimport {\n  _colorWithOpacity,\n  cameraObj,\n  getValue,\n  styleFunctionArgs,\n  stylefunction as applyStylefunction,\n} from './stylefunction.js';\nimport {getFonts} from './text.js';\nimport {\n  defaultResolutions,\n  emptyObj,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getResolutionForZoom,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Response|Promise<Request|string|Response>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request`, a url `string` or a `Response`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the same source as the first layer matching the provided `layer` type will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined,\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer'),\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.source && glStyle.sources[layer.source].type === type;\n          }).source;\n\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options,\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction(),\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection(),\n                  )\n                ) {\n                  //@ts-ignore\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              const tileGrid = layer.getSource().getTileGrid();\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom()) &&\n                tileGrid.getMinZoom() > 0\n              ) {\n                layer.setMaxResolution(\n                  getResolutionForZoom(\n                    Math.max(0, tileGrid.getMinZoom() - 1e-12),\n                    tileGrid.getResolutions(),\n                  ),\n                );\n              }\n            });\n          }\n\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, style;\n        const spriteData = {};\n        /** @type {import('./stylefunction.js').SpriteImageUrl} */\n        const spriteImageUrl = {};\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units],\n                );\n              }\n            }\n            style = applyStylefunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              (fonts, templateUrl = options.webfonts) =>\n                getFonts(fonts, templateUrl),\n              options.getImage,\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprites = normalizeSpriteDefinition(\n            glStyle.sprite,\n            options.accessToken,\n            styleUrl || location.href,\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n\n          Promise.all(\n            sprites.map(function (sprite) {\n              const spriteBaseUrl = new URL(sprite.url);\n              let spriteUrl =\n                spriteBaseUrl.origin +\n                spriteBaseUrl.pathname +\n                sizeFactor +\n                '.json' +\n                spriteBaseUrl.search;\n\n              return new Promise(function (resolve, reject) {\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(function (error) {\n                    spriteUrl =\n                      spriteBaseUrl.origin +\n                      spriteBaseUrl.pathname +\n                      '.json' +\n                      spriteBaseUrl.search;\n                    fetchResource('Sprite', spriteUrl, options)\n                      .then(resolve)\n                      .catch(reject);\n                  });\n              })\n                .then(function (spritesJson) {\n                  if (spritesJson === undefined) {\n                    reject(new Error('No sprites found.'));\n                  }\n\n                  let imageUrl;\n                  imageUrl =\n                    spriteBaseUrl.origin +\n                    spriteBaseUrl.pathname +\n                    sizeFactor +\n                    '.png' +\n                    spriteBaseUrl.search;\n\n                  if (options.transformRequest) {\n                    const transformed =\n                      options.transformRequest(imageUrl, 'SpriteImage') ||\n                      imageUrl;\n                    if (\n                      transformed instanceof Request ||\n                      transformed instanceof Promise\n                    ) {\n                      imageUrl = transformed;\n                    }\n                  }\n                  spriteImageUrl[sprite.id] = imageUrl;\n\n                  // add sprite data with prefix according to spec\n                  for (const spriteName in spritesJson) {\n                    const key =\n                      sprite.id == 'default'\n                        ? spriteName\n                        : `${sprite.id}:${spriteName}`;\n                    spriteData[key] = spritesJson[spriteName];\n                  }\n                })\n                .catch(function (err) {\n                  reject(\n                    new Error(\n                      `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`,\n                    ),\n                  );\n                });\n            }),\n          )\n            .then(onChange)\n            .catch(reject);\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer\n          .getLayers()\n          .insertAt(0, setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1,\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  cameraObj.zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions,\n  );\n  cameraObj.distanceFromCenter = 0;\n  let opacity;\n  const bg = getValue(\n    background,\n    'paint',\n    'background-color',\n    emptyObj,\n    functionCache,\n  );\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      emptyObj,\n      functionCache,\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache,\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        );\n        sourceOptions.tileLoadFunction = tileLoadFunction;\n        sourceOptions.format = new MVT({layerName: 'mvt:layer'});\n        const source = new VectorTileSource(sourceOptions);\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function ({tileJson, tileLoadFunction}) {\n        const source = new TileJSON({\n          interpolate:\n            options.interpolate === undefined ? true : options.interpolate,\n          transition: 0,\n          crossOrigin: 'anonymous',\n          tileJSON: tileJson,\n        });\n        //@ts-ignore\n        source.tileGrid = sourceOptionsFromTileJSON(\n          glSource,\n          tileJson,\n          options,\n        ).tileGrid;\n        if (options.projection) {\n          //@ts-ignore\n          source.projection = getProjection(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        if (tileLoadFunction) {\n          source.setTileLoadFunction(tileLoadFunction);\n        }\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n          const bboxTemplate = getBboxTemplate(projection);\n          let src = getTileUrl(tileCoord, pixelRatio, projection);\n          if (src.indexOf(bboxTemplate) != -1) {\n            const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n            src = src.replace(bboxTemplate, bbox.toString());\n          }\n          return src;\n        });\n        source.set('mapbox-source', glSource);\n        resolve(source);\n      })\n      .catch(function (error) {\n        reject(error);\n      });\n  });\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  setupRasterSource(glSource, styleUrl, options)\n    .then(function (source) {\n      layer.setSource(source);\n    })\n    .catch(function () {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    const [geoJsonUrl] = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href,\n    );\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        loader: (extent, resolution, projection, success, failure) => {\n          const url =\n            typeof extentUrl === 'function'\n              ? extentUrl(extent, resolution, projection)\n              : extentUrl;\n          fetchResource('GeoJSON', url, options)\n            .then((json) => {\n              const features = /** @type {*} */ (\n                source\n                  .getFormat()\n                  .readFeatures(json, {featureProjection: projection})\n              );\n              source.addFeatures(features);\n              success(features);\n            })\n            .catch((response) => {\n              source.removeLoadedExtent(extent);\n              failure();\n            });\n        },\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    const source = new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n      loader: (extent, resolution, projection, success, failure) => {\n        fetchResource('GeoJSON', geoJsonUrl, options)\n          .then((json) => {\n            const features = /** @type {*} */ (\n              source\n                .getFormat()\n                .readFeatures(json, {featureProjection: projection})\n            );\n            source.addFeatures(features);\n            success(features);\n          })\n          .catch((response) => {\n            source.removeLoadedExtent(extent);\n            failure();\n          });\n      },\n    });\n    return source;\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions,\n    ),\n  );\n  source.set('mapbox-source', glSource);\n  return /** @type {VectorSource} */ (source);\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  cameraObj.zoom = zoom;\n  cameraObj.distanceFromCenter = 0;\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    emptyObj,\n    functionCache,\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = getPointResolution(\n        options.projection || 'EPSG:3857',\n        event.resolution,\n        getCenter(event.extent),\n        'm',\n      );\n      cameraObj.zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions,\n      );\n      cameraObj.distanceFromCenter = 0;\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          emptyObj,\n          functionCache,\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        emptyObj,\n        functionCache,\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        emptyObj,\n        functionCache,\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        emptyObj,\n        functionCache,\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        emptyObj,\n        functionCache,\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true,\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        }),\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom),\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      // eslint-disable-next-line no-console\n      console.debug(`layers[${i}].type \"${type}\" not supported`);\n      continue;\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options,\n            ),\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options),\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options,\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {},\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source'),\n          ),\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                getResolutionForZoom(\n                  Math.max(0, minZoom - 1e-12),\n                  defaultResolutions,\n                ),\n                getResolutionForZoom(\n                  Math.max(0, sourceMinZoom - 1e-12),\n                  tileGrid.getResolutions(),\n                ),\n              ),\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(\n              getResolutionForZoom(maxZoom, defaultResolutions),\n            );\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(\n            getResolutionForZoom(\n              Math.max(0, minZoom - 1e-12),\n              defaultResolutions,\n            ),\n          );\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options),\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options,\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId),\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.',\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id),\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nexport function updateMapboxSource(mapOrGroup, id, mapboxSource) {\n  const currentSource = getSource(mapOrGroup, id);\n  const layers = /** @type {Array<VectorLayer|TileLayer|VectorTileLayer>} */ (\n    mapOrGroup\n      .getLayers()\n      .getArray()\n      .filter(function (layer) {\n        return (\n          (layer instanceof VectorLayer ||\n            layer instanceof TileLayer ||\n            layer instanceof VectorTileLayer) &&\n          layer.getSource() === currentSource\n        );\n      })\n  );\n  const metadata = mapOrGroup.get('mapbox-metadata');\n  let newSourcePromise;\n  switch (mapboxSource.type) {\n    case 'vector':\n      newSourcePromise = setupVectorSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    case 'geojson':\n      newSourcePromise = Promise.resolve(\n        setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options),\n      );\n      break;\n    case 'raster':\n    case 'raster-dem':\n      newSourcePromise = setupRasterSource(\n        mapboxSource,\n        metadata.styleUrl,\n        metadata.options,\n      );\n      break;\n    default:\n      return Promise.reject(\n        new Error('Unsupported source type ' + mapboxSource.type),\n      );\n  }\n  newSourcePromise.then(function (newSource) {\n    layers.forEach(function (layer) {\n      layer.setSource(newSource);\n    });\n  });\n  return newSourcePromise;\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.',\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1,\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1,\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|LayerGroup|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|LayerGroup|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","import BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\nimport MVT from 'ol/format/MVT.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport {applyBackground, applyStyle} from './apply.js';\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n\n/**\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * Instances of this class emit an `error` event when an error occurs during style loading:\n *\n *     layer.on('error', function() {\n *       console.error('Error loading style');\n *     }\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n */\nexport default class MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT({layerName: 'mvt:layer'}),\n    });\n\n    super({\n      source: source,\n      background: options.background === false ? null : options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    const promises = [\n      applyStyle(this, url, options.layers || options.source, {\n        accessToken: this.accessToken,\n      }),\n    ];\n    if (this.getBackground() === undefined) {\n      promises.push(\n        applyBackground(this, options.styleUrl, {\n          accessToken: this.accessToken,\n        }),\n      );\n    }\n    Promise.all(promises)\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n  }\n}\n"],"names":["TILELOADSTART","TILELOADEND","TILELOADERROR","TileImage","constructor","options","super","attributions","cacheSize","projection","state","tileGrid","tileLoadFunction","defaultTileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","interpolate","undefined","key","attributionsCollapsible","zDirection","this","crossOrigin","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutterForProjection","getProjection","getGutter","getKey","getInterpolate","getTileGridForProjection","thisProj","projKey","createTile_","z","x","y","pixelRatio","tileCoord","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tile","IDLE","EMPTY","tileOptions","addEventListener","CHANGE","handleTileChange","bind","getTile","sourceProjection","getTileInternal","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTilePixelRatio","setRenderReprojectionEdges","render","changed","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","UrlTile","generateTileUrlFunction_","prototype","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","getUrls","event","uid","tileState","getState","type","LOADING","ERROR","LOADED","dispatchEvent","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","setKey","join","$version","$root","version","required","values","name","metadata","center","value","centerAltitude","zoom","bearing","period","units","pitch","roll","light","sky","terrain","sources","sprite","glyphs","layers","source","source_vector","vector","tiles","bounds","length","scheme","xyz","tms","minzoom","maxzoom","attribution","promoteId","volatile","source_raster","raster","tileSize","source_raster_dem","encoding","terrarium","mapbox","custom","redFactor","blueFactor","greenFactor","baseShift","source_geojson","geojson","data","buffer","maximum","minimum","filter","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","source_video","video","coordinates","source_image","image","id","fill","line","symbol","circle","heatmap","hillshade","background","layout","paint","layout_background","visibility","visible","none","layout_fill","expression","interpolated","parameters","layout_circle","layout_heatmap","layout_line","butt","round","square","bevel","miter","requires","layout_symbol","point","auto","never","always","cooperative","map","viewport","width","height","both","tokens","left","right","top","bottom","horizontal","vertical","uppercase","lowercase","layout_raster","layout_hillshade","filter_operator","all","any","has","geometry_type","Point","LineString","Polygon","function_stop","expression$1","anchor","position","color","intensity","exaggeration","paint_fill","paint_line","paint_circle","paint_heatmap","paint_symbol","overridable","paint_raster","linear","nearest","paint_hillshade","standard","basic","combined","igor","multidirectional","paint_background","duration","delay","v8Spec","layer","stops","base","property","identity","exponential","interval","categorical","colorSpace","rgb","lab","hcl","constant","refProperties","deref","parent","result","k","forEach","derefLayers","slice","create","i","ref","ValidationError","message","identifier","__line__","extendBy","output","inputs","input","ExpressionParsingError","Error","Scope","bindings","concat","get","NullType","kind","NumberType","StringType","BooleanType","ColorType","ProjectionDefinitionType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","PaddingType","ColorArrayType","NumberArrayType","ResolvedImageType","VariableAnchorOffsetCollectionType","array","itemType","N","typeToString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","Array","isArray","verifyType","sample","Xn","Yn","Zn","t0","t1","t2","t3","deg2rad","Math","PI","rad2deg","constrainAngle","angle","rgbToLab","r","g","b","alpha","rgb2xyz","xyz2lab","l","pow","labToRgb","a","isNaN","lab2xyz","xyz2rgb","rgbToHcl","rgbColor","c","sqrt","h","atan2","NaN","hclToRgb","cos","sin","hslToRgb","s","f","n","min","max","hasOwn","object","hasOwnProperty","call","getOwn","parseCssColor","toLowerCase","trim","namedColorsMatch","namedColors","startsWith","hexRegexp","test","step","parseHex","rgbRegExp","rgbMatch","match","_","rp","f1","gp","f2","bp","f3","ap","argFormat","valFormat","maxValue","rgba","clamp","parseAlpha","validateNumbers","hslRegExp","hslMatch","hsla","hex","parseInt","padEnd","asPercentage","Number","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","interpolateNumber","from","to","interpolateArray","d","Color","premultiplied","overwriteGetter","parse","Infinity","getterKey","lazyValue","defineProperty","toString","spaceKey","hue0","chroma0","light0","alphaF","hue1","chroma1","light1","alphaT","hue","chroma","dh","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","VERTICAL_ALIGN_OPTIONS","FormattedSection","text","scale","fontStack","textColor","verticalAlign","Formatted","sections","fromString","unformatted","isEmpty","section","factory","Padding","val","JSON","stringify","NumberArray","ColorArray","parsed_val","colors","push","RuntimeError","toJSON","Set","VariableAnchorOffsetCollection","anchorValue","offsetValue","fromValues","toValues","fx","fy","tx","ty","ResolvedImage","available","ProjectionDefinition","validateRGBA","isValue","mixed","item","typeOf","valueToString","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","types$1","string","number","boolean","Assertion","floor","parsed","ctx","fn","every","arg","types","Coercion","Boolean","parseColor","pad","coll","num","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","Map","availableImages","canonical","geometryType","geometry","canonicalID","properties","cached","set","ParsingContext","registry","isConstantFunc","path","scope","errors","part","_isConstant","expr","index","_parse","annotate","typeAnnotation","op","Expr","actual","includes","ec","e","keys","Let","binding","Var","boundExpression","At","In","needle","haystack","indexOf","IndexOf","fromIndex","rawIndex","Match","inputType","outputType","cases","outputs","otherwise","labels","labelContext","label","abs","MAX_SAFE_INTEGER","out","Case","branches","Slice","beginIndex","endIndex","findStopLessThanOrEqualTo","lastIndex","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labelKey","valueKey","stopCount","getDefaultExportFromCjs","__esModule","unitbezier","hasRequiredUnitbezier","requireUnitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","x2","d2","solve","unitbezierExports","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","ub","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","parsedArgs","needsAnnotation","requestedImageName","argCount","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","CollatorExpression","NumberFormat","currency","minFractionDigits","maxFractionDigits","style","minimumFractionDigits","maximumFractionDigits","format","FormatExpression","firstArg","nextTokenMayBeObject","font","lastExpression","content","evaluateSection","evaluatedContent","ImageExpression","evaluatedImageName","Length","EXTENT","getTileCoordinates","p","mercatorXfromLng","mercatorYfromLat","tilesAtZoom","getLngLatFromTileCoord","coord","lngFromMercatorXfromLng","latFromMercatorY","lng","mercatorX","lat","log","mercatorY","atan","exp","updateBBox","bbox","boxWithinBox","bbox1","bbox2","rayIntersect","p1","p2","pointOnBoundary","x1","y1","y2","segmentIntersectSegment","vectorP","vectorQ","perp","twoSided","lineIntersectPolygon","polygon","ring","j","pointWithinPolygon","rings","trueIfOnBoundary","inside","pointWithinPolygons","polygons","lineStringWithinPolygon","lineStringWithinPolygons","v1","v2","q1","q2","x3","y3","det1","det2","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","polygonGeometry","tilePolygon","tilePolygons","linesWithinPolygons","Within","geometries","polygonsCoords","features","multipolygonWrapper","TinyQueue","_down","_up","pop","peek","pos","current","halfLength","bestChild","quickselect","arr","defaultCompare","m","sd","newLeft","newRight","swap","tmp","classifyRings","maxRings","len","ccw","area","calculateSignedArea","compareAreas","sum","RE","FE","E2","RAD","CheapRuler","coslat","w2","w","kx","ky","distance","dx","wrap","dy","pointOnLine","minX","minY","minI","minT","minDist","sqDist","deg","MinPointsSize","MinLinePointsSize","compareDistPair","getRangeSize","range","isRangeSafe","threshold","splitRange","isLine","size","size1","getBBox","coords","getPolygonBBox","isValidBBox","bboxToBBoxDistance","ruler","pointToLineDistance","nearestPoint","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","range1","line2","range2","rangeSafe","dist","pointsToPointsDistance","points1","points2","pointToPolygonDistance","front","back","lineToPolygonDistance","polygonIntersect","poly1","poly2","polygonToPolygonDistance","polygon1","polygon2","currentMiniDist","ring1","len1","ring2","len2","updateQueue","distQueue","miniDist","rangeA","tempDist","updateQueueTwoSets","pointSet1","pointSet2","pointsToPolygonDistance","distPair","newRangesA","pointSetToPointSetDistance","isLine1","isLine2","rangeB","threshold1","threshold2","sublibe","newRangesB","pointToGeometryDistance","pointPosition","flat","lineStringToGeometryDistance","linePositions","polygonToGeometryDistance","toSimpleGeometry","lineString","Distance","GlobalState","_a","globalState","expressions$1","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","params","isExpressionConstant","argParseFailed","signatures","stringifySignature","actualTypes","register","obj","v","binarySearch","varargs","isTypeAnnotation","childrenConstant","child","isFeatureConstant","isGlobalPropertyConstant","isStateConstant","success","supportsPropertyExpression","spec","supportsZoomExpression","supportsInterpolation","getType","isFunction$1","heatmapDensity","elevation","lineProgress","accumulated","LN2","E","LN10","asin","acos","ceil","isSupportedScript","toUpperCase","StyleExpression","propertySpec","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","globalStateRefs","findGlobalStateRefs","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","expressionInput","isFeatureConstantResult","isZoomConstant","zoomCurve","findZoomCurve","childResult","results","add","childExpression","enum","formatted","padding","numberArray","colorArray","projectionDefinition","resolvedImage","variableAnchorOffsetCollection","default","isExpressionFilter","filterSpec","featureFilter","needGeometry","getGlobalStateRefs","convertFilter$1","compiled","err","geometryNeeded","globalProperties","converted","convertComparisonOp$1","convertNegation","convertDisjunctionOp","convertInOp$1","convertHasOp$1","filters","sort","convertLiteral","convertFunction","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","stop","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","splice","getInterpolateOperator","featureFunctionParameters","featureFunctionStops","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","coalesce","getFallback","defaultValue","isStep","curve","re","exec","literal","validateConstants","constants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","validateSpec","objectKey","elementSpecKey","split","elementSpec","validateElement","validateArray","arraySpec","validateArrayElement","arrayElementValidator","arrayElementSpec","function","arrayIndex","validateNumber","validateFunction","functionValueSpec","stopKeyType","previousStopDomainValue","previousStopDomainZoom","stopDomainValues","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","propertyType","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","layerId","otherLayer","sourceType","validateString","validateRasterDEMSource","sourceName","rasterDEM","rasterDEMSpec","rootType","isCustomEncoding","customEncodingKeys","encodingName","validatePromoteId","validateSource","replace","prop","mapExpr","reduceExpr","validateLight","lightSpec","validateSky","skySpec","validateTerrain","terrainSpec","validateFormatted","validateImage","validatePadding","validateNumberArray","validateColorArray","validateVariableAnchorOffsetCollection","validateSprite","allSpriteIds","allSpriteURLs","pairSpec","validateProjection","projectionSpec","validateProjectionDefinition","isProjectionDefinitionValue","isPropertyValueSpecification","isObjectLiteral","anything","validateState","VALIDATORS","validate","valid","validateGlyphsUrl","validateStyleMin","sortErrors","injectValidateSpec","validator","wrapCleanErrors","inner","apply","paintProperty","layoutProperty","v8","fontWeights","thin","hairline","book","regular","normal","plain","roman","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","fonts","lineHeight","cssData","haveWeight","haveStyle","weight","fontFamilies","ii","parts","maybeWeight","previousPart","fontFamily","mapboxBaseUrl","getMapboxPath","normalizeSpriteDefinition","token","styleUrl","normalizeSpriteUrl","spriteObj","mapboxPath","decodeURI","URL","href","normalizeStyleUrl","location","mapboxSubdomains","normalizeSourceUrl","tokenParam","urlObject","searchParams","sizeFactor","window","devicePixelRatio","sub","emptyObj","freeze","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","olLayer","functionCache","filterCache","degrees","defaultResolutions","resolutions","res","createCanvas","WorkerGlobalScope","self","OffscreenCanvas","canvas","document","createElement","getZoomForResolution","resolution","candidate","zoomFactor","getResolutionForZoom","factor","pendingRequests","fetchResource","resourceType","transformedRequest","transformRequest","handleError","Promise","reject","handleResponse","response","ok","json","pendingRequest","then","Response","Request","headers","fetch","catch","getGlStyle","glStyleOrUrl","resolve","accessToken","tilejsonCache","getTileJson","glSource","cacheKey","promise","VectorTile","setLoader","extent","arrayBuffer","getFormat","readFeatures","featureProjection","setFeatures","setState","TileState","img","blob","createObjectURL","revokeObjectURL","normalizedSourceUrl","accessTokenParam","tileJson","assign","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imgSize","imageCanvas","imageContext","getContext","drawImage","imageData","getImageData","globalCompositeOperation","fillStyle","jj","arc","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","measureContext","getMeasureContext","measureText","measureCache","wrapText","em","hardLines","wrappedText","words","oneEm","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","on","webSafeFonts","processedFontFamilies","getFonts","templateUrl","fontDescriptions","cssFont","ready","fontDescription","family","loaded","load","fontUrl","querySelector","markup","rel","head","appendChild","expressionData","rawExpression","compiledExpression","cameraObj","distanceFromCenter","renderFeatureCoordinates","renderFeature","getValue","layoutOrPaint","functions","isExpr","getDeclutterMode","prefix","allowOverlap","ignorePlacement","evaluateFilter","renderTransparentEnabled","colorWithOpacity","opacity","templateRegEx","fromTemplate","getSpriteImageForIcon","icon","spriteImages","recordLayer","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","arguments","imageUrl","async","blobUrl","Image","removeEventListener","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","Stroke","Fill","styles","styleFunction","onlyLayer","getProperties","featureGeometry","getGeometry","getSize","mapCenter","getView","getCenter","featureCenter","getExtent","getId","featureBelongsToLayer","stylesLength","layerData","stroke","strokeColor","fillIcon","getFill","getStroke","getText","Style","setZIndex","icon_cache_key","pattern","globalAlpha","createPattern","setColor","setWidth","setLineCap","setLineJoin","setMiterLimit","setLineDash","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","iconImage","styleGeom","imageElement","iconRotationAlignment","geom","getFlatMidpoint","getFlatMidpoints","midpoint","placement","stride","getStride","getFlatCoordinates","maxX","xM","yM","dotProduct","iconSize","iconColor","iconCacheKey","declutterMode","displacement","iconOptions","rotateWithView","Icon","offset","sdf","unSDFed","spriteImageUnSDFed","setGeometry","setRotation","setOpacity","setAnchor","setImage","setText","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","Circle","radius","fontArray","textField","reduce","acc","chunk","chunkFont","Text","textTransform","wrappedLabel","setFont","setKeepUpright","keepUpright","textAnchor","textAlign","setPlacement","setRepeat","symbolSpacing","setOverflow","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","setRotateWithView","setMaxAngle","setTextAlign","textBaseline","setTextBaseline","textJustify","setJustify","setOffsetX","setOffsetY","setFill","halfTextSize","setStroke","textPadding","getPadding","setStyle","elevationImage","elevationData","shadeData","Uint8ClampedArray","dp","maxY","pixel","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","pixelX","pixelY","x0","y0","z0","z1","dzdx","dzdy","slope","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","ImageData","getTileResolutions","maxZoom","getResolutions","completeOptions","applyStyle","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","find","assignSource","setupVectorSource","targetSource","getSource","format_","getAttributions","setAttributions","defaultLoadFunction","getTileGrid","setSource","getMaxResolution","getMinZoom","setMaxResolution","setupGeoJSONSource","url_","getUrl","spriteScale","onChange","getUnits","webfonts","getStyle","sprites","spriteBaseUrl","spriteUrl","origin","pathname","search","spritesJson","transformed","spriteName","getSourceIdByRef","extentFromTileJSON","tileJSON","tr","sourceOptionsFromTileJSON","tileJSONSource","TileJSON","tileJSONDoc","getTileJSON","projectionExtent","minZoom","sourceOptions","TileGrid","getOrigin","getTileSize","getBackgroundColor","glLayer","bg","setupBackgroundLayer","div","className","Layer","Source","frameState","viewState","backgroundColor","MVT","layerName","setupVectorLayer","declutter","getBboxTemplate","projCode","getCode","setupRasterSource","getTileUrl","bboxTemplate","getTileCoordExtent","setupRasterLayer","Tile","setupHillshadeLayer","tileLayer","Raster","operationType","operation","geoJsonFormat","GeoJSON","dataProjection","geoJsonUrl","extentUrl","loader","failure","addFeatures","removeLoadedExtent","strategy","setupGeoJSONLayer","prerenderRasterLayer","updateRasterLayerProperties","manageVisibility","mapOrGroup","layerMapboxLayerids","mapboxLayer","setVisible","setupLayer","glLayers","hillshadeLayer","glSourceId","processStyle","promises","view","isDef","getRotation","View","maxResolution","setView","setCenter","getZoom","setResolution","fit","layerIds","finalizeLayer","debug","mapOrGroupOrElement","HTMLElement","target","sourceMinZoom","setMinResolution","getLayers","getArray","once"],"sourceRoot":""}